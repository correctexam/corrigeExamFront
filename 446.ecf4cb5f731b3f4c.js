(()=>{var rt,Ji={3446:(rt,H,o)=>{"use strict";var p={};o.r(p),o.d(p,{maxNorm:()=>Ct,minMaxNorm:()=>Yt,nonNeg:()=>ee,unitNorm:()=>ie});var P={};o.r(P),o.d(P,{constant:()=>Be,glorotNormal:()=>pt,glorotUniform:()=>ot,heNormal:()=>Kt,heUniform:()=>ae,identity:()=>Qe,leCunNormal:()=>ne,leCunUniform:()=>ce,ones:()=>_e,orthogonal:()=>de,randomNormal:()=>we,randomUniform:()=>Ie,truncatedNormal:()=>Ne,varianceScaling:()=>g,zeros:()=>Ae});var I={};o.r(I),o.d(I,{Layer:()=>Dt.mh,RNN:()=>qe,RNNCell:()=>_n,activation:()=>El,add:()=>Nl,alphaDropout:()=>hu,average:()=>Cl,averagePooling1d:()=>hi,averagePooling2d:()=>di,averagePooling3d:()=>mi,avgPool1d:()=>Ul,avgPool2d:()=>Wl,avgPool3d:()=>$l,avgPooling1d:()=>Fl,avgPooling2d:()=>kl,avgPooling3d:()=>Kl,batchNormalization:()=>xl,bidirectional:()=>su,categoryEncoding:()=>gu,centerCrop:()=>fu,concatenate:()=>Sl,conv1d:()=>cl,conv2d:()=>hl,conv2dTranspose:()=>dl,conv3d:()=>ml,conv3dTranspose:()=>fl,convLstm2d:()=>ql,convLstm2dCell:()=>tu,cropping2D:()=>gl,dense:()=>vl,depthwiseConv2d:()=>_l,dot:()=>Ll,dropout:()=>Tl,elu:()=>rl,embedding:()=>wl,flatten:()=>Dl,gaussianDropout:()=>cu,gaussianNoise:()=>uu,globalAveragePooling1d:()=>Vl,globalAveragePooling2d:()=>jl,globalMaxPool1d:()=>iu,globalMaxPool2d:()=>au,globalMaxPooling1d:()=>Ua,globalMaxPooling2d:()=>Fa,gru:()=>Gl,gruCell:()=>Zl,input:()=>Pn,inputLayer:()=>sl,layerNormalization:()=>Bl,leakyReLU:()=>al,lstm:()=>Xl,lstmCell:()=>Ql,masking:()=>du,maxPool1d:()=>ou,maxPool2d:()=>lu,maxPooling1d:()=>Wa,maxPooling2d:()=>ka,maxPooling3d:()=>Hl,maximum:()=>Rl,minimum:()=>Pl,multiply:()=>Ml,permute:()=>Il,prelu:()=>ol,randomWidth:()=>yu,reLU:()=>il,repeatVector:()=>Ol,rescaling:()=>mu,reshape:()=>Al,resizing:()=>pu,rnn:()=>eu,separableConv2d:()=>pl,simpleRNN:()=>Yl,simpleRNNCell:()=>Jl,softmax:()=>ll,spatialDropout1d:()=>bl,stackedRNNCells:()=>nu,thresholdedReLU:()=>ul,timeDistributed:()=>ru,upSampling2d:()=>yl,zeroPadding2d:()=>zl});var f={};o.r(f),o.d(f,{MAPE:()=>Nu,MSE:()=>Ru,binaryAccuracy:()=>_u,binaryCrossentropy:()=>Eu,categoricalAccuracy:()=>Tu,categoricalCrossentropy:()=>bu,cosineProximity:()=>Au,mape:()=>Cu,meanAbsoluteError:()=>Iu,meanAbsolutePercentageError:()=>wu,meanSquaredError:()=>Su,mse:()=>Pu,precision:()=>Du,r2Score:()=>Mu,recall:()=>Ou,sparseCategoricalAccuracy:()=>vu});var v={};o.r(v),o.d(v,{modelFromJSON:()=>Ks});var A={};o.r(A),o.d(A,{l1:()=>xu,l1l2:()=>Lu,l2:()=>Bu});var _={};o.r(_),o.d(_,{json:()=>ku});var C={};o.r(C),o.d(C,{json:()=>$u});var S={};o.r(S),o.d(S,{json:()=>Ku});var L={};o.r(L),o.d(L,{json:()=>Vu});var O={};o.r(O),o.d(O,{json:()=>ju});var N={};o.r(N),o.d(N,{json:()=>Hu});var B={};o.r(B),o.d(B,{json:()=>Gu});var z={};o.r(z),o.d(z,{json:()=>Zu});var V={};o.r(V),o.d(V,{json:()=>Xu});var U={};o.r(U),o.d(U,{json:()=>Qu});var E={};o.r(E),o.d(E,{json:()=>Yu});var T={};o.r(T),o.d(T,{json:()=>Ju});var K={};o.r(K),o.d(K,{json:()=>qu});var it={};o.r(it),o.d(it,{json:()=>tc});var J={};o.r(J),o.d(J,{json:()=>ec});var y={};o.r(y),o.d(y,{json:()=>nc});var F={};o.r(F),o.d(F,{json:()=>sc});var tt={};o.r(tt),o.d(tt,{json:()=>rc});var at={};o.r(at),o.d(at,{json:()=>ic});var j={};o.r(j),o.d(j,{OP_SCOPE_SUFFIX:()=>W.zvA,abs:()=>W.WnP,acos:()=>W.Khb,acosh:()=>W.__u,add:()=>W.IHx,addN:()=>W.QBD,all:()=>W.$6P,any:()=>W.YjB,argMax:()=>W.NqF,argMin:()=>W.vHJ,asin:()=>W.ZRM,asinh:()=>W.VfV,atan:()=>W.z4N,atan2:()=>W.fvJ,atanh:()=>W.C80,avgPool:()=>W.wS1,avgPool3d:()=>W.uR5,basicLSTMCell:()=>W.zEQ,batchNorm:()=>W.tgs,batchNorm2d:()=>W.Dxk,batchNorm3d:()=>W.JY5,batchNorm4d:()=>W.p3b,batchToSpaceND:()=>W.E4h,bincount:()=>W.yE8,bitwiseAnd:()=>W.ycw,booleanMaskAsync:()=>W.anm,broadcastArgs:()=>W.XsQ,broadcastTo:()=>W.UFq,buffer:()=>W.f3b,cast:()=>W.pju,ceil:()=>W.mDi,clipByValue:()=>W.iUl,clone:()=>W.d9v,complex:()=>W.PYB,concat:()=>W.zoF,concat1d:()=>W.gME,concat2d:()=>W.Izb,concat3d:()=>W.MNy,concat4d:()=>W.ZaL,conv1d:()=>W.PAt,conv2d:()=>W.Tek,conv2dTranspose:()=>W.bc,conv3d:()=>W.pdZ,conv3dTranspose:()=>W.$QV,cos:()=>W.mCk,cosh:()=>W.f9Y,cosineWindow:()=>W.mew,cumprod:()=>W.$Gn,cumsum:()=>W.zbp,denseBincount:()=>W.ppE,depthToSpace:()=>W.nTT,depthwiseConv2d:()=>W.B10,diag:()=>W.Ka3,dilation2d:()=>W.WmZ,div:()=>W.hiC,divNoNan:()=>W.NTj,dot:()=>W.AKD,dropout:()=>W.rvX,einsum:()=>W.WYO,elu:()=>W.pyx,enclosingPowerOfTwo:()=>W.GRh,ensureShape:()=>W.EDe,equal:()=>W.DgJ,erf:()=>W.qNN,euclideanNorm:()=>W.d2q,exp:()=>W.Qqt,expandDims:()=>W.dt4,expm1:()=>W.t$B,eye:()=>W.iyy,fft:()=>W.kp_,fill:()=>W.hlL,floor:()=>W.GWj,floorDiv:()=>W.qPi,fused:()=>W.imm,gather:()=>W.Iqj,gatherND:()=>W.dbB,greater:()=>W.pjt,greaterEqual:()=>W.brS,ifft:()=>W.Sxn,imag:()=>W.asL,image:()=>W.BHj,inTopKAsync:()=>W.V3u,irfft:()=>W.wx0,isFinite:()=>W.xVT,isInf:()=>W.UWc,isNaN:()=>W.i2d,leakyRelu:()=>W.hi7,less:()=>W.d9m,lessEqual:()=>W.zN1,linalg:()=>W.$r2,linspace:()=>W.SX3,localResponseNormalization:()=>W.G9k,log:()=>W.cM7,log1p:()=>W.Krr,logSigmoid:()=>W.e_t,logSoftmax:()=>W.CmS,logSumExp:()=>W.l_t,logicalAnd:()=>W.HvI,logicalNot:()=>W.hJK,logicalOr:()=>W.K5V,logicalXor:()=>W.egP,losses:()=>W.MB5,lowerBound:()=>W.eab,matMul:()=>W.OI3,max:()=>W.Fp7,maxPool:()=>W._sB,maxPool3d:()=>W.YQQ,maxPoolWithArgmax:()=>W.Ip$,maximum:()=>W.gWQ,mean:()=>W.J69,meshgrid:()=>W.ry_,min:()=>W.VV$,minimum:()=>W.LTh,mirrorPad:()=>W.VdP,mod:()=>W.wQq,moments:()=>W.Gi7,movingAverage:()=>W.p_,mul:()=>W.dC7,multiRNNCell:()=>W.rq4,multinomial:()=>W.SJ_,neg:()=>W.W76,norm:()=>W.KOy,notEqual:()=>W.Quu,oneHot:()=>W.lfX,ones:()=>W.iUs,onesLike:()=>W.JpU,op:()=>W.op,outerProduct:()=>W.N2O,pad:()=>W.vku,pad1d:()=>W.pNR,pad2d:()=>W.koy,pad3d:()=>W.t1L,pad4d:()=>W.lGY,pool:()=>W.d_R,pow:()=>W.sQ3,prelu:()=>W.AL3,print:()=>W.S0v,prod:()=>W.WVs,raggedGather:()=>W.$gW,raggedRange:()=>W.VT$,raggedTensorToTensor:()=>W.N89,rand:()=>W.TN_,randomGamma:()=>W.wzB,randomNormal:()=>W.nGf,randomStandardNormal:()=>W.ruB,randomUniform:()=>W.LGj,randomUniformInt:()=>W.pe5,range:()=>W.w6H,real:()=>W.kwC,reciprocal:()=>W.M25,relu:()=>W.UYe,relu6:()=>W.btT,reshape:()=>W.XLQ,reverse:()=>W.GYS,reverse1d:()=>W.SDf,reverse2d:()=>W.diP,reverse3d:()=>W.sx7,reverse4d:()=>W.mG2,rfft:()=>W.QEs,round:()=>W.NMM,rsqrt:()=>W.bp0,scalar:()=>W.iD$,scatterND:()=>W.snQ,searchSorted:()=>W.zcT,selu:()=>W.U8D,separableConv2d:()=>W.U_I,setdiff1dAsync:()=>W.ODp,sigmoid:()=>W.XD2,sign:()=>W.Xxe,signal:()=>W.tdS,sin:()=>W.O$l,sinh:()=>W.R_K,slice:()=>W.tPi,slice1d:()=>W.jZU,slice2d:()=>W.SmN,slice3d:()=>W.CnO,slice4d:()=>W.p0P,softmax:()=>W.XAC,softplus:()=>W.Wvh,spaceToBatchND:()=>W.fBT,sparse:()=>W.rVs,sparseToDense:()=>W.ers,spectral:()=>W.uN7,split:()=>W.Vl2,sqrt:()=>W._b3,square:()=>W.h62,squaredDifference:()=>W.$i,squeeze:()=>W.L9e,stack:()=>W.knu,step:()=>W.Nbs,stridedSlice:()=>W.NXj,string:()=>W.Z_8,sub:()=>W.luU,sum:()=>W.Smz,tan:()=>W.ORZ,tanh:()=>W.AEp,tensor:()=>W.XeE,tensor1d:()=>W.RRF,tensor2d:()=>W.odF,tensor3d:()=>W.wOQ,tensor4d:()=>W.yXz,tensor5d:()=>W.Bfx,tensor6d:()=>W.xZs,tensorScatterUpdate:()=>W.Pg0,tile:()=>W.Gg6,topk:()=>W.hg7,transpose:()=>W.p4s,truncatedNormal:()=>W.Xu6,unique:()=>W.Two,unsortedSegmentSum:()=>W.pUJ,unstack:()=>W.HHK,upperBound:()=>W.GaM,variable:()=>W.VD$,where:()=>W.arb,whereAsync:()=>W.itS,zeros:()=>W.lls,zerosLike:()=>W.P84});var w={};o.r(w),o.d(w,{CSVDataset:()=>_o,Dataset:()=>or,FileDataSource:()=>Do,TextLineDataset:()=>po,URLDataSource:()=>Oo,array:()=>yh,csv:()=>Nh,func:()=>Ch,generator:()=>Sh,microphone:()=>Ph,version_data:()=>Ao.i,webcam:()=>Rh,zip:()=>_h});var x={};o.r(x),o.d(x,{Abs:()=>i.SYM,Acos:()=>i.VGw,Acosh:()=>i.SpW,AdadeltaOptimizer:()=>i.zJI,AdagradOptimizer:()=>i.HeW,AdamOptimizer:()=>i.a4z,AdamaxOptimizer:()=>i.DBS,Add:()=>i.mm_,AddN:()=>i.Xze,All:()=>i.oT6,Any:()=>i.IKK,ArgMax:()=>i.sJF,ArgMin:()=>i.aJk,Asin:()=>i.M2y,Asinh:()=>i.qw7,Atan:()=>i.jMg,Atan2:()=>i.QCc,Atanh:()=>i.Oyi,AvgPool:()=>i.JhU,AvgPool3D:()=>i._k9,AvgPool3DGrad:()=>i.IMb,AvgPoolGrad:()=>i.ROF,BatchMatMul:()=>i.XLW,BatchToSpaceND:()=>i.zws,Bincount:()=>i.zvY,BitwiseAnd:()=>i.hCO,BroadcastArgs:()=>i.eEB,BroadcastTo:()=>i.Ly9,Callback:()=>$a,CallbackList:()=>fe.BO,Cast:()=>i.RFZ,Ceil:()=>i.gJX,ClipByValue:()=>i.xnO,Complex:()=>i.Zz9,ComplexAbs:()=>i.yj2,Concat:()=>i.Eh3,Conv2D:()=>i.mhS,Conv2DBackpropFilter:()=>i.wUP,Conv2DBackpropInput:()=>i.wm,Conv3D:()=>i.x12,Conv3DBackpropFilterV2:()=>i.o2y,Conv3DBackpropInputV2:()=>i.ik2,Cos:()=>i.mc4,Cosh:()=>i.TR1,CropAndResize:()=>i.VcC,Cumprod:()=>i.Byc,Cumsum:()=>i.iHb,CustomCallback:()=>fe.iT,DataStorage:()=>i.JLz,DenseBincount:()=>i.QRR,DepthToSpace:()=>i.T0n,DepthwiseConv2dNative:()=>i.cie,DepthwiseConv2dNativeBackpropFilter:()=>i.sL$,DepthwiseConv2dNativeBackpropInput:()=>i.y7R,Diag:()=>i.$w,Dilation2D:()=>i.p4S,Dilation2DBackpropFilter:()=>i.Vn9,Dilation2DBackpropInput:()=>i.ekb,Draw:()=>i.hGc,ENV:()=>i.ViN,EarlyStopping:()=>Va,Einsum:()=>i.$g6,Elu:()=>i.SX0,EluGrad:()=>i.HEU,Environment:()=>i.qAh,Equal:()=>i.hdR,Erf:()=>i.Omj,Exp:()=>i.NEP,ExpandDims:()=>i.YFo,Expm1:()=>i.Y0y,FFT:()=>i.vwp,Fill:()=>i.deh,FlipLeftRight:()=>i.Uyb,Floor:()=>i.OR,FloorDiv:()=>i.jeX,FromPixels:()=>i.eBW,FusedBatchNorm:()=>i.sHE,FusedConv2D:()=>i._V0,FusedDepthwiseConv2D:()=>i.luS,GPGPUContext:()=>zh.A,GatherNd:()=>i.q1x,GatherV2:()=>i.qi_,GraphModel:()=>Ni,Greater:()=>i.iZT,GreaterEqual:()=>i.Acj,History:()=>fe.Ay,IFFT:()=>i.Qg5,Identity:()=>i.iJz,Imag:()=>i.J_u,InputSpec:()=>Dt.Zg,IsFinite:()=>i.avt,IsInf:()=>i.iWB,IsNan:()=>i.r7n,KernelBackend:()=>i.Zuw,LRN:()=>i.eZ0,LRNGrad:()=>i.Hhh,LayerVariable:()=>Js.fU,LayersModel:()=>je,LeakyRelu:()=>i.J$2,Less:()=>i.vtC,LessEqual:()=>i.CAk,LinSpace:()=>i.e7N,Log:()=>i.ZbH,Log1p:()=>i.kU,LogSoftmax:()=>i.qCd,LogicalAnd:()=>i.PYm,LogicalNot:()=>i.VfG,LogicalOr:()=>i.MZg,LogicalXor:()=>i.w6g,LowerBound:()=>i.qIC,MathBackendCPU:()=>Io.O,MathBackendWebGL:()=>No.QC,MatrixBandPart:()=>i.J7O,Max:()=>i.YoZ,MaxPool:()=>i.mTV,MaxPool3D:()=>i.OAf,MaxPool3DGrad:()=>i.OU7,MaxPoolGrad:()=>i.OV7,MaxPoolWithArgmax:()=>i.vFR,Maximum:()=>i.BMI,Mean:()=>i.q2K,Min:()=>i.c17,Minimum:()=>i.q8u,MirrorPad:()=>i.jQs,Mod:()=>i.Vbg,MomentumOptimizer:()=>i.rIn,Multinomial:()=>i.NZg,Multiply:()=>i.wYn,Neg:()=>i.kuV,NonMaxSuppressionV3:()=>i.uv1,NonMaxSuppressionV4:()=>i.cye,NonMaxSuppressionV5:()=>i.W0H,NotEqual:()=>i.yQU,OP_SCOPE_SUFFIX:()=>i.zvA,OneHot:()=>i.we_,OnesLike:()=>i.qWM,Optimizer:()=>i.gaJ,OptimizerConstructors:()=>i.eEe,Pack:()=>i.QiL,PadV2:()=>i.lyA,Pool:()=>i.Kgp,Pow:()=>i.pe_,Prelu:()=>i.o0g,Prod:()=>i.DlI,RMSPropOptimizer:()=>i.gVI,RNN:()=>qe,RaggedGather:()=>i.dDz,RaggedRange:()=>i.CQl,RaggedTensorToTensor:()=>i.BiW,Range:()=>i.e6w,Rank:()=>i.yw1,Real:()=>i.xJR,RealDiv:()=>i.oHH,Reciprocal:()=>i.$HU,Reduction:()=>i.IH3,Relu:()=>i.qkr,Relu6:()=>i.SbG,Reshape:()=>i.HZH,ResizeBilinear:()=>i._Yw,ResizeBilinearGrad:()=>i.zbQ,ResizeNearestNeighbor:()=>i.dpD,ResizeNearestNeighborGrad:()=>i.Hmb,Reverse:()=>i.mKl,RotateWithOffset:()=>i.b9H,Round:()=>i.e07,Rsqrt:()=>i.bV0,SGDOptimizer:()=>i.DYp,ScatterNd:()=>i.xQA,SearchSorted:()=>i.nr8,Select:()=>i.PhF,Selu:()=>i.oFR,Sequential:()=>Rn,Sigmoid:()=>i.a5O,Sign:()=>i.i5y,Sin:()=>i.RQH,Sinh:()=>i.wYB,Slice:()=>i.p2w,Softmax:()=>i.Gcp,Softplus:()=>i.MRv,SpaceToBatchND:()=>i.TQc,SparseFillEmptyRows:()=>i.O3z,SparseReshape:()=>i.nhH,SparseSegmentMean:()=>i.w3H,SparseSegmentSum:()=>i.ZjV,SparseToDense:()=>i.D2d,SplitV:()=>i.L8s,Sqrt:()=>i.FKq,Square:()=>i.bK0,SquaredDifference:()=>i._tC,StaticRegexReplace:()=>i.e0R,Step:()=>i.h8e,StridedSlice:()=>i.jQk,StringNGrams:()=>i._JP,StringSplit:()=>i.s1s,StringToHashBucketFast:()=>i.XkS,Sub:()=>i.Tr8,Sum:()=>i.GBy,SymbolicTensor:()=>Dt.Iy,Tan:()=>i.sEM,Tanh:()=>i.MIZ,Tensor:()=>i.esB,TensorBuffer:()=>i.YDk,TensorScatterUpdate:()=>i.SIB,Tile:()=>i.n9L,TopK:()=>i.cWu,Transform:()=>i.wx7,Transpose:()=>i.G3Y,Unique:()=>i.kpP,Unpack:()=>i.ToN,UnsortedSegmentSum:()=>i.Qvg,UpperBound:()=>i.XDQ,Variable:()=>i._wD,ZerosLike:()=>i.RuY,_FusedMatMul:()=>i.usg,abs:()=>i.WnP,acos:()=>i.Khb,acosh:()=>i.__u,add:()=>i.IHx,addN:()=>i.QBD,all:()=>i.$6P,any:()=>i.YjB,argMax:()=>i.NqF,argMin:()=>i.vHJ,asin:()=>i.ZRM,asinh:()=>i.VfV,atan:()=>i.z4N,atan2:()=>i.fvJ,atanh:()=>i.C80,avgPool:()=>i.wS1,avgPool3d:()=>i.uR5,backend:()=>i.y3$,backend_util:()=>i.backend_util,basicLSTMCell:()=>i.zEQ,batchNorm:()=>i.tgs,batchNorm2d:()=>i.Dxk,batchNorm3d:()=>i.JY5,batchNorm4d:()=>i.p3b,batchToSpaceND:()=>i.E4h,bincount:()=>i.yE8,bitwiseAnd:()=>i.ycw,booleanMaskAsync:()=>i.anm,broadcastArgs:()=>i.XsQ,broadcastTo:()=>i.UFq,broadcast_util:()=>i.Jyw,browser:()=>i.Xhn,buffer:()=>i.f3b,callbacks:()=>Uu,cast:()=>i.pju,ceil:()=>i.mDi,clipByValue:()=>i.iUl,clone:()=>i.d9v,complex:()=>i.PYB,concat:()=>i.zoF,concat1d:()=>i.gME,concat2d:()=>i.Izb,concat3d:()=>i.MNy,concat4d:()=>i.ZaL,constraints:()=>p,conv1d:()=>i.PAt,conv2d:()=>i.Tek,conv2dTranspose:()=>i.bc,conv3d:()=>i.pdZ,conv3dTranspose:()=>i.$QV,copyRegisteredKernels:()=>i.T3b,cos:()=>i.mCk,cosh:()=>i.f9Y,cosineWindow:()=>i.mew,cumprod:()=>i.$Gn,cumsum:()=>i.zbp,customGrad:()=>i.cbc,data:()=>w,denseBincount:()=>i.ppE,deprecationWarn:()=>i.MXe,depthToSpace:()=>i.nTT,depthwiseConv2d:()=>i.B10,deregisterOp:()=>Wu,device_util:()=>i.C2$,diag:()=>i.Ka3,dilation2d:()=>i.WmZ,disableDeprecationWarnings:()=>i.cFr,dispose:()=>i.B90,disposeVariables:()=>i.N8o,div:()=>i.hiC,divNoNan:()=>i.NTj,dot:()=>i.AKD,dropout:()=>i.rvX,einsum:()=>i.WYO,elu:()=>i.pyx,enableDebugMode:()=>i.Ra$,enableProdMode:()=>i.G48,enclosingPowerOfTwo:()=>i.GRh,engine:()=>i.SRH,ensureShape:()=>i.EDe,env:()=>i.OBj,equal:()=>i.DgJ,erf:()=>i.qNN,euclideanNorm:()=>i.d2q,exp:()=>i.Qqt,expandDims:()=>i.dt4,expm1:()=>i.t$B,eye:()=>i.iyy,fft:()=>i.kp_,fill:()=>i.hlL,findBackend:()=>i.x3e,findBackendFactory:()=>i.zel,floor:()=>i.GWj,floorDiv:()=>i.qPi,forceHalfFloat:()=>So,fused:()=>i.imm,gather:()=>i.Iqj,gatherND:()=>i.dbB,gather_util:()=>i.DaI,getBackend:()=>i.N_N,getGradient:()=>i.ukX,getKernel:()=>i.pIF,getKernelsForBackend:()=>i.trD,gpgpu_util:()=>Lh,grad:()=>i.UQy,grads:()=>i.tiA,greater:()=>i.pjt,greaterEqual:()=>i.brS,ifft:()=>i.Sxn,imag:()=>i.asL,image:()=>i.image,inTopKAsync:()=>i.V3u,initializers:()=>P,input:()=>Pn,io:()=>i.io,irfft:()=>i.wx0,isFinite:()=>i.xVT,isInf:()=>i.UWc,isNaN:()=>i.i2d,keep:()=>i.CnY,kernel_impls:()=>i.GDt,layers:()=>I,leakyRelu:()=>i.hi7,less:()=>i.d9m,lessEqual:()=>i.zN1,linalg:()=>i.$r2,linspace:()=>i.SX3,loadGraphModel:()=>Zc,loadGraphModelSync:()=>Xc,loadLayersModel:()=>pn,localResponseNormalization:()=>i.G9k,log:()=>i.cM7,log1p:()=>i.Krr,logSigmoid:()=>i.e_t,logSoftmax:()=>i.CmS,logSumExp:()=>i.l_t,logicalAnd:()=>i.HvI,logicalNot:()=>i.hJK,logicalOr:()=>i.K5V,logicalXor:()=>i.egP,losses:()=>i.MB5,lowerBound:()=>i.eab,matMul:()=>i.OI3,math:()=>i.mAU,max:()=>i.Fp7,maxPool:()=>i._sB,maxPool3d:()=>i.YQQ,maxPoolWithArgmax:()=>i.Ip$,maximum:()=>i.gWQ,mean:()=>i.J69,memory:()=>i.sq6,meshgrid:()=>i.ry_,metrics:()=>f,min:()=>i.VV$,minimum:()=>i.LTh,mirrorPad:()=>i.VdP,mod:()=>i.wQq,model:()=>Hs,models:()=>v,moments:()=>i.Gi7,movingAverage:()=>i.p_,mul:()=>i.dC7,multiRNNCell:()=>i.rq4,multinomial:()=>i.SJ_,neg:()=>i.W76,nextFrame:()=>i.glt,norm:()=>i.KOy,notEqual:()=>i.Quu,oneHot:()=>i.lfX,ones:()=>i.iUs,onesLike:()=>i.JpU,op:()=>i.op,outerProduct:()=>i.N2O,pad:()=>i.vku,pad1d:()=>i.pNR,pad2d:()=>i.koy,pad3d:()=>i.t1L,pad4d:()=>i.lGY,pool:()=>i.d_R,pow:()=>i.sQ3,prelu:()=>i.AL3,print:()=>i.S0v,prod:()=>i.WVs,profile:()=>i.N5s,raggedGather:()=>i.$gW,raggedRange:()=>i.VT$,raggedTensorToTensor:()=>i.N89,rand:()=>i.TN_,randomGamma:()=>i.wzB,randomNormal:()=>i.nGf,randomStandardNormal:()=>i.ruB,randomUniform:()=>i.LGj,randomUniformInt:()=>i.pe5,range:()=>i.w6H,ready:()=>i.Cd_,real:()=>i.kwC,reciprocal:()=>i.M25,registerBackend:()=>i.jqO,registerCallbackConstructor:()=>ts,registerGradient:()=>i.LiG,registerKernel:()=>i.wCN,registerOp:()=>Fu,regularizers:()=>A,relu:()=>i.UYe,relu6:()=>i.btT,removeBackend:()=>i.cjG,reshape:()=>i.XLQ,reverse:()=>i.GYS,reverse1d:()=>i.SDf,reverse2d:()=>i.diP,reverse3d:()=>i.sx7,reverse4d:()=>i.mG2,rfft:()=>i.QEs,round:()=>i.NMM,rsqrt:()=>i.bp0,scalar:()=>i.iD$,scatterND:()=>i.snQ,scatter_util:()=>i.yV1,searchSorted:()=>i.zcT,selu:()=>i.U8D,separableConv2d:()=>i.U_I,sequential:()=>qn,serialization:()=>i.m7h,setBackend:()=>i.CQI,setPlatform:()=>i.VYu,setWebGLContext:()=>Bh.nd,setdiff1dAsync:()=>i.ODp,shared:()=>Mh,sigmoid:()=>i.XD2,sign:()=>i.Xxe,signal:()=>i.tdS,sin:()=>i.O$l,sinh:()=>i.R_K,slice:()=>i.tPi,slice1d:()=>i.jZU,slice2d:()=>i.SmN,slice3d:()=>i.CnO,slice4d:()=>i.p0P,slice_util:()=>i.kuN,softmax:()=>i.XAC,softplus:()=>i.Wvh,spaceToBatchND:()=>i.fBT,sparse:()=>i.rVs,sparseToDense:()=>i.ers,spectral:()=>i.uN7,split:()=>i.Vl2,sqrt:()=>i._b3,square:()=>i.h62,squaredDifference:()=>i.$i,squeeze:()=>i.L9e,stack:()=>i.knu,step:()=>i.Nbs,stridedSlice:()=>i.NXj,string:()=>i.Z_8,sub:()=>i.luU,sum:()=>i.Smz,sumOutType:()=>i.z4k,tan:()=>i.ORZ,tanh:()=>i.AEp,tensor:()=>i.XeE,tensor1d:()=>i.RRF,tensor2d:()=>i.odF,tensor3d:()=>i.wOQ,tensor4d:()=>i.yXz,tensor5d:()=>i.Bfx,tensor6d:()=>i.xZs,tensorScatterUpdate:()=>i.Pg0,tensor_util:()=>i.piX,test_util:()=>i.p3L,tidy:()=>i.lub,tile:()=>i.Gg6,time:()=>i.XVJ,topk:()=>i.hg7,train:()=>i.p_j,transpose:()=>i.p4s,truncatedNormal:()=>i.Xu6,unique:()=>i.Two,unregisterGradient:()=>i.bt3,unregisterKernel:()=>i.nEe,unsortedSegmentSum:()=>i.pUJ,unstack:()=>i.HHK,upcastType:()=>i.x8V,upperBound:()=>i.GaM,util:()=>i.D5U,valueAndGrad:()=>i.h76,valueAndGrads:()=>i.fNQ,variable:()=>i.VD$,variableGrads:()=>i.pnJ,version:()=>Wh,version_converter:()=>so.i,version_core:()=>i.jTM,version_cpu:()=>wo.i,version_layers:()=>An.i,version_webgl:()=>Co.i,webgl:()=>Uh,webgl_util:()=>xh,where:()=>i.arb,whereAsync:()=>i.itS,zeros:()=>i.lls,zerosLike:()=>i.P84});var b=o(15861),i=o(30003),lt=(o(15564),o(15545),o(99246),o(73915)),st=o(42688);function Pt(n,e){return(0,i.lub)(()=>i._b3(i.Smz(i.dC7(n,n),e,!0)))}class Wt extends i.m7h.Serializable{getConfig(){return{}}}let Q=(()=>{class n extends Wt{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,i.lub)(()=>{const s=Pt(t,this.axis),r=i.iUl(s,0,this.maxValue);return i.dC7(t,i.hiC(r,i.IHx((0,lt.Ho)(),s)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return n.className="MaxNorm",n})();i.m7h.registerClass(Q);let ct=(()=>{class n extends Wt{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,i.lub)(()=>i.hiC(t,i.IHx((0,lt.Ho)(),Pt(t,this.axis))))}getConfig(){return{axis:this.axis}}}return n.className="UnitNorm",n})();i.m7h.registerClass(ct);let _t=(()=>{class n extends Wt{apply(t){return i.UYe(t)}}return n.className="NonNeg",n})();i.m7h.registerClass(_t);let ut=(()=>{class n extends Wt{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,i.lub)(()=>{const s=Pt(t,this.axis),r=i.IHx(i.dC7(this.rate,i.iUl(s,this.minValue,this.maxValue)),i.dC7(1-this.rate,s));return i.dC7(t,i.hiC(r,i.IHx((0,lt.Ho)(),s)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return n.className="MinMaxNorm",n})();i.m7h.registerClass(ut);const At={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ot(n){return(0,st.Kj)(n)}function Mt(n,e={}){return(0,st.tU)(n,i.m7h.SerializationMap.getMap().classNameMap,e,"constraint")}function xt(n){return null==n?null:"string"==typeof n?Mt({className:n in At?At[n]:n,config:{}}):n instanceof Wt?n:Mt(n)}function Ct(n){return new Q(n)}function ie(n){return new ct(n)}function ee(){return new _t}function Yt(n){return new ut(n)}var mt=o(25568);function Ae(){return new mt.H_}function _e(){return new mt.M6}function Be(n){return new mt.sr(n)}function Ie(n){return new mt.Is(n)}function we(n){return new mt.MD(n)}function Ne(n){return new mt.w8(n)}function Qe(n){return new mt.iJ(n)}function g(n){return new mt.xc(n)}function ot(n){return new mt.sq(n)}function pt(n){return new mt.Jf(n)}function Kt(n){return new mt.RP(n)}function ae(n){return new mt.rB(n)}function ne(n){return new mt.V9(n)}function ce(n){return new mt.yD(n)}function de(n){return new mt.vG(n)}var Ee=o(51090),Dt=o(92641),fe=o(86025),D=o(12992),Bt=o(65999),X=o(18357),Zt=o(28467),Ce=o(8518);function Se(n,e){return(0,i.lub)(()=>{"float32"!==n.dtype&&(n=i.pju(n,"float32"));const t=i.Smz(D.h6(n),e,!0),s=i.hlL(t.shape,(0,lt.Ho)()),r=i._b3(i.gWQ(t,s));return i.hiC(n,r)})}function ze(n,e){return(0,i.lub)(()=>i.J69(D.h6(i.luU(e,n)),-1))}function Je(n,e){return(0,i.lub)(()=>i.J69(i.WnP(i.luU(e,n)),-1))}function $e(n,e){return(0,i.lub)(()=>{const t=i.luU(n,e),s=i.iUl(i.WnP(n),(0,lt.Ho)(),Number.MAX_VALUE),r=i.WnP(i.hiC(t,s));return i.dC7(100,i.J69(r,-1))})}function vt(n,e,t=!1){return(0,i.lub)(()=>{if(t)e=i.XAC(e);else{const s=i.Smz(e,e.shape.length-1,!0);e=i.hiC(e,s)}return e=i.iUl(e,(0,lt.Ho)(),1-(0,lt.Ho)()),i.W76(i.Smz(i.dC7(i.pju(n,"float32"),i.cM7(e)),e.shape.length-1))})}function dt(n,e,t=!1){return(0,i.lub)(()=>{const s=i.pju(i.GWj(D.xH(n)),"int32"),r=(e=i.iUl(e,(0,lt.Ho)(),1-(0,lt.Ho)())).shape;return vt(i.XLQ(i.lfX(s,r[r.length-1]),r),e,t)})}function Rt(n,e){return(0,i.lub)(()=>{let t;return t=i.iUl(e,(0,lt.Ho)(),1-(0,lt.Ho)()),t=i.cM7(i.hiC(t,i.luU(1,t))),i.J69(function Tt(n,e){if(!i.D5U.arraysEqual(n.shape,e.shape))throw new X.nu(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return(0,i.lub)(()=>{const t=i.UYe(e),s=i.W76(i.WnP(e));return i.IHx(i.luU(t,i.dC7(e,n)),i.Krr(i.Qqt(s)))})}(n,t),-1)})}function Ht(n,e){return(0,i.lub)(()=>{const t=Se(n,-1),s=Se(e,-1),r=i.dC7(t,s);return i.W76(i.Smz(r,-1))})}const Fe={meanSquaredError:ze,meanAbsoluteError:Je,meanAbsolutePercentageError:$e,meanSquaredLogarithmicError:function sn(n,e){return(0,i.lub)(()=>{const t=i.iUl(e,(0,lt.Ho)(),Number.MAX_VALUE),s=i.cM7(i.IHx(1,t)),r=i.iUl(n,(0,lt.Ho)(),Number.MAX_VALUE),a=i.cM7(i.IHx(1,r));return i.J69(D.h6(i.luU(s,a)),-1)})},squaredHinge:function Tn(n,e){return(0,i.lub)(()=>{const t=i.gWQ(0,i.luU(1,i.dC7(n,e)));return i.J69(D.h6(t),-1)})},hinge:function hn(n,e){return(0,i.lub)(()=>{const t=i.gWQ(0,i.luU(1,i.dC7(n,e)));return i.J69(t,-1)})},categoricalHinge:function Z(n,e){return(0,i.lub)(()=>{const t=i.Smz(i.dC7(n,e),-1),s=i.Fp7(i.dC7(i.luU(1,n),e),-1);return i.gWQ(0,i.IHx(1,i.luU(s,t)))})},logcosh:function wt(n,e){return(0,i.lub)(()=>{const t=Math.log(2),s=i.luU(e,n),r=i.luU(i.IHx(s,i.Wvh(i.dC7(-2,s))),t);return i.J69(r,-1)})},categoricalCrossentropy:vt,sparseCategoricalCrossentropy:dt,binaryCrossentropy:Rt,kullbackLeiblerDivergence:function jt(n,e){return(0,i.lub)(()=>{const t=i.iUl(n,(0,lt.Ho)(),1),s=i.iUl(e,(0,lt.Ho)(),1);return i.Smz(i.dC7(n,i.cM7(i.hiC(t,s))),-1)})},poisson:function kt(n,e){return(0,i.lub)(()=>{const t=i.cM7(i.IHx((0,lt.Ho)(),e));return i.J69(i.luU(e,i.dC7(n,t)),-1)})},cosineProximity:Ht};function We(n){if("string"==typeof n){if(n in Fe)return Fe[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new X.nu(e)}return n}function Ke(n,e){return(0,i.lub)(()=>{const t=i.dC7(.5,i.JpU(e)),s=D.pj(i.pjt(e,t),n.dtype);return i.J69(i.DgJ(n,s),-1)})}function rn(n,e){return(0,i.lub)(()=>D.pj(i.DgJ(i.NqF(n,-1),i.NqF(e,-1)),"float32"))}function Kn(n,e){return(0,i.lub)(()=>i.pju(i.Smz(i.HvI(i.DgJ(n,1),i.DgJ(e,1))),"float32"))}function Vn(n,e){return(0,i.lub)(()=>{const t=Kn(n,e),s=function bs(n,e){return(0,i.lub)(()=>i.pju(i.Smz(i.HvI(i.DgJ(n,0),i.DgJ(e,1))),"float32"))}(n,e),r=i.IHx(t,s);return i.pju(i.arb(i.pjt(r,0),i.hiC(t,r),0),"float32")})}function jn(n,e){return Rt(n,e)}function Hn(n,e){return n.rank===e.rank&&(n=i.L9e(n,[n.rank-1])),(e=i.NqF(e,-1)).dtype!==n.dtype&&(e=i.pju(e,n.dtype)),i.pju(i.DgJ(n,e),"float32")}const Dn=vt,Gn=dt,mn={binaryAccuracy:Ke,categoricalAccuracy:rn,precision:Vn,categoricalCrossentropy:Dn,sparseCategoricalCrossentropy:Gn,mse:ze,MSE:ze,mae:Je,MAE:Je,mape:$e,MAPE:$e,cosine:Ht};function Ps(n){if("string"==typeof n&&n in mn)return mn[n];if("string"!=typeof n&&null!=n)return n;throw new X.nu(`Unknown metric ${n}`)}function fn(n){if(st.hu(null!==n,`Unknown LossOrMetricFn ${n}`),"string"==typeof n)return n;{let e;for(const t of Object.keys(Fe))if(Fe[t]===n){e=t;break}if(void 0!==e)return e;for(const t of Object.keys(mn))if(mn[t]===n){e=t;break}return void 0!==e?e:n.name}}var Ms=o(23313),Zn=o(26887),Ls=o(86493),qt=o(57774),On=o(41609),An=o(18032),xs=o(12618),Ve=o(7405),Xn=o(72488),se=o(86765),In=o(69001);function wn(n){return Array.isArray(n)}function Qn(n){return!function Bs(n){return n instanceof i.esB}(n)&&!wn(n)}function Yn(n,e,t,s=!0,r=""){if(null==e||0===e.length){if(null!=n){let l=!1;if(wn(n)&&n.length>0)l=!0;else if(Qn(n)){for(const u in n)if(n.hasOwnProperty(u)){l=!0;break}}else l=!0;if(l)throw new X.nu(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(null==n)return e.map(l=>null);let a;if(Qn(n)){a=[];for(const l of e){if(null==n[l])throw new X.nu(`No data provided for "${l}". Need data for each key in: ${e}`);a.push(n[l])}}else if(wn(n)){if(n.length!==e.length)throw new X.nu(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);a=n}else{if(e.length>1)throw new X.nu(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);a=[n]}if(a=(0,se.YV)(a),null!=t)for(let l=0;l<e.length;++l){if(null==t[l])continue;const u=a[l];if(u.shape.length!==t[l].length)throw new X.nu(`Error when checking ${r}: expected ${e[l]} to have ${t[l].length} dimension(s). but got array with shape ${u.shape}`);for(let c=0;c<t[l].length;++c){if(0===c&&!s)continue;const m=t[l][c];if(null!=m&&m>=0&&u.shape[c]!==m)throw new X.nu(`${r} expected a batch of elements where each example has shape [${t[l].slice(1,t[l].length)}] (i.e.,tensor shape [*,${t[l].slice(1,t[l].length)}]) but the ${r} received an input with ${u.shape[0]} examples, each with shape [${u.shape.slice(1,u.shape.length)}] (tensor shape [${u.shape}])`)}}return a}function Jn(n,e,t,s=!0,r=""){let a;if(Array.isArray(n)){if(n.length!==e.length)throw new X.nu(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);a=n}else{if(e.length>1)throw new X.nu(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);a=[n]}if(null!=t)for(let l=0;l<e.length;++l){if(null==t[l])continue;const u=a[l];if(u.shape.length!==t[l].length)throw new X.nu(`Error when checking ${r}: expected ${e[l]} to have ${t[l].length} dimension(s), but got array with shape ${JSON.stringify(u.shape)}`);for(let c=0;c<t[l].length;++c){if(0===c&&!s)continue;const m=t[l][c];if(null!=m&&m!==u.shape[c])throw new X.nu(`Error when checking ${r}: expected ${e[l]} to have shape ${JSON.stringify(t[l])} but got array with shape ${JSON.stringify(u.shape)}.`)}}}let je=(()=>{class n extends xs.W{constructor(t){super(t),this.isTraining=!1}summary(t,s,r=console.log){if(!this.built)throw new X.nu("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");(0,Ls.I)(this,t,s,r)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=Ms.j(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof i.gaJ))throw new X.nu("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let s=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new X.nu(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);s=t.loss.map(c=>We(c))}else{const u=We(t.loss);this.outputs.forEach(c=>{s.push(u)})}else{t.loss=t.loss;for(const u in t.loss)if(-1===this.outputNames.indexOf(u))throw new X.nu(`Unknown entry in loss dictionary: "${u}". Only expected the following keys: ${this.outputNames}`);for(const u of this.outputNames)null==t.loss[u]&&console.warn(`Output "${u}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${u} during training`),s.push(We(t.loss[u]))}this.lossFunctions=s,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let u=0;u<this.outputs.length;++u){const c=this.internalOutputShapes[u];this.feedOutputNames.push(this.outputNames[u]),this.feedOutputShapes.push(c),this.feedLossFns.push(this.lossFunctions[u])}const r=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],(0,Bt.f4)("loss",()=>{for(let u=0;u<this.outputs.length;++u)-1===r.indexOf(u)&&this.outputs.length>1&&(this.metricsTensors.push([this.lossFunctions[u],u]),this.metricsNames.push(this.outputNames[u]+"_loss"))});const a=function Fs(n,e){if(null==n||Array.isArray(n)&&0===n.length)return e.map(s=>[]);let t;if("string"==typeof n||"function"==typeof n)t=[n];else{if(!Array.isArray(n)&&"object"!=typeof n)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);t=n}if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let a=t.hasOwnProperty(r)?t[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}(t.metrics,this.outputNames),l=(u,c,d)=>{this.outputNames.length>1&&(c=this.outputNames[u]+"_"+c),this.metricsNames.push(c),this.metricsTensors.push([d,u])};(0,Bt.f4)("metric",()=>{for(let u=0;u<this.outputs.length;++u)-1===r.indexOf(u)&&(m=>{let R,$,nt;for(const q of m){if("string"==typeof q&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(q)){const et=this.internalOutputShapes[u];let ht;1===et[et.length-1]||this.lossFunctions[u]===Rt?-1!==["accuracy","acc"].indexOf(q)?$=Ke:-1!==["crossentropy","ce"].indexOf(q)&&($=jn):this.lossFunctions[u]===dt?-1!==["accuracy","acc"].indexOf(q)?$=Hn:-1!==["crossentropy","ce"].indexOf(q)&&($=Gn):-1!==["accuracy","acc"].indexOf(q)?$=rn:-1!==["crossentropy","ce"].indexOf(q)&&($=Dn),-1!==["accuracy","acc"].indexOf(q)?ht="acc":-1!==["crossentropy","ce"].indexOf(q)&&(ht="ce"),nt=$,R=""+ht}else nt=Ps(q),R=""+fn(q);let k;(0,Bt.f4)(R,()=>{k=nt}),l(u,R,k)}})(a[u])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,s,r={}){const a=null==r.batchSize?32:r.batchSize;(0,se.fQ)(a);const u=this.standardizeUserDataXY(t,s,!0,a);try{const c=u[0].concat(u[1]);this.makeTestFunction();const m=this.testLoop(this.testFunction,c,a,r.verbose,r.steps);return(0,st.Bq)(m)}finally{(0,se.kS)(u[0],t),(0,se.kS)(u[1],s)}}evaluateDataset(t,s){var r=this;return(0,b.Z)(function*(){return r.makeTestFunction(),(0,Xn.D)(r,t,s)})()}checkNumSamples(t,s,r,a="steps"){let l;if(null!=r){if(l=null,null!=s)throw new X.nu(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${s}`)}else{if(null==t)throw new X.nu(`Either the input data should have a defined shape, or ${a} shoud be specified.`);l=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return l}execute(t,s){if(Array.isArray(s)&&0===s.length)throw new X.nu("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(s),l=this.retrieveSymbolicTensors(r?s:[s]),u=new Ve.l2;if(t instanceof i.esB&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new X.nu(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let d=0;d<this.inputs.length;++d)u.add(this.inputs[d],t[d])}else for(const d of this.inputs){const m=t[d.name];if(null==m)throw new X.nu(`No value is provided for the model's input ${d.name}`);u.add(d,m)}const c=(0,Ve.ht)(l,u);return r?c:c[0]}retrieveSymbolicTensors(t){const s=(0,st.JE)(null,t.length);let r=t.length;for(const a of this.layers){const l=Array.isArray(a.output)?a.output:[a.output],u=l.map(c=>c.name);for(let c=0;c<t.length;++c){const d=u.indexOf(t[c]);if(-1!==d&&(s[c]=l[d],r--),0===r)break}if(0===r)break}if(r>0){const a=[];throw s.forEach((l,u)=>{null==l&&a.push(t[u])}),new X.nu(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return s}predictLoop(t,s=32,r=!1){return i.lub(()=>{const a=this.checkNumSamples(t);if(r)throw new X.nj("Verbose predictLoop() is not implemented yet.");const l=(0,se.R_)(a,s),u=this.outputs.map(c=>[]);for(let c=0;c<l.length;++c)i.lub(()=>{const R=(0,se.sf)(t,l[c][0],l[c][1]),$=[];if(Array.isArray(R))for(let q=0;q<R.length;++q)$.push({key:this.inputs[q],value:R[q]});else $.push({key:this.inputs[0],value:R});const nt=new Ve.l2($);return(0,Ve.ht)(this.outputs,nt)}).forEach((m,M)=>u[M].push(m));return(0,st.Bq)(u.map(c=>i.zoF(c,0)))})}predict(t,s={}){const r=(0,se.YV)(t);Jn(r,this.inputNames,this.feedInputShapes,!1);try{const a=null==s.batchSize?32:s.batchSize;return(0,se.fQ)(a),this.predictLoop(r,a)}finally{(0,se.kS)(r,t)}}predictOnBatch(t){Jn(t,this.inputNames,this.feedInputShapes,!0);const s=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,s)}standardizeUserDataXY(t,s,r=!0,a){if(null==this.optimizer_)throw new X.LH("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const l=[];for(let u=0;u<this.feedOutputShapes.length;++u){const c=this.feedOutputShapes[u];l.push(this.feedLossFns[u]===dt?c.slice(0,c.length-1).concat([1]):c)}if(function zs(n,e){const s=(0,st.Tw)(n.map(a=>a.shape[0]));s.sort();const r=(0,st.Tw)(e.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new X.nu(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(a=>a.shape))}`);if(r.length>1)throw new X.nu(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!i.D5U.arraysEqual(s,r))throw new X.nu(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(t=Yn(t,this.feedInputNames,this.feedInputShapes,!1,"input"),s=Yn(s,this.feedOutputNames,l,!1,"target")),function Us(n,e,t){const s=[ze,Rt,vt];for(let r=0;r<n.length;++r){const a=n[r],l=e[r],u=t[r];if(null!=l){if(l===vt&&1===a.shape[a.shape.length-1])throw new X.nu(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(l)){const c=a.shape.slice(1),d=u.slice(1);for(let m=0;m<c.length;++m){const R=d[m];if(null!=R&&c[m]!==R)throw new X.nu(`A target Tensor with shape ${a.shape} was passed for an output of shape ${u}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(s,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&t[0].shape[0]%a!==0)throw new X.nu(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${t[0].shape[0]} sample(s).`);return[t,s]}standardizeUserData(t,s,r,a){var l=this;return(0,b.Z)(function*(u,c,d,m,M=!0,R){const[$,nt]=l.standardizeUserDataXY(u,c,M,R);if(null!=d)throw new Error("sample weight is not supported yet.");let q=null;if(null!=m){const k=(0,In.Vf)(m,l.outputNames);q=[];for(let et=0;et<k.length;++et)q.push(yield(0,In.tl)(nt[et],null,k[et]))}return[$,nt,q]}).apply(this,arguments)}testLoop(t,s,r,a=0,l){return i.lub(()=>{const u=this.checkNumSamples(s,r,l,"steps"),c=[];if(a>0)throw new X.nj("Verbose mode is not implemented yet.");if(null!=l)throw new X.nj("steps mode in testLoop() is not implemented yet");{const d=(0,se.R_)(u,r),m=(0,i.RRF)((0,qt.w6)(0,u));for(let M=0;M<d.length;++M){const R=d[M][0],$=d[M][1],nt=D.c9(m,R,$-R),q=(0,se.YX)(s,nt),k=t(q);if(0===M)for(let et=0;et<k.length;++et)c.push((0,i.iD$)(0));for(let et=0;et<k.length;++et)c[et]=i.IHx(c[et],i.dC7($-R,k[et]))}for(let M=0;M<c.length;++M)c[M]=i.hiC(c[M],u)}return c})}getDedupedMetricsNames(){const t=this.metricsNames,s=[];for(let r=0;r<t.length;++r){const a=t[r];let l=a;(0,st.QX)(t,a)>1&&(l+=`_${(0,st.QX)(t.slice(0,r),a)}`),s.push(l)}return s}makeTrainFunction(){return t=>{const s=[],r=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),l=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),u=[],d=this.collectedTrainableWeights.map(R=>R.read());return[this.optimizer_.minimize(()=>{const R=[];for(let k=0;k<this.inputs.length;++k)R.push({key:this.inputs[k],value:r[k]});const $=new Ve.l2(R),nt=(0,Ve.ht)(this.outputs,$,{training:!0});let q;for(let k=0;k<this.lossFunctions.length;++k){let ht=(0,this.lossFunctions[k])(a[k],nt[k]);null!=l[k]&&(ht=(0,In.mo)(ht,l[k]));const gt=i.J69(ht);s.push(gt),q=0===k?ht:i.IHx(q,ht)}for(let k=0;k<this.metricsTensors.length;++k){let et;if(this.outputs.length>1&&k<this.outputs.length)et=s[k];else{const gt=this.metricsTensors[k][1];et=i.J69((0,this.metricsTensors[k][0])(a[gt],nt[gt]))}i.CnY(et),u.push(et)}return q=i.J69(q),this.calculateLosses().forEach(k=>{q=i.IHx(q,k)}),q},!0,d)].concat(u)}}makeTestFunction(){this.testFunction=t=>i.lub(()=>{const s=[];let r;const a=t.slice(0,this.inputs.length),l=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),u=[];for(let m=0;m<this.inputs.length;++m)u.push({key:this.inputs[m],value:a[m]});const c=new Ve.l2(u),d=(0,Ve.ht)(this.outputs,c);for(let m=0;m<this.lossFunctions.length;++m){const R=i.J69((0,this.lossFunctions[m])(l[m],d[m]));r=0===m?R:i.IHx(r,R),s.push(r)}for(let m=0;m<this.metricsTensors.length;++m){const R=this.metricsTensors[m][1],$=i.J69((0,this.metricsTensors[m][0])(l[R],d[R]));s.push($)}return s})}fit(t,s){var r=this;return(0,b.Z)(function*(a,l,u={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let c,d,m,M,R,$,nt,q,k;r.isTraining=!0;try{const et=null==u.batchSize?32:u.batchSize;(0,se.fQ)(et);const gt=yield r.standardizeUserData(a,l,u.sampleWeight,u.classWeight,!1,et);c=gt[0],d=gt[1],k=gt[2];let Et,bt=!1;if(null!=u.validationData&&u.validationData.length>0){if(bt=!0,2!==u.validationData.length)throw 3===u.validationData.length?new X.nj("validationData including sample weights is not supported yet."):new X.nu(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${u.validationData} is invalid.`);R=u.validationData[0],$=u.validationData[1];const Qt=yield r.standardizeUserData(R,$,null,null,!0,et);nt=Qt[0],q=Qt[1],Et=nt.concat(q)}else if(null!=u.validationSplit&&u.validationSplit>0&&u.validationSplit<1){bt=!0;const zt=Math.floor(c[0].shape[0]*(1-u.validationSplit)),Qt=c[0].shape[0];nt=(0,se.sf)(c,zt,Qt),m=c,c=(0,se.sf)(c,0,zt),q=(0,se.sf)(d,zt,Qt),M=d,d=(0,se.sf)(d,0,zt),Et=nt.concat(q)}else null!=u.validationSteps&&(bt=!0);const Nt=c.concat(d).concat(k);r.checkTrainableWeightsConsistency();const St=r.makeTrainFunction(),Lt=r.getDedupedMetricsNames();let Ut,$t;bt?(r.makeTestFunction(),Ut=r.testFunction,$t=Lt.slice().concat(Lt.map(zt=>"val_"+zt))):(Ut=null,Et=[],$t=Lt.slice());const Ft=(0,fe.CZ)(u.callbacks,u.yieldEvery);return yield r.fitLoop(St,Nt,Lt,et,u.epochs,u.verbose,Ft,Ut,Et,u.shuffle,$t,u.initialEpoch,null,null)}finally{r.isTraining=!1,(0,se.kS)(c,a),(0,se.kS)(d,l),(0,se.kS)(m,a),(0,se.kS)(M,l),(0,se.kS)(nt,R),(0,se.kS)(q,$),null!=k&&i.B90(k)}}).apply(this,arguments)}fitLoop(t,s,r,a,l,u,c,d,m,M,R,$,nt,q){var k=this;return(0,b.Z)(function*(){null==a&&(a=32),null==l&&(l=1),null==M&&(M=!0),null==$&&($=0);let et=!1;if(null!=d&&null!=m&&(et=!0),null!=q&&(et=!0,null==nt))throw new X.nu("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const ht=k.checkNumSamples(s,a,nt,"steps_per_epoch");let gt;null!=ht&&(gt=(0,qt.w6)(0,ht)),null==u&&(u=1);const{callbackList:bt,history:Et}=(0,fe.m$)(c,u,l,$,ht,nt,a,et,R);bt.setModel(k),k.history=Et,yield bt.onTrainBegin(),k.stopTraining_=!1;for(let Nt=$;Nt<l;++Nt){yield bt.onEpochBegin(Nt);const St={};if(null!=nt)throw new X.nj("stepsPerEpoch mode is not implemented yet.");{if("batch"===M)throw new X.nj("batch shuffling is not implemneted yet");M&&i.D5U.shuffle(gt);const Lt=(0,i.RRF)(gt),Ut=(0,se.R_)(ht,a);for(let $t=0;$t<Ut.length;++$t){const Ft={};if(yield bt.onBatchBegin($t,Ft),i.lub(()=>{const Xt=Ut[$t][0],zt=Ut[$t][1],Qt=D.c9(Lt,Xt,zt-Xt);Ft.batch=$t,Ft.size=zt-Xt;const En=(0,se.YX)(s,Qt),Gt=t(En);for(let xe=0;xe<r.length;++xe){const nn=Gt[xe];Ft[r[xe]]=nn,i.CnY(nn)}if($t===Ut.length-1&&et){const xe=k.testLoop(d,m,a);for(let Ge=0;Ge<r.length;++Ge){const nn=r[Ge],vn=xe[Ge];i.CnY(vn),St["val_"+nn]=vn}}}),yield bt.onBatchEnd($t,Ft),(0,Ce.i)(Ft),k.stopTraining_)break}Lt.dispose()}if(yield bt.onEpochEnd(Nt,St),k.stopTraining_)break}return yield bt.onTrainEnd(),yield k.history.syncData(),k.history})()}fitDataset(t,s){var r=this;return(0,b.Z)(function*(){return(0,Xn.y)(r,t,s)})()}trainOnBatch(t,s){var r=this;return(0,b.Z)(function*(){const a=yield r.standardizeUserData(t,s),l=a[0],u=a[1],d=r.makeTrainFunction()(l.concat(u)),m=[];for(const M of d){const R=yield M.data();m.push(R[0])}return i.B90(d),(0,se.kS)(a[0],t),(0,se.kS)(a[1],s),(0,st.Bq)(m)})()}getNamedWeights(t){const s=[],r=null!=t&&t.trainableOnly,a=r?this.trainableWeights:this.weights,l=this.getWeights(r);for(let u=0;u<a.length;++u)r&&!a[u].trainable||s.push({name:a[u].originalName,tensor:l[u]});return s}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const s=i.sq6().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=s-i.sq6().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=(0,st.D1)(this.loss);else if(Array.isArray(this.loss)){for(const s of this.loss)if("string"!=typeof s)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(s=>(0,st.D1)(s))}else{const s=Object.keys(this.loss);t={};const r=this.loss;for(const a of s){if("string"!=typeof r[a])throw new Error("Serialization of non-string loss is not supported.");t[a]=(0,st.D1)(r[a])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[(0,st.D1)(fn(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>(0,st.D1)(fn(t)));{const t={};for(const s in this.metrics)t[s]=(0,st.D1)(fn(this.metrics[s]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const s=(0,On.a)(t.optimizer_config),r=(0,Zt.v)(s);let a,l;if("string"==typeof t.loss)a=(0,st.zW)(t.loss);else if(Array.isArray(t.loss))a=t.loss.map(u=>(0,st.zW)(u));else if(null!=t.loss){a={};for(const u in t.loss)a[u]=(0,st.zW)(t.loss[u])}if(Array.isArray(t.metrics))l=t.metrics.map(u=>(0,st.zW)(u));else if(null!=t.metrics){l={};for(const u in t.metrics)l[u]=(0,st.zW)(t.metrics[u])}this.compile({loss:a,metrics:l,optimizer:r})}save(t,s){var r=this;return(0,b.Z)(function*(){if("string"==typeof t){const M=i.io.getSaveHandlers(t);if(0===M.length)throw new X.nu(`Cannot find any save handlers for URL '${t}'`);if(M.length>1)throw new X.nu(`Found more than one (${M.length}) save handlers for URL '${t}'`);t=M[0]}if(null==t.save)throw new X.nu("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=yield i.io.encodeWeights(r.getNamedWeights(s)),d={modelTopology:r.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${An.i}`,convertedBy:null};if(null!=s&&s.includeOptimizer&&null!=r.optimizer){d.trainingConfig=r.getTrainingConfig();const M="optimizer",{data:R,specs:$}=yield i.io.encodeWeights(yield r.optimizer.getWeights(),M);a.specs.push(...$),a.data=i.io.concatenateArrayBuffers([a.data,R])}return null!=r.userDefinedMetadata&&((0,Zn.WE)(r.userDefinedMetadata,r.name,!0),d.userDefinedMetadata=r.userDefinedMetadata),d.weightData=a.data,d.weightSpecs=a.specs,t.save(d)})()}setUserDefinedMetadata(t){(0,Zn.WE)(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}return n.className="Model",n})();i.m7h.registerClass(je),i.m7h.registerClass((()=>{class n extends je{}return n.className="Functional",n})());var $s=o(32547),yt=o(8022);function Ks(n,e){return Nn.apply(this,arguments)}function Nn(){return(Nn=(0,b.Z)(function*(n,e){"modelTopology"in n||(n={modelTopology:n});let t=n.modelTopology;null!=t.model_config&&(t=t.model_config);const s=(0,On.a)(t),r=(0,Zt.v)(s,e);if(null!=n.weightsManifest){const a=yield i.io.loadWeights(n.weightsManifest,n.pathPrefix,r.weights.map(u=>u.originalName)),l={};for(const u of r.weights)l[u.originalName]=a[u.originalName];r.loadWeights(l),(0,i.B90)(a)}return r})).apply(this,arguments)}function pn(n,e){return Cn.apply(this,arguments)}function Cn(){return Cn=(0,b.Z)(function*(n,e){if(null==e&&(e={}),"string"==typeof n){const t=i.io.getLoadHandlers(n,e);if(0===t.length)t.push(i.io.browserHTTPRequest(n,e));else if(t.length>1)throw new X.nu(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return function Vs(n,e,t){return Sn.apply(this,arguments)}(n,void 0,e)}),Cn.apply(this,arguments)}function Sn(){return(Sn=(0,b.Z)(function*(n,e,t){if(null==t&&(t={}),null==n.load)throw new X.nu("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=yield n.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==t.strict||t.strict,l=null!=s.weightData&&null!=s.weightSpecs&&a,u=(0,Zt.v)((0,On.a)(r),e,l),c=s.trainingConfig;if(null!=c&&u.loadTrainingConfig(c),null!=s.userDefinedMetadata&&u.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new X.nu("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:d,optimizerWeights:m}=function js(n,e){const t=i.io.decodeWeights(n,e),s={},r=[];return e.forEach(a=>{"optimizer"===a.group?r.push({name:a.name,tensor:t[a.name]}):s[a.name]=t[a.name]}),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);u.loadWeights(d,a),null!=u.optimizer&&m.length>0&&(yield u.optimizer.setWeights(m)),(0,i.B90)(d),(0,i.B90)(m.map(M=>M.tensor))}return u})).apply(this,arguments)}let Rn=(()=>{class n extends je{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:(0,$s.s)("sequential_"),null!=t.layers)for(const s of t.layers)this.add(s)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new X.nu(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const s=t instanceof n||t instanceof je;let r;if(s){if(r=t,1!==r.outputs.length)throw new X.nu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==r.inputs.length)throw new X.nu("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new X.nu("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=(0,Ee.I)({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(a)}if(s)this.outputs=r.outputs,this.inputs=r.inputs;else{if(1!==t.inboundNodes.length)throw new X.nu(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new X.nu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=(0,Dt.hA)(this.outputs[0])}this.inboundNodes=[],new Dt.NB({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:st.JE(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=t.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,s){return null==this.model&&this.build(),this.model.call(t,s)}build(t){if((0,yt.Wf)(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new je({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,s,r=console.log){this.built||this.build(),super.summary(t,s,r)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,s,r={}){if(!this.built)throw new X.LH("The model needs to be compiled before being used.");return this.model.evaluate(t,s,r)}evaluateDataset(t,s){var r=this;return(0,b.Z)(function*(){if(!r.built)throw new X.LH("The model needs to be compiled before being used.");return r.model.evaluateDataset(t,s)})()}predict(t,s={}){return null==this.model&&this.build(),this.model.predict(t,s)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}fit(t,s){var r=this;return(0,b.Z)(function*(a,l,u={}){if(!r.built)throw new X.LH("The model needs to be compiled before being used.");return r.model.fit(a,l,u)}).apply(this,arguments)}fitDataset(t,s){var r=this;return(0,b.Z)(function*(){if(!r.built)throw new X.LH("The model needs to be compiled before being used.");return r.model.fitDataset(t,s)})()}trainOnBatch(t,s){var r=this;return(0,b.Z)(function*(){return r.model.trainOnBatch(t,s)})()}static fromConfig(t,s,r={},a=!1){let l,u={};if(s instanceof Array){if(null==s[0].className||"Merge"===s[0].className)throw new X.nu("Legacy serialization format not supported yet.");l=s}else i.D5U.assert(null!=s.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),l=s.layers,delete s.layers,u=s;const c=new t(u);if(!(c instanceof n))throw new X.nj(`Sequential.fromConfig called on non-Sequential input: ${c}`);for(const d of l){const M=(0,Zt.v)(d,void 0,a);a&&M.setFastWeightInitDuringBuild(!0),c.add(M)}return c}set stopTraining(t){if(null==this.model)throw new X.nu("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new X.nu("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const s of this.layers){const r={};r.className=s.getClassName(),r.config=s.getConfig(),t.push(r)}return{name:this.name,layers:t}}}return n.className="Sequential",n})();function Hs(n){return new je(n)}function qn(n){return new Rn(n)}function Pn(n){return(0,Ee.I)(n)}function ts(n,e){fe.Sk.registerCallbackConstructor(n,e)}i.m7h.registerClass(Rn);var he=o(6356);function Mn(n){if(null!=n&&"object"!=typeof n)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class es extends i.m7h.Serializable{}let gn=(()=>{class n extends es{constructor(t){super(),Mn(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return(0,i.lub)(()=>{let s=(0,i.lls)([1]);return this.hasL1&&(s=(0,i.IHx)(s,(0,i.Smz)(i.dC7(this.l1,(0,i.WnP)(t))))),this.hasL2&&(s=(0,i.IHx)(s,(0,i.Smz)(i.dC7(this.l2,D.h6(t))))),i.XLQ(s,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,s){return new t({l1:s.l1,l2:s.l2})}}return n.className="L1L2",n})();i.m7h.registerClass(gn);const ns={l1l2:"L1L2"};function Jt(n){return(0,st.Kj)(n)}function ss(n,e={}){return(0,st.tU)(n,i.m7h.SerializationMap.getMap().classNameMap,e,"regularizer")}function re(n){return null==n?null:"string"==typeof n?ss({className:n in ns?ns[n]:n,config:{}}):n instanceof es?n:ss(n)}let rs=(()=>{class n extends Dt.mh{constructor(t){super(t??{}),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,s){t=(0,yt.nQ)(t);let r=(0,i.UYe)(t);return null!=this.maxValue&&(r=(0,i.iUl)(r,0,this.maxValue)),r}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},s=super.getConfig();return Object.assign(t,s),t}}return n.className="ReLU",n})();i.m7h.registerClass(rs);let is=(()=>{class n extends Dt.mh{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,s){const r=(0,yt.nQ)(t);return(0,i.hi7)(r,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},s=super.getConfig();return Object.assign(t,s),t}}return n.className="LeakyReLU",n})();i.m7h.registerClass(is);let as=(()=>{class n extends Dt.mh{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=(0,mt.L5)(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=re(t.alphaRegularizer),this.alphaConstraint=xt(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new X.nu(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const s=(t=(0,yt.Wf)(t)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)s[a-1]=1;this.alpha=this.addWeight("alpha",s,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(null!=this.sharedAxes)for(let a=1;a<t.length;++a)r[a]=t[a];this.inputSpec=[new Dt.Zg({ndim:t.length,axes:r})],this.built=!0}call(t,s){return t=(0,yt.nQ)(t),(0,i.AL3)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:(0,mt.Cx)(this.alphaInitializer),alphaRegularizer:Jt(this.alphaRegularizer),alphaConstraint:Ot(this.alphaConstraint),sharedAxes:this.sharedAxes},s=super.getConfig();return Object.assign(t,s),t}}return n.className="PReLU",n})();i.m7h.registerClass(as);let os=(()=>{class n extends Dt.mh{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new X.nj(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,s){const r=(0,yt.nQ)(t);return(0,i.pyx)(r)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},s=super.getConfig();return Object.assign(t,s),t}}return n.className="ELU",n})();i.m7h.registerClass(os);let ls=(()=>{class n extends Dt.mh{constructor(t){super(t??{}),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,s){const r=(0,yt.nQ)(t);return(0,i.dC7)(r,(0,i.pju)((0,i.pjt)(r,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},s=super.getConfig();return Object.assign(t,s),t}}return n.className="ThresholdedReLU",n})();i.m7h.registerClass(ls);let us=(()=>{class n extends Dt.mh{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new he.Gc).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,s){return(0,i.lub)(()=>{let r=(0,yt.nQ)(t);const a=s.mask;if(null!=a){const l=(0,i.dC7)((0,i.luU)((0,i.iUs)(r.shape),(0,i.pju)(a,r.dtype)),(0,i.iD$)(-1e9));r=(0,i.IHx)(r,l)}return this.axis instanceof Array?this.axis.length>1?(0,i.Qqt)((0,i.luU)(r,(0,i.l_t)(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},s=super.getConfig();return Object.assign(t,s),t}}return n.className="Softmax",n})();i.m7h.registerClass(us);var te=o(20154);function Ln(n,e){return(0,i.lub)(()=>((0,Bt.cj)(e),"channelsFirst"===e?i.p4s(n,[0,2,3,1]):n))}function gr(n,e){return(0,i.lub)(()=>((0,Bt.cj)(e),"channelsFirst"===e?i.p4s(n,[0,2,3,4,1]):n))}function Xs(n,e,t,s=[1,1],r="valid",a,l,u=null){return(0,i.lub)(()=>{if(null==a&&(a=(0,lt.rf)()),(0,Bt.cj)(a),3!==n.rank&&4!==n.rank)throw new X.nu(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(3!==e.rank&&4!==e.rank)throw new X.nu(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let c=Ln(n,a);if("causal"===r)throw new X.nj("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=i.imm.conv2d({x:c,filter:e,strides:s,pad:"same"===r?"same":"valid",dilations:l,dataFormat:"NHWC",bias:t,activation:u}),"channelsFirst"===a&&(c=i.p4s(c,[0,3,1,2])),c})}class cs extends Dt.mh{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",cs.verifyArgs(t),this.rank=e,st.iQ(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new X.nj(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=(0,te.AF)(t.kernelSize,e,"kernelSize"),this.strides=(0,te.AF)(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,(0,Bt.zb)(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,(0,Bt.cj)(this.dataFormat),this.activation=(0,he.aI)(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=(0,mt.L5)(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=xt(t.biasConstraint),this.biasRegularizer=re(t.biasRegularizer),this.activityRegularizer=re(t.activityRegularizer),this.dilationRate=(0,te.AF)(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new X.nu(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new X.nu(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new X.nu(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(st.hu("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!st.Mx(e.kernelSize,"number",1,3))throw new X.nu(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:(0,he.GD)(this.activation),useBias:this.useBias,biasInitializer:(0,mt.Cx)(this.biasInitializer),biasRegularizer:Jt(this.biasRegularizer),activityRegularizer:Jt(this.activityRegularizer),biasConstraint:Ot(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class yn extends cs{constructor(e,t){super(e,t),this.kernel=null,yn.verifyArgs(t),this.filters=t.filters,st.iQ(this.filters,"filters"),this.kernelInitializer=(0,mt.L5)(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=xt(t.kernelConstraint),this.kernelRegularizer=re(t.kernelRegularizer)}build(e){e=(0,yt.Wf)(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new X.nu(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return(0,i.lub)(()=>{let s;e=(0,yt.nQ)(e);const r=null==this.bias?null:this.bias.read(),a=st.WT(this.activation.getClassName());if(null!=a&&2===this.rank)s=Xs(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)s=function yr(n,e,t,s=1,r="valid",a,l=1){return(0,i.lub)(()=>{if(null==a&&(a=(0,lt.rf)()),(0,Bt.cj)(a),3!==n.shape.length)throw new X.nu(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(3!==e.shape.length)throw new X.nu(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=t&&1!==t.shape.length)throw new X.nu(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(n=i.p4s(n,[0,2,1])),"causal"===r)throw new X.nj("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let u=i.PAt(n,e,s,"same"===r?"same":"valid","NWC",l);return null!=t&&(u=D.a2(u,t)),u})}(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)s=Xs(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new X.nj("convolutions greater than 3D are not implemented yet.");s=function _r(n,e,t,s=[1,1,1],r="valid",a,l){return(0,i.lub)(()=>{if(null==a&&(a=(0,lt.rf)()),(0,Bt.cj)(a),4!==n.rank&&5!==n.rank)throw new X.nu(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(4!==e.rank&&5!==e.rank)throw new X.nu(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let u=gr(n,a);if("causal"===r)throw new X.nj("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return u=i.pdZ(u,e,s,"same"===r?"same":"valid","NDHWC",l),null!=t&&(u=D.a2(u,t)),"channelsFirst"===a&&(u=i.p4s(u,[0,4,1,2,3])),u})}(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=(0,yt.Wf)(e);const t=[],s="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<s.length;++a){const l=(0,te.kt)(s[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(l)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:(0,mt.Cx)(this.kernelInitializer),kernelRegularizer:Jt(this.kernelRegularizer),kernelConstraint:Ot(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new X.nu(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}let Qs=(()=>{class n extends yn{constructor(t){super(2,t),n.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!st.Mx(t.kernelSize,"number",1,2))throw new X.nu(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}return n.className="Conv2D",n})();i.m7h.registerClass(Qs);let Ys=(()=>{class n extends yn{constructor(t){super(3,t),n.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new X.nu(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}return n.className="Conv3D",n})();i.m7h.registerClass(Ys);let Er=(()=>{class n extends Qs{constructor(t){if(super(t),this.inputSpec=[new Dt.Zg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new X.nu(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=(0,yt.Wf)(t)).length)throw new X.nu("Input should have rank 4; Received input shape: "+JSON.stringify(t));const s="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[s])throw new X.nu("The channel dimension of the inputs should be defined. Found `None`.");const r=t[s],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dt.Zg({ndim:4,axes:{[s]:r}})],this.built=!0}call(t,s){return i.lub(()=>{let r=(0,yt.nQ)(t);if(4!==r.shape.length)throw new X.nu(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const a=r.shape;let u,c;"channelsFirst"===this.dataFormat?(u=2,c=3):(u=1,c=2);const m=a[c],R=this.kernelSize[1],nt=this.strides[1],et=[a[0],(0,te.$U)(a[u],this.strides[0],this.kernelSize[0],this.padding),(0,te.$U)(m,nt,R,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=i.p4s(r,[0,2,3,1]));let ht=i.bc(r,this.kernel.read(),et,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(ht=i.p4s(ht,[0,3,1,2])),null!=this.bias&&(ht=D.a2(ht,this.bias.read(),this.dataFormat)),null!=this.activation&&(ht=this.activation.apply(ht)),ht})}computeOutputShape(t){const s=(t=(0,yt.Wf)(t)).slice();let r,a,l;"channelsFirst"===this.dataFormat?(r=1,a=2,l=3):(r=3,a=1,l=2);const u=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],m=this.strides[1];return s[r]=this.filters,s[a]=(0,te.$U)(s[a],d,u,this.padding),s[l]=(0,te.$U)(s[l],m,c,this.padding),s}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}return n.className="Conv2DTranspose",n})();i.m7h.registerClass(Er);let vr=(()=>{class n extends Ys{constructor(t){if(super(t),this.inputSpec=[new Dt.Zg({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new X.nu(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=(0,yt.Wf)(t)).length)throw new X.nu("Input should have rank 5; Received input shape: "+JSON.stringify(t));const s="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[s])throw new X.nu("The channel dimension of the inputs should be defined. Found `None`.");const r=t[s],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dt.Zg({ndim:5,axes:{[s]:r}})],this.built=!0}call(t,s){return i.lub(()=>{let r=(0,yt.nQ)(t);if(5!==r.shape.length)throw new X.nu(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const a=r.shape;let u,c,d;"channelsFirst"===this.dataFormat?(d=2,u=3,c=4):(d=1,u=2,c=3);const M=a[u],R=a[c],nt=this.kernelSize[1],q=this.kernelSize[2],et=this.strides[1],ht=this.strides[2],Nt=[a[0],(0,te.$U)(a[d],this.strides[0],this.kernelSize[0],this.padding),(0,te.$U)(M,et,nt,this.padding),(0,te.$U)(R,ht,q,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=i.p4s(r,[0,2,3,4,1]));let St=i.$QV(r,this.kernel.read(),Nt,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(St=i.p4s(St,[0,4,1,2,3])),null!==this.bias&&(St=D.a2(St,this.bias.read(),this.dataFormat)),null!==this.activation&&(St=this.activation.apply(St)),St})}computeOutputShape(t){const s=(t=(0,yt.Wf)(t)).slice();let r,a,l,u;"channelsFirst"===this.dataFormat?(r=1,a=2,l=3,u=4):(r=4,a=1,l=2,u=3);const c=this.kernelSize[0],d=this.kernelSize[1],m=this.kernelSize[2],M=this.strides[0],R=this.strides[1],$=this.strides[2];return s[r]=this.filters,s[a]=(0,te.$U)(s[a],M,c,this.padding),s[l]=(0,te.$U)(s[l],R,d,this.padding),s[u]=(0,te.$U)(s[u],$,m,this.padding),s}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}return n.className="Conv3DTranspose",n})();i.m7h.registerClass(vr);let si=(()=>{class n extends yn{constructor(t,s){if(super(t,s),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==s.filters)throw new X.nu("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=s.kernelInitializer||null!=s.kernelRegularizer||null!=s.kernelConstraint)throw new X.nu("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=s.padding&&"same"!==s.padding&&"valid"!==s.padding)throw new X.nu(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(s.padding)}`);this.depthMultiplier=null==s.depthMultiplier?1:s.depthMultiplier,this.depthwiseInitializer=(0,mt.L5)(s.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=re(s.depthwiseRegularizer),this.depthwiseConstraint=xt(s.depthwiseConstraint),this.pointwiseInitializer=(0,mt.L5)(s.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=re(s.pointwiseRegularizer),this.pointwiseConstraint=xt(s.pointwiseConstraint)}build(t){if((t=(0,yt.Wf)(t)).length<this.rank+2)throw new X.nu(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const s="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[s]||t[s]<0)throw new X.nu(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[s])}`);const r=t[s],a=this.kernelSize.concat([r,this.depthMultiplier]),l=[];for(let c=0;c<this.rank;++c)l.push(1);l.push(r*this.depthMultiplier,this.filters);const u=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,u,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",l,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,u,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,u,this.biasConstraint):null,this.inputSpec=[new Dt.Zg({ndim:this.rank+2,axes:{[s]:r}})],this.built=!0}call(t,s){return(0,i.lub)(()=>{let r;if(t=(0,yt.nQ)(t),1===this.rank)throw new X.nj("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=i.p4s(t,[0,2,3,1])),r=i.U_I(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=D.a2(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),"channelsFirst"===this.dataFormat&&(r=i.p4s(r,[0,3,1,2])),r})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=(0,mt.Cx)(this.depthwiseInitializer),t.pointwiseInitializer=(0,mt.Cx)(this.pointwiseInitializer),t.depthwiseRegularizer=Jt(this.depthwiseRegularizer),t.pointwiseRegularizer=Jt(this.pointwiseRegularizer),t.depthwiseConstraint=Ot(this.depthwiseConstraint),t.pointwiseConstraint=Ot(this.pointwiseConstraint),t}}return n.className="SeparableConv",n})(),Tr=(()=>{class n extends si{constructor(t){super(2,t)}}return n.className="SeparableConv2D",n})();i.m7h.registerClass(Tr);let br=(()=>{class n extends yn{constructor(t){super(1,t),n.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!st.Mx(t.kernelSize,"number",1,1))throw new X.nu(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}return n.className="Conv1D",n})();i.m7h.registerClass(br);let Dr=(()=>{class n extends Dt.mh{constructor(t){super(t),this.cropping="number"==typeof t.cropping?[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,s){return(0,i.lub)(()=>{if(t=(0,yt.nQ)(t),"channelsLast"===this.dataFormat){const r=D.uI(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return D.uI(r,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const r=D.uI(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return D.uI(r,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(t,s),t}}return n.className="Cropping2D",n})();i.m7h.registerClass(Dr);let Or=(()=>{class n extends Dt.mh{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,(0,Bt.cj)(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,(0,Bt.wU)(this.interpolation)}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],null==t[2]?null:this.size[0]*t[2],null==t[3]?null:this.size[1]*t[3]]:[t[0],null==t[1]?null:this.size[0]*t[1],null==t[2]?null:this.size[1]*t[2],t[3]]}call(t,s){return i.lub(()=>{let r=(0,yt.nQ)(t);const a=r.shape;if("channelsFirst"===this.dataFormat){r=i.p4s(r,[0,2,3,1]);const l=this.size[0]*a[2],u=this.size[1]*a[3],c="nearest"===this.interpolation?i.image.resizeNearestNeighbor(r,[l,u]):i.image.resizeBilinear(r,[l,u]);return i.p4s(c,[0,3,1,2])}{const l=this.size[0]*a[1],u=this.size[1]*a[2];return"nearest"===this.interpolation?i.image.resizeNearestNeighbor(r,[l,u]):i.image.resizeBilinear(r,[l,u])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},s=super.getConfig();return Object.assign(t,s),t}}return n.className="UpSampling2D",n})();i.m7h.registerClass(Or);let Ar=(()=>{class n extends cs{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=(0,mt.L5)(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=xt(t.depthwiseConstraint),this.depthwiseRegularizer=re(t.depthwiseRegularizer)}build(t){if((t=(0,yt.Wf)(t)).length<4)throw new X.nu(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const s="channelsFirst"===this.dataFormat?1:3;if(null==t[s]||t[s]<0)throw new X.nu(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[s]}).`);const r=t[s];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(t,s){return(0,i.lub)(()=>{let r=function ri(n,e,t=[1,1],s="valid",r,a){return(0,i.lub)(()=>{null==r&&(r=(0,lt.rf)()),(0,Bt.cj)(r);let l=Ln(n,r);if(4!==n.rank)throw new X.nu(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(4!==e.rank)throw new X.nu(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return l=i.B10(l,e,t,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(l=i.p4s(l,[0,3,1,2])),l})}(t=(0,yt.nQ)(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=D.a2(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),r})}computeOutputShape(t){t=(0,yt.Wf)(t);const r="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,l=(0,te.kt)("channelsFirst"===this.dataFormat?t[2]:t[1],this.kernelSize[0],this.padding,this.strides[0]),u=(0,te.kt)(r,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],a,l,u]:[t[0],l,u,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=(0,mt.Cx)(this.depthwiseInitializer),t.depthwiseRegularizer=Jt(this.depthwiseRegularizer),t.depthwiseConstraint=Ot(this.depthwiseRegularizer),t}}return n.className="DepthwiseConv2D",n})();i.m7h.registerClass(Ar);var Js=o(3097);function Ir(n,e,t,s){if(Array.isArray(n)){if(null!=e||null!=t)throw new X.nu("When inputs is an array, neither initialState or constants should be provided");null!=s&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(a){return null==a||Array.isArray(a)?a:[a]}return{inputs:n,initialState:e=r(e),constants:t=r(t)}}function wr(n,e,t,s=!1,r,a,l=!1,u=!1){return i.lub(()=>{const c=e.shape.length;if(c<3)throw new X.nu(`Input should be at least 3D, but is ${c}D.`);const d=[1,0].concat(qt.w6(2,c));if(e=i.p4s(e,d),null!=a)throw new X.nj("The rnn() functoin of the deeplearn.js backend does not support constants yet.");l&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=i.pju(i.pju(r,"bool"),"float32")).rank===c-1&&(r=i.dt4(r,-1)),r=i.p4s(r,d)),s&&(e=i.GYS(e,0),null!=r&&(r=i.GYS(r,0)));const m=[];let M,R=t;const $=e.shape[0],nt=i.HHK(e);let q,k;null!=r&&(q=i.HHK(r));for(let et=0;et<$;++et){const ht=nt[et],gt=i.lub(()=>n(ht,R));if(null==r)M=gt[0],R=gt[1];else{const bt=i.lub(()=>{const Et=q[et],Nt=i.luU(i.JpU(Et),Et);return{output:i.IHx(i.dC7(gt[0],Et),i.dC7(R[0],Nt)),newStates:R.map((Ut,$t)=>i.IHx(i.dC7(gt[1][$t],Et),i.dC7(Ut,Nt)))}});M=bt.output,R=bt.newStates}u&&m.push(M)}return u&&(k=i.knu(m,1)),[M,k,R]})}let qe=(()=>{class n extends Dt.mh{constructor(t){let s;if(super(t),null==t.cell)throw new X.nu("cell property is missing for the constructor of RNN.");if(s=Array.isArray(t.cell)?new nr({cells:t.cell}):t.cell,null==s.stateSize)throw new X.nu("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=s,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Dt.Zg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return qt.w6(0,t).map(s=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){(0,yt.XO)(t)&&(t=t[0]);let s=this.cell.stateSize;Array.isArray(s)||(s=[s]);const r=s[0];let a;if(a=this.returnSequences?[t[0],t[1],r]:[t[0],r],this.returnState){const l=[];for(const u of s)l.push([t[0],u]);return[a].concat(l)}return a}computeMask(t,s){return i.lub(()=>{Array.isArray(s)&&(s=s[0]);const r=this.returnSequences?s:null;if(this.returnState){const a=this.states.map(l=>null);return[r].concat(a)}return r})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,s=[];for(let r=0;r<t;++r)s.push(null);return s}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new X.nj("Constants support is not implemented in RNN yet.");(0,yt.XO)(t)&&(t=t[0]);const r=this.stateful?t[0]:null,a=t.slice(2);this.inputSpec[0]=new Dt.Zg({shape:[r,null,...a]});const l=[t[0]].concat(t.slice(2));let u;if(this.cell.build(l),u=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!i.D5U.arraysEqual(this.stateSpec.map(c=>c.shape[c.shape.length-1]),u))throw new X.nu(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=u.map(c=>new Dt.Zg({shape:[null,c]}));this.stateful&&this.resetStates()}resetStates(t,s=!1){(0,i.lub)(()=>{if(!this.stateful)throw new X.j1("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(null==r)throw new X.nu("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>i.lls([r,a])):[i.lls([r,this.cell.stateSize])];else if(null==t)i.B90(this.states_),null!=this.keptStates&&(i.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>i.lls([r,a])):this.states_[0]=i.lls([r,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X.nu(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===s?this.keptStates.push(this.states_.slice()):i.B90(this.states_);for(let a=0;a<this.states_.length;++a){const l=t[a],u=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,c=[r,u];if(!i.D5U.arraysEqual(l.shape,c))throw new X.nu(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>i.CnY(a.clone()))})}apply(t,s){let r=null==s?null:s.initialState,a=null==s?null:s.constants;null==s&&(s={});const l=Ir(t,r,a,this.numConstants);t=l.inputs,r=l.initialState,a=l.constants;let u=[],c=[];if(null!=r){s.initialState=r,u=u.concat(r),this.stateSpec=[];for(const m of r)this.stateSpec.push(new Dt.Zg({shape:m.shape}));c=c.concat(this.stateSpec)}if(null!=a&&(s.constants=a,u=u.concat(a),this.numConstants=a.length),u[0]instanceof Dt.Iy){const m=[t].concat(u),M=this.inputSpec.concat(c),R=this.inputSpec;this.inputSpec=M;const $=super.apply(m,s);return this.inputSpec=R,$}return super.apply(t,s)}call(t,s){return(0,i.lub)(()=>{const r=null==s?null:s.mask,a=null==s?null:s.training;let l=null==s?null:s.initialState;t=(0,yt.nQ)(t),null==l&&(l=this.stateful?this.states_:this.getInitialState(t));const u=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(l.length!==u)throw new X.nu(`RNN Layer has ${u} state(s) but was passed ${l.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const c={training:a},m=wr((q,k)=>{const et=this.cell.call([q].concat(k),c);return[et[0],et.slice(1)]},t,l,this.goBackwards,r,null,this.unroll,this.returnSequences),M=m[0],R=m[1],$=m[2];this.stateful&&this.resetStates($,a);const nt=this.returnSequences?R:M;return this.returnState?[nt].concat($):nt})}getInitialState(t){return(0,i.lub)(()=>{let s=i.lls(t.shape);return s=i.Smz(s,[1,2]),s=D.dt(s),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?D.Gg(s,[1,r]):s):this.cell.stateSize>1?[D.Gg(s,[1,this.cell.stateSize])]:[s]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),s={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(s.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===n.className&&(s.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),t),s)}static fromConfig(t,s,r={}){const l=(0,Zt.v)(s.cell,r);return new t(Object.assign(s,{cell:l}))}}return n.className="RNN",n})();i.m7h.registerClass(qe);class _n extends Dt.mh{}let qs=(()=>{class n extends _n{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,(0,st.iQ)(this.units,"units"),this.activation=(0,he.aI)(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=(0,mt.L5)(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=(0,mt.L5)(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=(0,mt.L5)(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=re(t.kernelRegularizer),this.recurrentRegularizer=re(t.recurrentRegularizer),this.biasRegularizer=re(t.biasRegularizer),this.kernelConstraint=xt(t.kernelConstraint),this.recurrentConstraint=xt(t.recurrentConstraint),this.biasConstraint=xt(t.biasConstraint),this.dropout=qt.VV([1,qt.Fp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=qt.VV([1,qt.Fp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=(0,yt.Wf)(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(t,s){return(0,i.lub)(()=>{if(2!==t.length)throw new X.nu(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let r=t[1];t=t[0];const a=null!=s.training&&s.training;let l;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=tn({ones:()=>i.JpU(t),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=tn({ones:()=>i.JpU(r),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=this.recurrentDropoutMask;l=D.AK(null!=u?i.dC7(t,u):t,this.kernel.read()),null!=this.bias&&(l=D.a2(l,this.bias.read())),null!=c&&(r=i.dC7(r,c));let d=i.IHx(l,D.AK(r,this.recurrentKernel.read()));return null!=this.activation&&(d=this.activation.apply(d)),[d,d]})}getConfig(){const t=super.getConfig(),s={units:this.units,activation:(0,he.GD)(this.activation),useBias:this.useBias,kernelInitializer:(0,mt.Cx)(this.kernelInitializer),recurrentInitializer:(0,mt.Cx)(this.recurrentInitializer),biasInitializer:(0,mt.Cx)(this.biasInitializer),kernelRegularizer:Jt(this.kernelRegularizer),recurrentRegularizer:Jt(this.recurrentRegularizer),biasRegularizer:Jt(this.biasRegularizer),activityRegularizer:Jt(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),recurrentConstraint:Ot(this.recurrentConstraint),biasConstraint:Ot(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),s)}}return n.className="SimpleRNNCell",n})();i.m7h.registerClass(qs);let tr=(()=>{class n extends qe{constructor(t){t.cell=new qs(t),super(t)}call(t,s){return(0,i.lub)(()=>(null!=this.cell.dropoutMask&&(i.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(i.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(t,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(t,s){return new t(s)}}return n.className="SimpleRNN",n})();i.m7h.registerClass(tr);let er=(()=>{class n extends _n{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new X.nu("GRUCell does not support reset_after parameter set to true.");this.units=t.units,(0,st.iQ)(this.units,"units"),this.activation=(0,he.aI)(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=(0,he.aI)(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=(0,mt.L5)(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=(0,mt.L5)(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=(0,mt.L5)(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=re(t.kernelRegularizer),this.recurrentRegularizer=re(t.recurrentRegularizer),this.biasRegularizer=re(t.biasRegularizer),this.kernelConstraint=xt(t.kernelConstraint),this.recurrentConstraint=xt(t.recurrentConstraint),this.biasConstraint=xt(t.biasConstraint),this.dropout=qt.VV([1,qt.Fp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=qt.VV([1,qt.Fp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=(0,yt.Wf)(t),this.kernel=this.addWeight("kernel",[t[t.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(t,s){return(0,i.lub)(()=>{if(2!==t.length)throw new X.nu(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const r=null!=s.training&&s.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=tn({ones:()=>i.JpU(t),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=tn({ones:()=>i.JpU(a),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const u=this.recurrentDropoutMask;let c,d,m;0<this.dropout&&this.dropout<1&&(t=i.dC7(t,this.dropoutMask[0]));let M=D.AK(t,this.kernel.read());this.useBias&&(M=D.a2(M,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=i.dC7(a,u[0]));const R=this.recurrentKernel.read(),[$,nt]=i.Vl2(R,[2*this.units,this.units],R.rank-1),q=D.AK(a,$),[k,et,ht]=i.Vl2(M,3,M.rank-1),[gt,bt]=i.Vl2(q,2,q.rank-1);c=this.recurrentActivation.apply(i.IHx(k,gt)),d=this.recurrentActivation.apply(i.IHx(et,bt));const Et=D.AK(i.dC7(d,a),nt);m=this.activation.apply(i.IHx(ht,Et));const Nt=i.IHx(i.dC7(c,a),i.dC7(i.IHx(1,i.W76(c)),m));return[Nt,Nt]})}getConfig(){const t=super.getConfig(),s={units:this.units,activation:(0,he.GD)(this.activation),recurrentActivation:(0,he.GD)(this.recurrentActivation),useBias:this.useBias,kernelInitializer:(0,mt.Cx)(this.kernelInitializer),recurrentInitializer:(0,mt.Cx)(this.recurrentInitializer),biasInitializer:(0,mt.Cx)(this.biasInitializer),kernelRegularizer:Jt(this.kernelRegularizer),recurrentRegularizer:Jt(this.recurrentRegularizer),biasRegularizer:Jt(this.biasRegularizer),activityRegularizer:Jt(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),recurrentConstraint:Ot(this.recurrentConstraint),biasConstraint:Ot(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),s)}}return n.className="GRUCell",n})();i.m7h.registerClass(er);let Nr=(()=>{class n extends qe{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new er(t),super(t)}call(t,s){return(0,i.lub)(()=>(null!=this.cell.dropoutMask&&(i.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(i.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(t,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(t,s){return 0===s.implmentation&&(s.implementation=1),new t(s)}}return n.className="GRU",n})();i.m7h.registerClass(Nr);let hs=(()=>{class n extends _n{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,(0,st.iQ)(this.units,"units"),this.activation=(0,he.aI)(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=(0,he.aI)(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=(0,mt.L5)(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=(0,mt.L5)(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=(0,mt.L5)(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=re(t.kernelRegularizer),this.recurrentRegularizer=re(t.recurrentRegularizer),this.biasRegularizer=re(t.biasRegularizer),this.kernelConstraint=xt(t.kernelConstraint),this.recurrentConstraint=xt(t.recurrentConstraint),this.biasConstraint=xt(t.biasConstraint),this.dropout=qt.VV([1,qt.Fp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=qt.VV([1,qt.Fp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var s;let a;if(t=(0,yt.Wf)(t),this.kernel=this.addWeight("kernel",[t[t.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const l=this.biasInitializer,u=this.units;a=new((s=class extends mt.m7{apply(d,m){const M=l.apply([u]),R=(new mt.M6).apply([u]),$=l.apply([2*u]);return D.GZ(D.GZ(M,R),$)}}).className="CustomInit",s)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,s){return(0,i.lub)(()=>{const r=null!=s.training&&s.training;if(3!==t.length)throw new X.nu(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let a=t[1];const l=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=tn({ones:()=>i.JpU(t),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=tn({ones:()=>i.JpU(a),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const c=this.recurrentDropoutMask;let d,m,M,R;0<this.dropout&&this.dropout<1&&(t=i.dC7(t,this.dropoutMask[0]));let $=D.AK(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=i.dC7(a,c[0])),$=i.IHx($,D.AK(a,this.recurrentKernel.read())),this.useBias&&($=D.a2($,this.bias.read()));const[nt,q,k,et]=i.Vl2($,4,$.rank-1);d=this.recurrentActivation.apply(nt),m=this.recurrentActivation.apply(q),M=i.IHx(i.dC7(m,l),i.dC7(d,this.activation.apply(k))),R=this.recurrentActivation.apply(et);const ht=i.dC7(R,this.activation.apply(M));return[ht,ht,M]})}getConfig(){const t=super.getConfig(),s={units:this.units,activation:(0,he.GD)(this.activation),recurrentActivation:(0,he.GD)(this.recurrentActivation),useBias:this.useBias,kernelInitializer:(0,mt.Cx)(this.kernelInitializer),recurrentInitializer:(0,mt.Cx)(this.recurrentInitializer),biasInitializer:(0,mt.Cx)(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Jt(this.kernelRegularizer),recurrentRegularizer:Jt(this.recurrentRegularizer),biasRegularizer:Jt(this.biasRegularizer),activityRegularizer:Jt(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),recurrentConstraint:Ot(this.recurrentConstraint),biasConstraint:Ot(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),s)}}return n.className="LSTMCell",n})();i.m7h.registerClass(hs);let Cr=(()=>{class n extends qe{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new hs(t),super(t)}call(t,s){return(0,i.lub)(()=>(null!=this.cell.dropoutMask&&(i.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(i.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(t,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(t,s){return 0===s.implmentation&&(s.implementation=1),new t(s)}}return n.className="LSTM",n})();i.m7h.registerClass(Cr);let nr=(()=>{class n extends _n{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const s of this.cells.slice().reverse())Array.isArray(s.stateSize)?t.push(...s.stateSize):t.push(s.stateSize);return t}call(t,s){return(0,i.lub)(()=>{let r=t.slice(1);const a=[];for(const c of this.cells.slice().reverse())Array.isArray(c.stateSize)?a.push(r.splice(0,c.stateSize.length)):a.push(r.splice(0,1));a.reverse();const l=[];let u;for(let c=0;c<this.cells.length;++c){const d=this.cells[c];r=a[c],u=0===c?[t[0]].concat(r):[u[0]].concat(r),u=d.call(u,s),l.push(u.slice(1))}r=[];for(const c of l.slice().reverse())r.push(...c);return[u[0]].concat(r)})}build(t){let s;(0,yt.XO)(t)&&(t=t[0]),this.cells.forEach((r,a)=>{(0,Bt.f4)(`RNNCell_${a}`,()=>{r.build(t),s=Array.isArray(r.stateSize)?r.stateSize[0]:r.stateSize,t=[t[0],s]})}),this.built=!0}getConfig(){const t=super.getConfig(),a={cells:this.cells.map(l=>({className:l.getClassName(),config:l.getConfig()}))};return Object.assign(Object.assign({},t),a)}static fromConfig(t,s,r={}){const a=[];for(const l of s.cells)a.push((0,Zt.v)(l,r));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const s of this.cells)t.push(...s.nonTrainableWeights);if(!this.trainable){const s=[];for(const r of this.cells)s.push(...r.trainableWeights);return s.concat(t)}return t}getWeights(){const t=[];for(const s of this.cells)t.push(...s.weights);return(0,Js.FQ)(t)}setWeights(t){const s=[];for(const r of this.cells){const l=t.splice(r.weights.length);for(let u=0;u<r.weights.length;++u)s.push([r.weights[u],l[u]])}(0,Js.zb)(s)}}return n.className="StackedRNNCells",n})();function tn(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:a}=n,l=()=>null!=a?a(e(),t):D.rv(e(),t),u=()=>D.KC(l,e,s);return!r||r<=1?i.CnY(u().clone()):Array(r).fill(void 0).map(u).map(d=>i.CnY(d.clone()))}i.m7h.registerClass(nr);let ai=(()=>{class n extends qe{constructor(t){if(t.unroll)throw new X.nj("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new X.nj("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Dt.Zg({ndim:5})]}call(t,s){return i.lub(()=>{if(null!=this.cell.dropoutMask&&(i.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(i.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),s&&s.constants)throw new X.nu("ConvRNN2D cell does not support constants");return super.call(t,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})})}computeOutputShape(t){let s=this.computeSingleOutputShape(t);return this.returnSequences||(s=[s[0],...s.slice(2)]),this.returnState&&(s=[s,...Array(2).fill([t[0],...s.slice(-3)])]),s}getInitialState(t){return i.lub(()=>{const{stateSize:s}=this.cell,a=this.computeSingleOutputShape(t.shape),l=[a[0],...a.slice(2)],u=i.lls(l);return Array.isArray(s)?Array(s.length).fill(u):[u]})}resetStates(t,s=!1){i.lub(()=>{if(!this.stateful)throw new X.j1("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,a=this.computeSingleOutputShape(r),l=[a[0],...a.slice(2)];if(null==r[0])throw new X.nu("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>i.lls(l)):[i.lls(l)];else if(null==t)i.B90(this.states_),null!=this.keptStates&&(i.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>i.lls(l)):this.states_[0]=i.lls(l);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X.nu(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);s?this.keptStates.push(this.states_.slice()):i.B90(this.states_);for(let c=0;c<this.states_.length;++c){const d=t[c],m=l;if(!i.D5U.arraysEqual(d.shape,m))throw new X.nu(`State ${c} is incompatible with layer ${this.name}: expected shape=${m}, received shape=${d.shape}`);this.states_[c]=d}}this.states_=this.states_.map(c=>i.CnY(c.clone()))})}computeSingleOutputShape(t){const{dataFormat:s,filters:r,kernelSize:a,padding:l,strides:u,dilationRate:c}=this.cell,d="channelsFirst"===s,M=t[d?4:3],R=(0,te.kt)(t[d?3:2],a[0],l,u[0],c[0]),$=(0,te.kt)(M,a[1],l,u[1],c[1]);return[...t.slice(0,2),...d?[r,R,$]:[R,$,r]]}}return n.className="ConvRNN2D",n})(),sr=(()=>{class n extends hs{constructor(t){const{filters:s,kernelSize:r,strides:a,padding:l,dataFormat:u,dilationRate:c}=t;super(Object.assign(Object.assign({},t),{units:s})),this.filters=s,(0,st.iQ)(this.filters,"filters"),this.kernelSize=(0,te.AF)(r,2,"kernelSize"),this.kernelSize.forEach(d=>(0,st.iQ)(d,"kernelSize")),this.strides=(0,te.AF)(a||1,2,"strides"),this.strides.forEach(d=>(0,st.iQ)(d,"strides")),this.padding=l||"valid",(0,Bt.zb)(this.padding),this.dataFormat=u||"channelsLast",(0,Bt.cj)(this.dataFormat),this.dilationRate=(0,te.AF)(c||1,2,"dilationRate"),this.dilationRate.forEach(d=>(0,st.iQ)(d,"dilationRate"))}build(t){var s;t=(0,yt.Wf)(t);const r="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[r])throw new X.nu(`The channel dimension of the input should be defined. Found ${t[r]}`);const u=this.kernelSize.concat([t[r],4*this.filters]);this.kernel=this.addWeight("kernel",u,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const c=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",c,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let d;if(this.unitForgetBias){const m=this.biasInitializer,M=this.filters;d=new((s=class extends mt.m7{apply($,nt){const q=m.apply([M]),k=i.iUs([M]),et=m.apply([2*M]);return D.mV([q,k,et])}}).className="CustomInit",s)}else d=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,d,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,s){return i.lub(()=>{if(3!==t.length)throw new X.nu(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const r=s.training||!1,a=t[0],l=t[1],u=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=tn({ones:()=>i.JpU(a),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const d=this.dropoutMask,m=(cr,It,le)=>It&&It[le]?i.dC7(It[le],cr):cr;let M=m(a,d,0),R=m(a,d,1),$=m(a,d,2),nt=m(a,d,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=tn({ones:()=>i.JpU(l),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const q=this.recurrentDropoutMask;let k=m(l,q,0),et=m(l,q,1),ht=m(l,q,2),gt=m(l,q,3);const[Et,Nt,St,Lt]=i.Vl2(this.kernel.read(),4,3),[Ut,$t,Ft,Xt]=this.useBias?i.Vl2(this.bias.read(),4):[null,null,null,null];M=this.inputConv(M,Et,Ut,this.padding),R=this.inputConv(R,Nt,$t,this.padding),$=this.inputConv($,St,Ft,this.padding),nt=this.inputConv(nt,Lt,Xt,this.padding);const[zt,Qt,En,Gt]=i.Vl2(this.recurrentKernel.read(),4,3);k=this.recurrentConv(k,zt),et=this.recurrentConv(et,Qt),ht=this.recurrentConv(ht,En),gt=this.recurrentConv(gt,Gt);const xe=this.recurrentActivation.apply(i.IHx(M,k)),Ge=this.recurrentActivation.apply(i.IHx(R,et)),nn=i.IHx(i.dC7(Ge,u),i.dC7(xe,this.activation.apply(i.IHx($,ht)))),vn=i.dC7(this.recurrentActivation.apply(i.IHx(nt,gt)),this.activation.apply(nn));return[vn,vn,nn]})}getConfig(){const r=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]])}return t}(super.getConfig(),["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),a)}inputConv(t,s,r,a){const l=i.Tek(t,s,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return r?D.a2(l,r,this.dataFormat):l}recurrentConv(t,s){return i.Tek(t,s,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}return n.className="ConvLSTM2DCell",n})();i.m7h.registerClass(sr);let Sr=(()=>{class n extends ai{constructor(t){const s=new sr(t);super(Object.assign(Object.assign({},t),{cell:s}))}static fromConfig(t,s){return new t(s)}}return n.className="ConvLSTM2D",n})();i.m7h.registerClass(Sr);let rr=(()=>{class n extends Dt.mh{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const s=t.shape,r=[];for(let a=0;a<this.noiseShape.length;++a)r.push(null==this.noiseShape[a]?s[a]:this.noiseShape[a]);return r}call(t,s){return(0,i.lub)(()=>{this.invokeCallHook(t,s);const r=(0,yt.nQ)(t);if(0<this.rate&&this.rate<1){const a=null!=s.training&&s.training,l=this.getNoiseShape(r);return D.KC(()=>D.rv(r,this.rate,l,this.seed),()=>r,a)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},s=super.getConfig();return Object.assign(t,s),t}dispose(){return super.dispose()}}return n.className="Dropout",n})();i.m7h.registerClass(rr);let Rr=(()=>{class n extends rr{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const s=t.shape;return[s[0],1,s[2]]}}return n.className="SpatialDropout1D",n})();i.m7h.registerClass(Rr);let Pr=(()=>{class n extends Dt.mh{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let s=null;null!=t.batchSize&&(s=t.batchSize),this.batchInputShape=[s,t.inputDim]}this.units=t.units,(0,st.iQ)(this.units,"units"),this.activation=(0,he.aI)(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=(0,mt.L5)(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=(0,mt.L5)(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=xt(t.kernelConstraint),this.biasConstraint=xt(t.biasConstraint),this.kernelRegularizer=re(t.kernelRegularizer),this.biasRegularizer=re(t.biasRegularizer),this.activityRegularizer=re(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const s=(t=(0,yt.Wf)(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[s,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:s}}],this.built=!0}computeOutputShape(t){const s=(t=(0,yt.Wf)(t)).slice();return s[s.length-1]=this.units,s}call(t,s){return(0,i.lub)(()=>{this.invokeCallHook(t,s);const r=(0,yt.nQ)(t),a=(0,st.WT)(this.activation.getClassName());let l;return null!=a?l=D.AK(r,this.kernel.read(),a,this.bias?this.bias.read():null):(l=D.AK(r,this.kernel.read()),null!=this.bias&&(l=D.a2(l,this.bias.read())),null!=this.activation&&(l=this.activation.apply(l))),l})}getConfig(){const t={units:this.units,activation:(0,he.GD)(this.activation),useBias:this.useBias,kernelInitializer:(0,mt.Cx)(this.kernelInitializer),biasInitializer:(0,mt.Cx)(this.biasInitializer),kernelRegularizer:Jt(this.kernelRegularizer),biasRegularizer:Jt(this.biasRegularizer),activityRegularizer:Jt(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),biasConstraint:Ot(this.biasConstraint)},s=super.getConfig();return Object.assign(t,s),t}}return n.className="Dense",n})();i.m7h.registerClass(Pr);let Mr=(()=>{class n extends Dt.mh{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=(0,yt.Wf)(t);for(const s of t.slice(1))if(null==s)throw new X.nu(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],(0,qt.NS)(t,1)]}call(t,s){return(0,i.lub)(()=>{this.invokeCallHook(t,s);let r=(0,yt.nQ)(t);if("channelsFirst"===this.dataFormat&&r.rank>1){const a=[0];for(let l=2;l<r.rank;++l)a.push(l);a.push(1),r=(0,i.p4s)(r,a)}return D.Uz(r)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const s=super.getConfig();return Object.assign(t,s),t}}return n.className="Flatten",n})();i.m7h.registerClass(Mr);let Lr=(()=>{class n extends Dt.mh{constructor(t){super(t),this.supportsMasking=!0,this.activation=(0,he.aI)(t.activation)}call(t,s){return(0,i.lub)(()=>{this.invokeCallHook(t,s);const r=(0,yt.nQ)(t);return this.activation.apply(r)})}getConfig(){const t={activation:(0,he.GD)(this.activation)},s=super.getConfig();return Object.assign(t,s),t}}return n.className="Activation",n})();i.m7h.registerClass(Lr);let xr=(()=>{class n extends Dt.mh{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,s){return(0,i.lub)(()=>(t=(0,yt.nQ)(t),D.rx(t,this.n)))}getConfig(){const t={n:this.n},s=super.getConfig();return Object.assign(t,s),t}}return n.className="RepeatVector",n})();i.m7h.registerClass(xr);let Br=(()=>{class n extends Dt.mh{constructor(t){super(t),this.targetShape=t.targetShape;for(let s=0;s<this.targetShape.length;++s)this.isUnknown(this.targetShape[s])&&(this.targetShape[s]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,s){const r="Total size of new array must be unchanged.",a=s.slice();let l=1,u=null;for(let d=0;d<a.length;++d){const m=a[d];if(this.isUnknown(m)){if(null!==u)throw new X.nu("Can only specifiy one unknown dimension.");u=d}else l*=m}const c=(0,qt.NS)(t);if(null!==u){if(0===l||c%l!==0)throw new X.nu(r);a[u]=c/l}else if(c!==l)throw new X.nu(r);return a}computeOutputShape(t){let s=!1;for(let r=0;r<t.length;++r)if(this.isUnknown(t[r])){s=!0;break}return s?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,s){return(0,i.lub)(()=>{this.invokeCallHook(t,s);const r=(0,yt.nQ)(t),a=r.shape,l=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return(0,i.XLQ)(r,l)})}getConfig(){const t={targetShape:this.targetShape},s=super.getConfig();return Object.assign(t,s),t}}return n.className="Reshape",n})();i.m7h.registerClass(Br);let zr=(()=>{class n extends Dt.mh{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const s=(0,qt.w6)(1,t.dims.length+1);if(!i.D5U.arraysEqual(t.dims.slice().sort(),s))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Dt.Zg({ndim:this.dims.length+1})]}computeOutputShape(t){const s=(t=(0,yt.Wf)(t)).slice();return this.dims.forEach((r,a)=>{s[a+1]=t[r]}),s}call(t,s){return(0,i.p4s)((0,yt.nQ)(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},s=super.getConfig();return Object.assign(t,s),t}}return n.className="Permute",n})();i.m7h.registerClass(zr);let Ur=(()=>{class n extends Dt.mh{constructor(t){super(t??{}),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),s={maskValue:this.maskValue};return Object.assign(s,t),s}computeMask(t,s){const r=(0,yt.nQ)(t);return(0,i.YjB)((0,i.Quu)(r,this.maskValue),-1)}call(t,s){return(0,i.lub)(()=>{this.invokeCallHook(t,s);const r=(0,yt.nQ)(t),u=(0,i.YjB)((0,i.Quu)(r,this.maskValue),-1,!0);return(0,i.dC7)(r,(0,i.pju)(u,r.dtype))})}}return n.className="Masking",n})();i.m7h.registerClass(Ur);let Fr=(()=>{class n extends Dt.mh{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let s=null;null!=t.batchSize&&(s=t.batchSize),this.batchInputShape=null==t.inputLength?[s,null]:[s].concat(st.zZ(t.inputLength))}this.inputDim=t.inputDim,st.iQ(this.inputDim,"inputDim"),this.outputDim=t.outputDim,st.iQ(this.outputDim,"outputDim"),this.embeddingsInitializer=(0,mt.L5)(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=re(t.embeddingsRegularizer),this.activityRegularizer=re(t.activityRegularizer),this.embeddingsConstraint=xt(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,s){return(0,i.lub)(()=>this.maskZero?(t=(0,yt.nQ)(t),(0,i.Quu)(t,(0,i.P84)(t))):null)}computeOutputShape(t){if(t=(0,yt.Wf)(t),null==this.inputLength)return[...t,this.outputDim];const s=st.zZ(this.inputLength);if(s.length!==t.length-1)throw new X.nu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let r=0;for(let a=0;a<s.length;++a){const l=s[a],u=t[a+1];if(null!=l&&null!=u&&l!==u)throw new X.nu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==l&&(s[r]=u),r++}}return[t[0],...s,this.outputDim]}call(t,s){return(0,i.lub)(()=>{this.invokeCallHook(t,s);let r=(0,yt.nQ)(t);"int32"!==r.dtype&&(r=D.pj(r,"int32"));const a=D.Iq(this.embeddings.read(),(0,i.XLQ)(r,[r.size]));return(0,i.XLQ)(a,(0,yt.Wf)(this.computeOutputShape(r.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:(0,mt.Cx)(this.embeddingsInitializer),embeddingsRegularizer:Jt(this.embeddingsRegularizer),activityRegularizer:Jt(this.activityRegularizer),embeddingsConstraint:Ot(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},s=super.getConfig();return Object.assign(t,s),t}}return n.className="Embedding",n})();i.m7h.registerClass(Fr);class an extends Dt.mh{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new X.nj}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],l=t[r];if(null==a||null==l||a<0||l<0)s.push(null);else if(1===a)s.push(l);else if(1===l)s.push(a);else{if(a!==l)throw new X.nu("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(a)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[(0,yt.Wf)(e)]),e.length<2)throw new X.nu(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=st.Tw(t),t.length>1)throw new X.nu(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const l=null==e[a]?null:e[a].slice(1);s=this.computeElementwiseOpOutputShape(s,l)}const r=e.map(a=>a.length);this.reshapeRequired=-1!==e.indexOf(null)||1!==st.Tw(r).length}call(e,t){return(0,i.lub)(()=>{if(this.reshapeRequired){const s=[],r=e.map(a=>a.rank);if(-1===r.indexOf(null)){const a=qt.Fp(r);for(let l of e){const u=l.rank;for(let c=0;c<a-u;++c)l=D.dt(l,1);s.push(l)}return this.mergeFunction(s)}{let a=!1;for(const c of e){const d=c.rank;if(null==d){const m=c.shape,M=m[0],R=m.slice(1).concat([M]);let $=i.XLQ(c,[M].concat(qt.NS(m.slice(1))));$=i.p4s($,[1,0]),$=i.XLQ($,R),s.push($),a=!0}else if(d>1){const m=qt.w6(1,d).concat([0]);s.push(i.p4s(c,m)),a=!0}else s.push(c)}let l=this.mergeFunction(s);const u=l.rank;if(a)if(null==u){const c=l.shape,m=c[c.length-1],M=[m].concat(c.slice(0,c.length-1));l=i.XLQ(i.p4s(i.XLQ(l,[-1,m]),[1,0]),M)}else if(u>1){const c=[u-1].concat(qt.w6(0,u-1));l=i.p4s(l,c)}return l}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const a=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let s=[];for(const r of e)null!=r&&null!==r[0]&&s.push(r[0]);return s=st.Tw(s),t=1===s.length?s.concat(t):[null].concat(t),t}computeMask(e,t){return i.lub(()=>{if(null==t)return null;if(!Array.isArray(t))throw new X.nu("`mask` should be an Array");if(!Array.isArray(e))throw new X.nu("`inputs` should be an Array");if(t.length!==e.length)throw new X.nu(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>null==r))return null;let s=(t=t.map(r=>null==r?r:i.dt4(r,0)))[0];for(let r=1;r<t.length-1;++r)s=i.HvI(s,t[r]);return s})}}let ds=(()=>{class n extends an{constructor(t){super(t)}mergeFunction(t){return(0,i.lub)(()=>{let s=t[0].clone();for(let r=1;r<t.length;++r)s=i.IHx(s,t[r]);return s})}}return n.className="Add",n})();i.m7h.registerClass(ds);let ms=(()=>{class n extends an{constructor(t){super(t)}mergeFunction(t){return(0,i.lub)(()=>{let s=t[0].clone();for(let r=1;r<t.length;++r)s=i.dC7(s,t[r]);return s})}}return n.className="Multiply",n})();i.m7h.registerClass(ms);let fs=(()=>{class n extends an{constructor(t){super(t)}mergeFunction(t){return(0,i.lub)(()=>{let s=t[0].clone();for(let r=1;r<t.length;++r)s=i.IHx(s,t[r]);return i.dC7(1/t.length,s)})}}return n.className="Average",n})();i.m7h.registerClass(fs);let ps=(()=>{class n extends an{constructor(t){super(t)}mergeFunction(t){return(0,i.lub)(()=>{let s=t[0];for(let r=1;r<t.length;++r)s=i.gWQ(s,t[r]);return s})}}return n.className="Maximum",n})();i.m7h.registerClass(ps);let gs=(()=>{class n extends an{constructor(t){super(t)}mergeFunction(t){return(0,i.lub)(()=>{let s=t[0];for(let r=1;r<t.length;++r)s=i.LTh(s,t[r]);return s})}}return n.className="Minimum",n})();i.m7h.registerClass(gs);let ys=(()=>{class n extends an{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new X.nu("A `Concatenate` layer should be called on a list of at least 2 inputs");let s=!0;for(const a of t)if(null!=a){s=!1;break}if(s)return;const r=[];for(let a=0;a<t.length;++a){const l=t[a].slice();l.splice(this.axis,1);let u=!1;for(const c of r)if(i.D5U.arraysEqual(c,l)){u=!0;break}u||r.push(l)}if(r.length>1)throw new X.nu("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return(0,i.lub)(()=>D.mV(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new X.nu("A `Concatenate` layer should be called on a list of inputs.");const s=t,r=s[0].slice(),a=this.axis<0?r.length+this.axis:this.axis;for(const l of s.slice(1)){if(null==r[a]||null==l[a]){r[a]=null;break}r[a]+=l[a]}return r}computeMask(t,s){if(null==s)return null;if(!Array.isArray(s))throw new X.nu("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new X.nu("`inputs` should be an array for Concatenate");if(s.length!==t.length)throw new X.nu(`Mismatch in the length of mask (${s.length}) and the legnth of inputs (${t.length})`);return i.lub(()=>{let r=!0;if(s.forEach(u=>{null==u||(r=!1)}),r)return null;const a=[];for(let u=0;u<t.length;++u)a.push(null==s[u]?i.pju(i.JpU(t[u]),"bool"):s[u].rank<t[u].rank?i.dt4(s[u],-1):s[u]);const l=i.zoF(a,this.axis);return i.$6P(l,-1,!1)})}getConfig(){const t={axis:this.axis},s=super.getConfig();return Object.assign(t,s),t}}return n.className="Concatenate",n})();function xn(n,e){for(;n<0;)n+=e;return n}i.m7h.registerClass(ys);let Wr=(()=>{class n extends an{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){i.D5U.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=t[0],r=t[1];if(s.length>3||r.length>3)throw new X.nj("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(s,r);if(s[a[0]]!==r[a[1]])throw new X.nu(`Dimension incompatibility: ${s[a[0]]} !== ${r[a[1]]}`)}mergeFunction(t){if(2!==t.length)throw new X.nu(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let a,s=t[0],r=t[1];return a=Array.isArray(this.axes)?this.axes.map((l,u)=>xn(l,t[u].shape.length)):[xn(this.axes,s.shape.length),xn(this.axes,r.shape.length)],this.normalize&&(s=Se(s,a[0]),r=Se(r,a[1])),function oi(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new X.nj("batchDot is not implemented for tensors of 4D or higher rank yet");if(i.D5U.assert(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),i.D5U.assert(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),"number"==typeof t&&(t=[t,t]),"complex64"===n.dtype||"complex64"===e.dtype)throw new X.nj("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;null==t&&(t=[s-1,r-2]);const a=t;return i.lub(()=>{let l,u;if(s>r){l=s-r;const c=[];for(let d=0;d<l;++d)c.push(1);e=i.XLQ(e,e.shape.concat(c))}else if(r>s){l=r-s;const c=[];for(let d=0;d<l;++d)c.push(1);n=i.XLQ(n,n.shape.concat(c))}else l=0;if(u=2===n.shape.length&&2===e.shape.length?a[0]===a[1]?i.Smz(i.dC7(n,e),a[0]):i.Smz(i.dC7(i.p4s(n,[1,0]),e),a[1]):i.OI3(n,e,a[0]!==n.shape.length-1,a[1]===e.shape.length-1),l>0){let c;c=s>r?s+r-3:s-1;const d=[];for(let m=c;m<c+l;++m)d.push(m);u=i.L9e(u,d)}return 1===u.shape.length&&(u=i.dt4(u,1)),u})}(s,r,a)}interpretAxes(t,s){let r;return r=Array.isArray(this.axes)?this.axes:[xn(this.axes,t.length),xn(this.axes,s.length)],r}computeOutputShape(t){i.D5U.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=t[0].slice(),r=t[1].slice();if(s.length>3||r.length>3)throw new X.nj("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(s,r);s.splice(a[0],1),r.splice(a[1],1),r.splice(0,1);const l=s.concat(r);return 1===l.length&&l.push(1),l}computeMask(t,s){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},s=super.getConfig();return Object.assign(t,s),t}}return n.className="Dot",n})();i.m7h.registerClass(Wr);let kr=(()=>{class n extends Dt.mh{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),s={stddev:this.stddev};return Object.assign(s,t),s}call(t,s){return(0,i.lub)(()=>{this.invokeCallHook(t,s);const r=(0,yt.nQ)(t);return D.KC(()=>(0,i.IHx)(D.nG(r.shape,0,this.stddev),r),()=>r,s.training||!1)})}}return n.className="GaussianNoise",n})();i.m7h.registerClass(kr);let $r=(()=>{class n extends Dt.mh{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),s={rate:this.rate};return Object.assign(s,t),s}call(t,s){return(0,i.lub)(()=>{this.invokeCallHook(t,s);const r=(0,yt.nQ)(t);if(this.rate>0&&this.rate<1){const a=()=>{const l=Math.sqrt(this.rate/(1-this.rate));return(0,i.dC7)(r,D.nG(r.shape,1,l))};return D.KC(a,()=>r,s.training||!1)}return r})}}return n.className="GaussianDropout",n})();i.m7h.registerClass($r);let Kr=(()=>{class n extends Dt.mh{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||(0,yt.nQ)(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),s={rate:this.rate};return Object.assign(s,t),s}call(t,s){return(0,i.lub)(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(t),a=()=>{const l=(0,yt.nQ)(t),d=-1.7580993408473766;let m=(0,i.brS)((0,i.LGj)(r),this.rate);m=D.pj(m,"float32");const M=((1-this.rate)*(1+this.rate*d**2))**-.5,R=-M*d*this.rate,$=(0,i.IHx)((0,i.dC7)(l,m),(0,i.dC7)((0,i.IHx)(m,-1),d));return(0,i.IHx)((0,i.dC7)($,M),R)};return D.KC(a,()=>(0,yt.nQ)(t),s.training||!1)}return t})}}return n.className="AlphaDropout",n})();function Bn(n,e,t,s,r,a=.001){let l;if(2===n.rank)l=i.Dxk(n,e,t,s,r,a);else if(3===n.rank)l=i.JY5(n,e,t,s,r,a);else{if(4!==n.rank)throw new X.nj(`batchNormalization is not implemented for array of rank ${n.rank} yet`);l=i.p3b(n,e,t,s,r,a)}return l}i.m7h.registerClass(Kr);let Vr=(()=>{class n extends Dt.mh{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=(0,mt.L5)(t.betaInitializer||"zeros"),this.gammaInitializer=(0,mt.L5)(t.gammaInitializer||"ones"),this.movingMeanInitializer=(0,mt.L5)(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=(0,mt.L5)(t.movingVarianceInitializer||"ones"),this.betaConstraint=xt(t.betaConstraint),this.gammaConstraint=xt(t.gammaConstraint),this.betaRegularizer=re(t.betaRegularizer),this.gammaRegularizer=re(t.gammaRegularizer)}build(t){t=(0,yt.Wf)(t);const s=this.axis>=0?this.axis:this.axis+t.length,r=t[s];if(null==r)throw new X.nu(`Axis ${s} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Dt.Zg({ndim:t.length,axes:{[s]:r}})];const a=[r];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,s){return(0,i.lub)(()=>{const r=null!=s.training&&s.training,a=(0,yt.nQ)(t),l=a.shape,u=l.length,c=qt.w6(0,u),d=this.axis>=0?this.axis:this.axis+u;c.splice(d,1);const m=st.JE(1,u);m[d]=l[d];const M=c.slice();M.sort();const R=!i.D5U.arraysEqual(M,qt.w6(0,u).slice(0,u-1));if(!r)return(()=>{if(R){const gt=(0,i.XLQ)(this.movingMean.read(),m),bt=(0,i.XLQ)(this.movingVariance.read(),m),Et=this.center?(0,i.XLQ)(this.beta.read(),m):null,Nt=this.scale?(0,i.XLQ)(this.gamma.read(),m):null;return Bn(a,gt,bt,Et,Nt,this.epsilon)}return Bn(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[nt,q,k]=function ci(n,e,t,s,r=.001){return i.D5U.arraysEqual(s.slice().sort(),qt.w6(0,n.rank-1))?function li(n,e,t,s,r=.001){return(0,i.lub)(()=>{const a=i.Gi7(n,s),l=a.mean,u=a.variance;return[Bn(n,l,u,t,e,r),l,u]})}(n,e,t,s,r):function ui(n,e,t,s,r=.001){return(0,i.lub)(()=>{const a=i.Gi7(n,s),l=a.mean,u=a.variance,c=[];for(const nt of qt.w6(0,n.rank))-1!==s.indexOf(nt)?c.push(1):c.push(n.shape[nt]);const d=(0,i.XLQ)(l,c),m=(0,i.XLQ)(u,c),M=null==e?null:(0,i.XLQ)(e,c),R=null==t?null:(0,i.XLQ)(t,c);return[Bn(n,d,m,R,M,r),l,u]})}(n,e,t,s,r)}(a,this.gamma.read(),this.beta.read(),c,this.epsilon),et=(gt,bt,Et)=>{i.lub(()=>{const Nt=1-Et,St=gt.read(),Lt=i.dC7(i.luU(St,bt),Nt);gt.write(i.luU(St,Lt))})};return(()=>{et(this.movingMean,q,this.momentum),et(this.movingVariance,k,this.momentum)})(),nt})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,mt.Cx)(this.betaInitializer),gammaInitializer:(0,mt.Cx)(this.gammaInitializer),movingMeanInitializer:(0,mt.Cx)(this.movingMeanInitializer),movingVarianceInitializer:(0,mt.Cx)(this.movingVarianceInitializer),betaRegularizer:Jt(this.betaRegularizer),gammaRegularizer:Jt(this.gammaRegularizer),betaConstraint:Ot(this.betaConstraint),gammaConstraint:Ot(this.gammaConstraint)},s=super.getConfig();return Object.assign(t,s),t}}return n.className="BatchNormalization",n})();i.m7h.registerClass(Vr);let jr=(()=>{class n extends Dt.mh{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const s of this.axis)if(!Number.isInteger(s))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=(0,mt.L5)(t.betaInitializer||"zeros"),this.gammaInitializer=(0,mt.L5)(t.gammaInitializer||"ones"),this.betaRegularizer=re(t.betaRegularizer),this.gammaRegularizer=re(t.gammaRegularizer),this.supportsMasking=!0}build(t){const s=(t=(0,yt.Wf)(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let l=0;l<this.axis.length;++l)this.axis[l]<0&&(this.axis[l]+=s);for(const l of this.axis)if(l<0||l>=s)throw new Error(`Invalid axis: ${l}`);if(this.axis.length!==st.Tw(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(l=>t[l]),a=!0;this.gamma=this.scale?this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,a):null,this.beta=this.center?this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,a):null,this.built=!0}call(t,s){const r=(0,yt.nQ)(t),a=r.shape,l=a.length;return(0,i.lub)(()=>{let{mean:c,variance:d}=(0,i.Gi7)(r,this.axis,!0);const m=st.JE(1,l);for(const k of this.axis)m[k]=a[k];const M=k=>null!=k&&k.shape.length!==l?i.XLQ(k,m):k;let R=this.scale?M(this.gamma.read()):null,$=this.center?M(this.beta.read()):null;const nt=[],q=[];for(let k=0;k<l;++k)-1!==this.axis.indexOf(k)?(nt.push(a[k]),q.push(1)):(nt.push(1),q.push(a[k]));return c=i.Gg6(c,nt),d=i.Gg6(d,nt),null!=R&&(R=i.Gg6(R,q)),null!=$&&($=i.Gg6($,q)),Bn(r,c,d,$,R,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,mt.Cx)(this.betaInitializer),gammaInitializer:(0,mt.Cx)(this.gammaInitializer),betaRegularizer:Jt(this.betaRegularizer),gammaRegularizer:Jt(this.gammaRegularizer)},s=super.getConfig();return Object.assign(t,s),t}}return n.className="LayerNormalization",n})();i.m7h.registerClass(jr);let ha=(()=>{class n extends Dt.mh{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?(0,lt.rf)():t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new X.nu(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let s,r;if("number"==typeof t.padding[0])s=[t.padding[0],t.padding[0]],r=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new X.nu(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(s=t.padding[0],2!==t.padding[1].length)throw new X.nu(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);r=t.padding[1]}this.padding=[s,r]}this.inputSpec=[new Dt.Zg({ndim:4})]}computeOutputShape(t){let s,r;return t=(0,yt.Wf)(t),"channelsFirst"===this.dataFormat?(s=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],s,r]):(s=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],s,r,t[3]])}call(t,s){return(0,i.lub)(()=>function Go(n,e,t){return(0,i.lub)(()=>{if(4!==n.rank)throw new X.nu(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(null==e&&(e=[[1,1],[1,1]]),2!==e.length||2!==e[0].length||2!==e[1].length)throw new X.nu("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==t&&(t=(0,lt.rf)()),"channelsLast"!==t&&"channelsFirst"!==t)throw new X.nu(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===t?[[0,0],[0,0],e[0],e[1]]:[[0,0],e[0],e[1],[0,0]],i.vku(n,s)})}((0,yt.nQ)(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(t,s),t}}return n.className="ZeroPadding2D",n})();function Hr(n,e,t,s,r,a){return(0,i.lub)(()=>{let l;(0,Bt.cj)(r),(0,Bt.Lp)(a),(0,Bt.zb)(s),null==t&&(t=[1,1]),null==s&&(s="valid"),null==r&&(r=(0,lt.rf)()),null==a&&(a="max"),n=Ln(n,r);const u="same"===s?"same":"valid";return l="max"===a?i._sB(n,e,t,u):i.wS1(n,e,t,u),"channelsFirst"===r&&(l=i.p4s(l,[0,3,1,2])),l})}function da(n,e,t,s,r,a){return(0,i.lub)(()=>{let l;(0,Bt.cj)(r),(0,Bt.Lp)(a),(0,Bt.zb)(s),null==t&&(t=[1,1,1]),null==s&&(s="valid"),null==r&&(r=(0,lt.rf)()),null==a&&(a="max"),n=gr(n,r);const u="same"===s?"same":"valid";return l="max"===a?i.YQQ(n,e,t,u):i.uR5(n,e,t,u),"channelsFirst"===r&&(l=i.p4s(l,[0,4,1,2,3])),l})}i.m7h.registerClass(ha);class ma extends Dt.mh{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new X.nu(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if((0,st.iQ)(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new X.nu(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}(0,st.iQ)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,(0,Bt.zb)(this.padding),this.inputSpec=[new Dt.Zg({ndim:3})]}computeOutputShape(e){e=(0,yt.Wf)(e);const t=(0,te.kt)(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,i.lub)(()=>{this.invokeCallHook(e,t),e=D.dt((0,yt.nQ)(e),2);const s=this.poolingFunction((0,yt.nQ)(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return i.L9e(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}let fa=(()=>{class n extends ma{constructor(t){super(t)}poolingFunction(t,s,r,a,l){return(0,Bt.cj)(l),(0,Bt.zb)(a),Hr(t,s,r,a,l,"max")}}return n.className="MaxPooling1D",n})();i.m7h.registerClass(fa);let pa=(()=>{class n extends ma{constructor(t){super(t)}poolingFunction(t,s,r,a,l){return(0,Bt.cj)(l),(0,Bt.zb)(a),Hr(t,s,r,a,l,"avg")}}return n.className="AveragePooling1D",n})();i.m7h.registerClass(pa);class ga extends Dt.mh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new X.nu(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];(0,st.iQ)(this.poolSize,"poolSize"),(0,st.iQ)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,Bt.cj)(this.dataFormat),(0,Bt.zb)(this.padding),this.inputSpec=[new Dt.Zg({ndim:4})]}computeOutputShape(e){e=(0,yt.Wf)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],s="channelsFirst"===this.dataFormat?e[3]:e[2];return t=(0,te.kt)(t,this.poolSize[0],this.padding,this.strides[0]),s=(0,te.kt)(s,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return(0,i.lub)(()=>(this.invokeCallHook(e,t),this.poolingFunction((0,yt.nQ)(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}let ya=(()=>{class n extends ga{constructor(t){super(t)}poolingFunction(t,s,r,a,l){return(0,Bt.cj)(l),(0,Bt.zb)(a),Hr(t,s,r,a,l,"max")}}return n.className="MaxPooling2D",n})();i.m7h.registerClass(ya);let _a=(()=>{class n extends ga{constructor(t){super(t)}poolingFunction(t,s,r,a,l){return(0,Bt.cj)(l),(0,Bt.zb)(a),Hr(t,s,r,a,l,"avg")}}return n.className="AveragePooling2D",n})();i.m7h.registerClass(_a);class Ea extends Dt.mh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new X.nu(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];(0,st.iQ)(this.poolSize,"poolSize"),(0,st.iQ)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,Bt.cj)(this.dataFormat),(0,Bt.zb)(this.padding),this.inputSpec=[new Dt.Zg({ndim:5})]}computeOutputShape(e){e=(0,yt.Wf)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],s="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=(0,te.kt)(t,this.poolSize[0],this.padding,this.strides[0]),s=(0,te.kt)(s,this.poolSize[1],this.padding,this.strides[1]),r=(0,te.kt)(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return(0,i.lub)(()=>(this.invokeCallHook(e,t),this.poolingFunction((0,yt.nQ)(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}let va=(()=>{class n extends Ea{constructor(t){super(t)}poolingFunction(t,s,r,a,l){return(0,Bt.cj)(l),(0,Bt.zb)(a),da(t,s,r,a,l,"max")}}return n.className="MaxPooling3D",n})();i.m7h.registerClass(va);let Ta=(()=>{class n extends Ea{constructor(t){super(t)}poolingFunction(t,s,r,a,l){return(0,Bt.cj)(l),(0,Bt.zb)(a),da(t,s,r,a,l,"avg")}}return n.className="AveragePooling3D",n})();i.m7h.registerClass(Ta);class ba extends Dt.mh{constructor(e){super(e),this.inputSpec=[new Dt.Zg({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new X.nj}}let Da=(()=>{class n extends ba{constructor(t){super(t||{})}call(t,s){return(0,i.lub)(()=>{const r=(0,yt.nQ)(t);return i.J69(r,1)})}}return n.className="GlobalAveragePooling1D",n})();i.m7h.registerClass(Da);let Oa=(()=>{class n extends ba{constructor(t){super(t||{})}call(t,s){return(0,i.lub)(()=>{const r=(0,yt.nQ)(t);return i.Fp7(r,1)})}}return n.className="GlobalMaxPooling1D",n})();i.m7h.registerClass(Oa);class Aa extends Dt.mh{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,Bt.cj)(this.dataFormat),this.inputSpec=[new Dt.Zg({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new X.nj}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}let Ia=(()=>{class n extends Aa{call(t,s){return(0,i.lub)(()=>{const r=(0,yt.nQ)(t);return i.J69(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalAveragePooling2D",n})();i.m7h.registerClass(Ia);let wa=(()=>{class n extends Aa{call(t,s){return(0,i.lub)(()=>{const r=(0,yt.nQ)(t);return i.Fp7(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalMaxPooling2D",n})();i.m7h.registerClass(wa);var Zo=o(4555);class Na extends Dt.mh{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const a=(0,Zt.v)(t.layer,s);delete t.layer;const l={layer:a};return Object.assign(l,t),new e(l)}}let Ca=(()=>{class n extends Na{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=(0,yt.Wf)(t)).length<3)throw new X.nu(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const s=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(s),this.layer.built=!0),super.build(t)}computeOutputShape(t){const s=[(t=(0,yt.Wf)(t))[0]].concat(t.slice(2)),r=this.layer.computeOutputShape(s);return[r[0],t[1]].concat(r.slice(1))}call(t,s){return(0,i.lub)(()=>wr((u,c)=>[(0,yt.nQ)(this.layer.call(u,s)),[]],t=(0,yt.nQ)(t),[],!1,null,null,!1,!0)[1])}}return n.className="TimeDistributed",n})();i.m7h.registerClass(Ca);let Sa=(()=>{class n extends Na{constructor(t){super(t);const s=t.layer.getConfig(),r={};r.className=t.layer.getClassName(),r.config=s,this.forwardLayer=(0,Zt.v)(r),s.goBackwards=!0!==s.goBackwards;const a={};if(a.className=t.layer.getClassName(),a.config=s,this.backwardLayer=(0,Zt.v)(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,function Xo(n){st.xn(Zo.eY,"BidirectionalMergeMode",n)}(this.mergeMode),t.weights)throw new X.nj("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const r=Math.floor(t.length/2);this.forwardLayer.setWeights(t.slice(0,r)),this.backwardLayer.setWeights(t.slice(r))}computeOutputShape(t){let r,a,l,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState&&(l=s.slice(1)),r=s[0],"concat"===this.mergeMode?(r[r.length-1]*=2,a=[r]):a=null==this.mergeMode?[r,r.slice()]:[r],this.returnState?null==this.mergeMode?a.concat(l).concat(l.slice()):[r].concat(l).concat(l.slice()):st.Bq(a)}apply(t,s){let r=null==s?null:s.initialState,a=null==s?null:s.constants;null==s&&(s={});const l=Ir(t,r,a,this.numConstants);if(t=l.inputs,r=l.initialState,a=l.constants,Array.isArray(t)&&(r=t.slice(1),t=t[0]),(null==r||0===r.length)&&null==a)return super.apply(t,s);const u=[],c=[];if(null!=r){const m=r.length;if(m%2>0)throw new X.nu("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");s.initialState=r,u.push(...r);const M=r.map(R=>new Dt.Zg({shape:R.shape}));this.forwardLayer.stateSpec=M.slice(0,m/2),this.backwardLayer.stateSpec=M.slice(m/2),c.push(...M)}if(null!=a)throw new X.nj("Support for constants in Bidirectional layers is not implemented yet.");const d=u[0]instanceof Dt.Iy;for(const m of u)if(m instanceof Dt.Iy!==d)throw new X.nu("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(d){const m=[t].concat(u),M=this.inputSpec.concat(c),R=this.inputSpec;this.inputSpec=M;const $=super.apply(m,s);return this.inputSpec=R,$}return super.apply(t,s)}call(t,s){return(0,i.lub)(()=>{const r=s.initialState;let a,l,u,c;if(null==r)a=this.forwardLayer.call(t,s),l=this.backwardLayer.call(t,s);else{const d=r.slice(0,r.length/2),m=r.slice(r.length/2);a=this.forwardLayer.call(t,Object.assign(s,{initialState:d})),l=this.backwardLayer.call(t,Object.assign(s,{initialState:m}))}return this.returnState&&(Array.isArray(a)&&(u=a.slice(1).concat(l.slice(1))),a=a[0],l=l[0]),this.returnSequences&&(l=i.GYS(l,1)),"concat"===this.mergeMode?c=D.mV([a,l]):"sum"===this.mergeMode?c=i.IHx(a,l):"ave"===this.mergeMode?c=i.dC7(.5,i.IHx(a,l)):"mul"===this.mergeMode?c=i.dC7(a,l):null==this.mergeMode&&(c=[a,l]),this.returnState?null==this.mergeMode?c.concat(u):[c].concat(u):c})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){(0,Bt.f4)(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),(0,Bt.f4)(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,s){let r;if(Array.isArray(s)&&(s=s[0]),r=this.returnSequences?null==this.mergeMode?[s,s]:s:null==this.mergeMode?[null,null]:null,this.returnState){const l=this.forwardLayer.states.map(u=>null);return Array.isArray(r)?r.concat(l).concat(l):[r].concat(l).concat(l)}return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},s=super.getConfig();return Object.assign(t,s),t}static fromConfig(t,s){const r=(0,Zt.v)(s.layer);if(delete s.layer,null!=s.numConstants)throw new X.nj("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=s;return a.layer=r,new t(a)}}return n.className="Bidirectional",n})();i.m7h.registerClass(Sa);let Ra=(()=>{class n extends Dt.mh{constructor(t){super(t),this.scale=t.scale,this.offset=t.offset?t.offset:0}getConfig(){const t={scale:this.scale,offset:this.offset},s=super.getConfig();return Object.assign(t,s),t}call(t,s){return(0,i.lub)(()=>("float32"!==(t=(0,yt.nQ)(t)).dtype&&(t=D.pj(t,"float32")),(0,i.IHx)((0,i.dC7)(t,this.scale),this.offset)))}}return n.className="Rescaling",n})();i.m7h.registerClass(Ra);const{resizeBilinear:Yo,cropAndResize:Jo}=i.image;let Pa=(()=>{class n extends Dt.mh{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,s,r,a,l,u,c,d){return(0,i.lub)(()=>{let m,M=!1;const k=[s/u,r/c,(a+s)/u,(l+r)/c],et=[];3===t.rank?(M=!0,m=(0,i.knu)([t])):m=t;for(let Nt=0;Nt<m.shape[0];Nt++)et.push(k);const ht=(0,i.XeE)(et,[et.length,4]),gt=(0,i.w6H)(0,et.length,1,"int32"),Et=Jo(m,ht,gt,[a,l],"nearest");return D.pj(M?(0,yt.nQ)((0,i.HHK)(Et)):Et,d)})}upsize(t,s,r,a){return(0,i.lub)(()=>{const l=Yo(t,[s,r]);return D.pj(l,a)})}call(t,s){return(0,i.lub)(()=>{const r=(0,yt.nQ)(t),a=r.dtype,l=r.shape,u=l[l.length-3],c=l[l.length-2];let d=0;u!==this.height&&(d=Math.floor((u-this.height)/2));let m=0;return c!==this.width&&(m=Math.floor((c-this.width)/2),0===m&&(m=1)),d>=0&&m>=0?this.centerCrop(r,d,m,this.height,this.width,u,c,a):this.upsize(t,this.height,this.width,a)})}getConfig(){const t={height:this.height,width:this.width},s=super.getConfig();return Object.assign(t,s),t}computeOutputShape(t){const r=(t=(0,yt.Wf)(t)).length-2;return t[t.length-3]=this.height,t[r]=this.width,t}}return n.className="CenterCrop",n})();i.m7h.registerClass(Pa);var qo=o(13680);let Ma=(()=>{class n extends Dt.mh{constructor(t){super(t),this.numTokens=t.numTokens,this.outputMode=t.outputMode?t.outputMode:"multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},s=super.getConfig();return Object.assign(t,s),t}computeOutputShape(t){return null==(t=(0,yt.Wf)(t))?[this.numTokens]:"oneHot"===this.outputMode&&1!==t[t.length-1]?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,s){return(0,i.lub)(()=>{let r;if("int32"!==(t=(0,yt.nQ)(t)).dtype&&(t=D.pj(t,"int32")),typeof s.countWeights<"u"){if("count"!==this.outputMode)throw new X.nu(`countWeights is not used when outputMode !== count.\n              Received countWeights=${s.countWeights}`);r=(0,yt.nQ)(s.countWeights)}const a=(0,i.Fp7)(t),l=(0,i.VV$)(t),u=(0,i.pjt)(this.numTokens,a).bufferSync().get(0),c=(0,i.brS)(l,0).bufferSync().get(0);if(!u||!c)throw new X.nu(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return qo.n(t,this.outputMode,this.numTokens,r)})}}return n.className="CategoryEncoding",n})();i.m7h.registerClass(Ma);const La=new Set(["bilinear","nearest"]);let xa=(()=>{class n extends Dt.mh{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation){if(!La.has(t.interpolation))throw new X.nu(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);this.interpolation=t.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){return t=(0,yt.Wf)(t),[this.height,this.width,t[2]]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},s=super.getConfig();return Object.assign(t,s),t}call(t,s){return(0,i.lub)(()=>{const r=[this.height,this.width];if("bilinear"===this.interpolation)return i.image.resizeBilinear(t,r,!this.cropToAspectRatio);if("nearest"===this.interpolation)return i.image.resizeNearestNeighbor(t,r,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...La]} are supported`)})}}return n.className="Resizing",n})();i.m7h.registerClass(xa);var el=o(70530);const Ba=new Set(["bilinear","nearest"]);let za=(()=>{class n extends el.W{constructor(t){super(t);const{factor:s,interpolation:r="bilinear"}=t;if(this.factor=s,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new X.nu(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new X.nu(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new X.nu(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(r){if(!Ba.has(r))throw new X.nu(`Invalid interpolation parameter: ${r} is not implemented`);this.interpolation=r}}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},s=super.getConfig();return Object.assign(t,s),t}computeOutputShape(t){return t=(0,yt.Wf)(t),[this.imgHeight,-1,t[2]]}call(t,s){return(0,i.lub)(()=>{const r=(0,yt.nQ)(t);this.imgHeight=r.shape[r.shape.length-3];const a=r.shape[r.shape.length-2];this.widthFactor=(0,i.LGj)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let l=this.widthFactor.dataSync()[0]*a;l=Math.round(l);const u=[this.imgHeight,l];switch(this.interpolation){case"bilinear":return i.image.resizeBilinear(t,u);case"nearest":return i.image.resizeNearestNeighbor(t,u);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Ba]} are supported`)}})}}return n.className="RandomWidth",n})();function sl(n){return new Ee.l(n)}function rl(n){return new os(n)}function il(n){return new rs(n)}function al(n){return new is(n)}function ol(n){return new as(n)}function ll(n){return new us(n)}function ul(n){return new ls(n)}function cl(n){return new br(n)}function hl(n){return new Qs(n)}function dl(n){return new Er(n)}function ml(n){return new Ys(n)}function fl(n){return new vr(n)}function pl(n){return new Tr(n)}function gl(n){return new Dr(n)}function yl(n){return new Or(n)}function _l(n){return new Ar(n)}function El(n){return new Lr(n)}function vl(n){return new Pr(n)}function Tl(n){return new rr(n)}function bl(n){return new Rr(n)}function Dl(n){return new Mr(n)}function Ol(n){return new xr(n)}function Al(n){return new Br(n)}function Il(n){return new zr(n)}function wl(n){return new Fr(n)}function Nl(n){return new ds(n)}function Cl(n){return new fs(n)}function Sl(n){return new ys(n)}function Rl(n){return new ps(n)}function Pl(n){return new gs(n)}function Ml(n){return new ms(n)}function Ll(n){return new Wr(n)}function xl(n){return new Vr(n)}function Bl(n){return new jr(n)}function zl(n){return new ha(n)}function hi(n){return new pa(n)}function Ul(n){return hi(n)}function Fl(n){return hi(n)}function di(n){return new _a(n)}function Wl(n){return di(n)}function kl(n){return di(n)}function mi(n){return new Ta(n)}function $l(n){return mi(n)}function Kl(n){return mi(n)}function Vl(n){return new Da(n)}function jl(n){return new Ia(n)}function Ua(n){return new Oa(n)}function Fa(n){return new wa(n)}function Wa(n){return new fa(n)}function ka(n){return new ya(n)}function Hl(n){return new va(n)}function Gl(n){return new Nr(n)}function Zl(n){return new er(n)}function Xl(n){return new Cr(n)}function Ql(n){return new hs(n)}function Yl(n){return new tr(n)}function Jl(n){return new qs(n)}function ql(n){return new Sr(n)}function tu(n){return new sr(n)}function eu(n){return new qe(n)}function nu(n){return new nr(n)}function su(n){return new Sa(n)}function ru(n){return new Ca(n)}i.m7h.registerClass(za);const iu=Ua,au=Fa,ou=Wa,lu=ka;function uu(n){return new kr(n)}function cu(n){return new $r(n)}function hu(n){return new Kr(n)}function du(n){return new Ur(n)}function mu(n){return new Ra(n)}function fu(n){return new Pa(n)}function pu(n){return new xa(n)}function gu(n){return new Ma(n)}function yu(n){return new za(n)}function _u(n,e){return Ke(n,e)}function Eu(n,e){return jn(n,e)}function vu(n,e){return Hn(n,e)}function Tu(n,e){return rn(n,e)}function bu(n,e){return Dn(n,e)}function Du(n,e){return Vn(n,e)}function Ou(n,e){return function Ds(n,e){return(0,i.lub)(()=>{const t=Kn(n,e),s=function Ts(n,e){return(0,i.lub)(()=>i.pju(i.Smz(i.HvI(i.DgJ(n,1),i.DgJ(e,0))),"float32"))}(n,e),r=i.IHx(t,s);return i.pju(i.arb(i.pjt(r,0),i.hiC(t,r),0),"float32")})}(n,e)}function Au(n,e){return Ht(n,e)}function Iu(n,e){return Je(n,e)}function wu(n,e){return $e(n,e)}function Nu(n,e){return $e(n,e)}function Cu(n,e){return $e(n,e)}function Su(n,e){return ze(n,e)}function Ru(n,e){return ze(n,e)}function Pu(n,e){return ze(n,e)}function Mu(n,e){return function Os(n,e){return(0,i.lub)(()=>{const t=n.sub(e).square().sum(),s=n.sub(n.mean()).square().sum();return i.iD$(1).sub(t.div(s))})}(n,e)}function Lu(n){return new gn(n)}function xu(n){return function Gs(n){return Mn(n),new gn({l1:null!=n?n.l1:null,l2:0})}(n)}function Bu(n){return function Zs(n){return Mn(n),new gn({l2:null!=n?n.l2:null,l1:0})}(n)}class $a extends fe.ex{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof je))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Gr(n,e){return n<e}function Ka(n,e){return n>e}class Va extends $a{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new X.nj("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.monitorFunc="min"===this.mode?Gr:"max"===this.mode||-1!==this.monitor.indexOf("acc")?Ka:Gr,this.monitorFunc===Gr&&(this.minDelta*=-1)}onTrainBegin(e){var t=this;return(0,b.Z)(function*(){t.wait=0,t.stoppedEpoch=0,t.best=null!=t.baseline?t.baseline:t.monitorFunc===Gr?1/0:-1/0})()}onEpochEnd(e,t){var s=this;return(0,b.Z)(function*(){yield(0,Ce.Z)(t);const r=s.getMonitorValue(t);null!=r&&(s.monitorFunc(r-s.minDelta,s.best)?(s.best=r,s.wait=0):(s.wait++,s.wait>=s.patience&&(s.stoppedEpoch=e,s.model.stopTraining=!0)))})()}onTrainEnd(e){var t=this;return(0,b.Z)(function*(){t.stoppedEpoch>0&&t.verbose&&console.log(`Epoch ${t.stoppedEpoch}: early stopping.`)})()}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const Uu={earlyStopping:function zu(n){return new Va(n)}};o(38891);var ja,ke=function(n){return n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF",n}(ke||{});!function(n){let e;var t;(t=e=n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(ja||(ja={}));const fi={};function Fu(n,e){fi[n]={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e}}function Ha(n){return fi[n]}function Wu(n){delete fi[n]}function h(n,e,t,s,r){const a=e.inputParams[n];if(a&&void 0!==a.inputIndexStart){const u=a.inputIndexStart,c=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?u+1:a.inputIndexEnd,d=u<0?e.inputNames.length+u:u;if("tensor"===a.type)return be(e.inputNames[d],t,s,r);if("tensors"===a.type){const R=e.inputs.slice(u,c);return e.inputNames.slice(u,c).filter((nt,q)=>{var k;return"NoOp"!==(null===(k=R[q])||void 0===k?void 0:k.op)}).map(nt=>be(nt,t,s,r))}const m=be(e.inputNames[d],t,s,r),M=m.dataSync();return"number"===a.type?M[0]:i.D5U.toNestedArray(m.shape,M)}const l=e.attrParams[n];return l&&l.value}function be(n,e,t,s){const[r,a]=Me(n,t);if(null!=s){const u=s.getHashTableHandleByName(r);if(null!=u)return u}const l=t.currentContextIds.find(u=>!!e[Zr(r,u)]);return void 0!==l?e[Zr(r,l)][a]:void 0}function Ga(n,e,t){return e[Zr(n,t.currentContextId)]}function on(n,e){const[t,s,r]=Me(n,e);return[Zr(t,e&&e.currentContextId),s,r]}function Zr(n,e){return e?`${n}-${e}`:n}function Me(n,e){if(""===n)return["",0,void 0];const t=null!=e&&null!=e.parseNodeNameCache;if(t){const a=e.parseNodeNameCache.get(n);if(null!=a)return a}const s=n.split(":");let r;if(1===s.length)r=[n,0,void 0];else{const l=3===s.length?s[1]:void 0;r=[s[0],Number(s[s.length-1]),l]}return t&&e.parseNodeNameCache.set(n,r),r}function Xr(n,e,t){let s=h("pad",n,e,t);if("explicit"===s){s=h("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[2*a],r[a][1]=s[2*a+1];return r}return s}function ln(n){return n.kept?n:(0,i.d9v)(n)}const ku=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$u=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ku=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Vu=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],ju=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Hu=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Gu=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Zu=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Xu=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Qu=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Yu=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Ju=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],qu=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],tc=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],ec=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],nc=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],sc=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],rc=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ic=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class Za{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[_,C,S,L,O,N,B,z,V,U,E,T,K,it,J,y,F,tt,at].map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const r=[],a=[],l=[],u=e.node.reduce((q,k)=>(q[k.name]=this.mapNode(k),k.op.startsWith("Placeholder")?r.push(q[k.name]):"Const"===k.op?a.push(q[k.name]):(null==k.input||0===k.input.length)&&l.push(q[k.name]),q),{});let c=[];const d=[];let m={},M={};null!=t&&(m=this.mapSignatureEntries(t.inputs),M=this.mapSignatureEntries(t.outputs));const R=Object.keys(u);R.forEach(q=>{const k=u[q];k.inputNames.forEach((et,ht)=>{const[gt,,bt]=on(et),Et=u[gt];if(null!=Et.outputs){const Nt=Et.outputs.indexOf(bt);-1!==Nt&&(k.inputNames[ht]=`${gt}:${Nt}`)}k.inputs.push(Et),Et.children.push(k)})}),0===Object.keys(M).length?R.forEach(q=>{const k=u[q];0===k.children.length&&d.push(k)}):Object.keys(M).forEach(q=>{const[k]=on(q),et=u[k];null!=et&&(et.signatureKey=M[q],d.push(et))}),Object.keys(m).length>0?Object.keys(m).forEach(q=>{const[k]=on(q),et=u[k];et&&(et.signatureKey=m[q],c.push(et))}):c=r;let $={};null!=e.library&&null!=e.library.function&&($=e.library.function.reduce((q,k)=>(q[k.signature.name]=this.mapFunction(k),q),{}));const nt={nodes:u,inputs:c,outputs:d,weights:a,placeholders:r,signature:t,functions:$};return l.length>0&&(nt.initNodes=l),nt}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=Ha(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(s.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),null!=t.attrs&&(s.attrParams=t.attrs.reduce((r,a)=>{const l=a.type;let u;switch(a.type){case"string":u=pi(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=pi(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":u=Di(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=Di(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":u=yi(e.attr,a.tfName,a.defaultValue||0),void 0===u&&a.tfDeprecatedName&&(u=yi(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":u=bi(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=bi(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":u=gi(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=gi(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":u=Ai(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=Ai(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":u=Ti(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=Ti(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":u=Oi(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=Oi(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":u=Ei(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=Ei(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":u=vi(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=vi(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":u=Qa(e.attr,a.tfName,a.defaultValue),void 0===u&&a.tfDeprecatedName&&(u=Qa(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:u,type:l},r},{})),s}mapFunction(e){const t=e.nodeDef,r=[];let a={};null!=t&&(a=t.reduce((M,R)=>(M[R.name]=this.mapNode(R),"Const"===R.op&&r.push(M[R.name]),M),{}));const l=[],u=[];e.signature.inputArg.forEach(M=>{const[R]=on(M.name),$={name:R,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:_i(M.type),type:"dtype"}},children:[]};$.signatureKey=M.name,l.push($),a[R]=$}),Object.keys(a).forEach(M=>{const R=a[M];R.inputNames.forEach(($,nt)=>{const[q,,k]=on($),et=a[q];if(null!=et.outputs){const ht=et.outputs.indexOf(k);-1!==ht&&(R.inputNames[nt]=`${q}:${ht}`)}R.inputs.push(et),et.children.push(R)})});const d=e.ret;e.signature.outputArg.forEach(M=>{const[R,$]=on(d[M.name]),nt=a[R];null!=nt&&(nt.defaultOutput=$,u.push(nt))});const m=this.mapArgsToSignature(e);return{nodes:a,inputs:l,outputs:u,weights:r,placeholders:[],signature:m}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return null!=t&&(s=t[s]),{name:s,dtype:e.type}}}function Xa(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):function ac(n){const e=(0,i.OBj)().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(n);return e?t:t.toLowerCase()}function pi(n,e,t,s=!1){const r=n[e];return null!=r?Xa(r.s,s):t}function gi(n,e,t){const s=n[e];return s?s.b:t}function yi(n,e,t){const s=n[e]||{},r=null!=s.i?s.i:null!=s.f?s.f:t;return"number"==typeof r?r:parseInt(r,10)}function _i(n){switch("string"==typeof n&&(n=ke[n]),n){case ke.DT_FLOAT:case ke.DT_HALF:return"float32";case ke.DT_INT32:case ke.DT_INT64:case ke.DT_INT8:case ke.DT_UINT8:return"int32";case ke.DT_BOOL:return"bool";case ke.DT_DOUBLE:return"float32";case ke.DT_STRING:return"string";case ke.DT_COMPLEX64:case ke.DT_COMPLEX128:return"complex64";default:return null}}function Qa(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function Ei(n,e,t){const s=n[e];return s&&s.type?_i(s.type):t}function vi(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>_i(r)):t}function Ya(n){if(!n.unknownRank)return null!=n.dim?n.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function Ti(n,e,t){const s=n[e];return s&&s.shape?Ya(s.shape):t}function bi(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>"number"==typeof r?r:parseInt(r,10)):t}function Di(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(a=>Xa(a,s)):t}function Oi(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>Ya(r)):t}function Ai(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}class oc{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return be(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(null!=s.tensor)return be(e,this.tensorMap,this.context);if(null!=s.i||null!=s.f)return yi(this.node.rawAttrs,e,t);if(null!=s.s)return pi(this.node.rawAttrs,e,t);if(null!=s.b)return gi(this.node.rawAttrs,e,t);if(null!=s.shape)return Ti(this.node.rawAttrs,e,t);if(null!=s.type)return Ei(this.node.rawAttrs,e,t);if(null!=s.list){if(null!=s.list.i||null!=s.list.f)return bi(this.node.rawAttrs,e,t);if(null!=s.list.s)return Di(this.node.rawAttrs,e,t);if(null!=s.list.shape)return Oi(this.node.rawAttrs,e,t);if(null!=s.list.b)return Ai(this.node.rawAttrs,e,t);if(null!=s.list.type)return vi(this.node.rawAttrs,e,t)}return t}}var W=o(8449);function He(n,e,t=""){if("number"!=typeof n&&"number"!=typeof e){i.D5U.assert(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],a=e[s];i.D5U.assert(r<0||a<0||r===a,()=>t+` Shapes ${n} and ${e} must match`)}}}function Ja(n){return!("number"==typeof n||n.some(e=>e<0))}function ir(n,e,t){let s=Ii(n,t);const r=!Ja(s);if(r&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(a=>{s=Ii(a.shape,s)}),!Ja(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Ii(n,e){if("number"==typeof n)return e;if("number"==typeof e)return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],a=e[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:a}return t}class cc{constructor(e,t,s,r,a,l,u){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=l,this.clearAfterRead=u,this.tensors=[],this.closed_=!1,this.idTensor=(0,i.iD$)(0),(0,i.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),He(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,(0,i.CnY)(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(0===e.length)return(0,i.XeE)([],[0].concat(this.elementShape));const s=this.readMany(e);return He(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),(0,i.knu)(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,i.XeE)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return He(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),(0,i.zoF)(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,(0,i.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===s?0:t.size/s,l=[];(0,i.lub)(()=>{t=(0,i.XLQ)(t,[1,s,a]);for(let c=0;c<e.length;++c)l[c]=(0,i.XLQ)((0,i.tPi)(t,[0,0===c?0:r[c-1],0],[1,e[c],a]),this.elementShape);return l});const u=[];for(let c=0;c<e.length;c++)u[c]=c;this.writeMany(u,l)}}class zn{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e?.forEach(a=>{if(s!==a.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${a.dtype}`);He(t,a.shape,"TensorList shape mismatch: "),(0,i.CnY)(a)}),this.idTensor=(0,i.iD$)(0),this.maxNumElements=r,(0,i.CnY)(this.idTensor)}copy(){return new zn([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==s&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);He(e,this.elementShape,"TensorList shape mismatch: ");const r=ir(this.elementShape,this.tensors,e);return(0,i.lub)(()=>{const a=this.tensors.map(l=>(0,i.XLQ)(l,r));return(0,i.knu)(a,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const s=ir(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,He(r.shape,e,"TensorList shape mismatch: "),(0,i.XLQ)(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(He(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,i.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new zn([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);He(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=ir(this.elementShape,this.tensors,t);return(0,i.XLQ)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);He(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,i.CnY)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);He(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=ir(this.elementShape,this.tensors,s);return 0===e.length?(0,i.XeE)([],[0].concat(r)):(0,i.lub)(()=>{const a=e.map(l=>(0,i.XLQ)(this.tensors[l],r));return(0,i.knu)(a,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);He(this.elementShape,t,"TensorList shape mismatch: ");const s=ir(this.elementShape,this.tensors,t);return 0===this.size()?(0,i.XeE)([],[0].concat(s)):(0,i.lub)(()=>{const r=this.tensors.map(a=>(0,i.XLQ)(a,s));return(0,i.zoF)(r,0)})}}const pc=function(){var n=(0,b.Z)(function*(e,t,s){switch(e.op){case"If":case"StatelessIf":{const r=h("thenBranch",e,t,s),a=h("elseBranch",e,t,s),l=h("cond",e,t,s),u=h("args",e,t,s);return(yield l.data())[0]?s.functionMap[r].executeFunctionAsync(u,s.tensorArrayMap,s.tensorListMap):s.functionMap[a].executeFunctionAsync(u,s.tensorArrayMap,s.tensorListMap)}case"While":case"StatelessWhile":{const r=h("body",e,t,s),a=h("cond",e,t,s),l=h("args",e,t,s),u=yield s.functionMap[a].executeFunctionAsync(l,s.tensorArrayMap,s.tensorListMap),c=l.map(M=>M.id);let d=yield u[0].data();u.forEach(M=>{!M.kept&&-1===c.indexOf(M.id)&&M.dispose()});let m=l;for(;d[0];){const M=m;m=yield s.functionMap[r].executeFunctionAsync(m,s.tensorArrayMap,s.tensorListMap);const R=m.map(nt=>nt.id);M.forEach(nt=>{!nt.kept&&-1===c.indexOf(nt.id)&&-1===R.indexOf(nt.id)&&nt.dispose()});const $=yield s.functionMap[a].executeFunctionAsync(m,s.tensorArrayMap,s.tensorListMap);d=yield $[0].data(),$.forEach(nt=>{!nt.kept&&-1===c.indexOf(nt.id)&&-1===R.indexOf(nt.id)&&nt.dispose()})}return m}case"LoopCond":return[ln(h("pred",e,t,s))];case"Switch":{const r=h("pred",e,t,s);let a=h("data",e,t,s);return a.kept||(a=ln(a)),(yield r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(a=>void 0!==be(a,t,s));return r?[ln(be(r,t,s))]:void 0}case"Enter":{const r=h("frameName",e,t,s),a=h("tensor",e,t,s);return s.enterFrame(r),[ln(a)]}case"Exit":{const r=h("tensor",e,t,s);return s.exitFrame(),[ln(r)]}case"NextIteration":{const r=h("tensor",e,t,s);return s.nextIteration(),[ln(r)]}case"TensorArrayV3":{const r=h("size",e,t,s),a=h("dtype",e,t,s),l=h("elementShape",e,t,s),u=h("dynamicSize",e,t,s),c=h("clearAfterRead",e,t,s),d=h("identicalElementShapes",e,t,s),m=h("name",e,t,s),M=new cc(m,a,r,l,d,u,c);return s.addTensorArray(M),[M.idTensor,(0,i.iD$)(1)]}case"TensorArrayWriteV3":{const r=h("tensorArrayId",e,t,s),a=h("index",e,t,s),l=h("tensor",e,t,s),u=s.getTensorArray(r.id);return u.write(a,l),[u.idTensor]}case"TensorArrayReadV3":{const r=h("tensorArrayId",e,t,s),a=h("index",e,t,s);return[s.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=h("tensorArrayId",e,t,s),a=h("indices",e,t,s),l=h("dtype",e,t,s);return[s.getTensorArray(r.id).gather(a,l)]}case"TensorArrayScatterV3":{const r=h("tensorArrayId",e,t,s),a=h("indices",e,t,s),l=h("tensor",e,t,s),u=s.getTensorArray(r.id);return u.scatter(a,l),[u.idTensor]}case"TensorArrayConcatV3":{const r=h("tensorArrayId",e,t,s),a=s.getTensorArray(r.id),l=h("dtype",e,t,s);return[a.concat(l)]}case"TensorArraySplitV3":{const r=h("tensorArrayId",e,t,s),a=h("tensor",e,t,s),l=h("lengths",e,t,s),u=s.getTensorArray(r.id);return u.split(l,a),[u.idTensor]}case"TensorArraySizeV3":{const r=h("tensorArrayId",e,t,s),a=s.getTensorArray(r.id);return[(0,i.iD$)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=h("tensorArrayId",e,t,s),a=s.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=h("tensorListId",e,t,s),a=h("index",e,t,s),l=h("tensor",e,t,s),u=s.getTensorList(r.id);return u.setItem(a,l),[u.idTensor]}case"TensorListGetItem":{const r=h("tensorListId",e,t,s),a=h("index",e,t,s),l=h("elementShape",e,t,s),u=h("elementDType",e,t,s);return[s.getTensorList(r.id).getItem(a,l,u)]}case"TensorListScatterV2":case"TensorListScatter":{const r=h("indices",e,t,s),c=function mc(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new zn([],t,n.dtype,s),l=(0,i.HHK)(n,0);return e.forEach((u,c)=>{a.setItem(u,l[c])}),a}(h("tensor",e,t,s),r,h("elementShape",e,t,s),h("numElements",e,t,s));return s.addTensorList(c),[c.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=h("elementShape",e,t,s),a=h("elementDType",e,t,s);let l;l="TensorListReserve"===e.op?"numElements":"maxNumElements";const u=h(l,e,t,s),d=function dc(n,e,t,s){return new zn([],n,e,s)}(r,a,0,"TensorListReserve"===e.op?-1:u);return s.addTensorList(d),[d.idTensor]}case"TensorListGather":{const r=h("tensorListId",e,t,s),a=h("indices",e,t,s),l=h("elementShape",e,t,s),u=h("elementDType",e,t,s);return[s.getTensorList(r.id).gather(a,u,l)]}case"TensorListStack":{const r=h("tensorListId",e,t,s),a=h("elementShape",e,t,s),l=h("elementDType",e,t,s),u=h("numElements",e,t,s);return[s.getTensorList(r.id).stack(a,l,u)]}case"TensorListFromTensor":{const u=function hc(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);He(n.shape.slice(1),e,"TensorList shape mismatch: ");const a=(0,i.HHK)(n);return new zn(a,e,s)}(h("tensor",e,t,s),h("elementShape",e,t,s),h("elementDType",e,t,s));return s.addTensorList(u),[u.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=h("tensorListId",e,t,s),a=s.getTensorList(r.id),l=h("dtype",e,t,s),u=h("elementShape",e,t,s);return[a.concat(l,u)]}case"TensorListPushBack":{const r=h("tensorListId",e,t,s),a=h("tensor",e,t,s),l=s.getTensorList(r.id);return l.pushBack(a),[l.idTensor]}case"TensorListPopBack":{const r=h("tensorListId",e,t,s),a=h("elementShape",e,t,s),l=h("elementDType",e,t,s);return[s.getTensorList(r.id).popBack(a,l)]}case"TensorListSplit":{const r=h("tensor",e,t,s),a=h("elementShape",e,t,s),u=function fc(n,e,t){let s=0;const r=e.map(m=>(s+=m,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${n.shape}`);const l=Ii(n.shape.slice(1),t),u=0===s?0:n.size/s,c=(0,i.lub)(()=>{const m=[];n=(0,i.XLQ)(n,[1,s,u]);for(let M=0;M<e.length;++M)m[M]=(0,i.XLQ)((0,i.tPi)(n,[0,0===M?0:r[M-1],0],[1,e[M],u]),l);return n.dispose(),m}),d=new zn([],t,n.dtype,e.length);for(let m=0;m<c.length;m++)d.setItem(m,c[m]);return d}(r,h("lengths",e,t,s),a);return s.addTensorList(u),[u.idTensor]}case"TensorListLength":{const r=h("tensorListId",e,t,s),a=s.getTensorList(r.id);return[(0,i.iD$)(a.size(),"int32")]}case"TensorListResize":{const r=h("tensorListId",e,t,s),a=h("size",e,t,s),u=s.getTensorList(r.id).resize(a);return s.addTensorList(u),[u.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}});return function(t,s,r){return n.apply(this,arguments)}}();function qa(n,e,t){const[s,r]=h("fusedOps",n,e,t),a="biasadd"===s,l=!a,u="prelu"===r,c="fusedbatchnorm"===s,d=h("numArgs",n,e,t);if(a){if(u&&2!==d)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!u&&a&&1!==d)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const m=h("strides",n,e,t),M=Xr(n,e,t),R=h("dataFormat",n,e,t).toUpperCase(),$=h("dilations",n,e,t);let[nt,q]=h("args",n,e,t);return l&&(q=nt,nt=void 0),{stride:m,pad:M,dataFormat:R,dilations:$,biasArg:nt,preluArg:q,activationFunc:r,leakyreluAlpha:h("leakyreluAlpha",n,e,t)}}function wi(n,e,t){return{boxes:h("boxes",n,e,t),scores:h("scores",n,e,t),maxOutputSize:h("maxOutputSize",n,e,t),iouThreshold:h("iouThreshold",n,e,t),scoreThreshold:h("scoreThreshold",n,e,t),softNmsSigma:h("softNmsSigma",n,e,t)}}const _c=function(){var n=(0,b.Z)(function*(e,t,s,r,a=j){switch(e.op){case"NonMaxSuppressionV5":{const{boxes:l,scores:u,maxOutputSize:c,iouThreshold:d,scoreThreshold:m,softNmsSigma:M}=wi(e,t,s),R=yield a.image.nonMaxSuppressionWithScoreAsync(l,u,c,d,m,M);return[R.selectedIndices,R.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:l,scores:u,maxOutputSize:c,iouThreshold:d,scoreThreshold:m}=wi(e,t,s),M=h("padToMaxOutputSize",e,t,s),R=yield a.image.nonMaxSuppressionPaddedAsync(l,u,c,d,m,M);return[R.selectedIndices,R.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:l,scores:u,maxOutputSize:c,iouThreshold:d,scoreThreshold:m}=wi(e,t,s);return[yield a.image.nonMaxSuppressionAsync(l,u,c,d,m)]}case"Where":{const l=a.cast(h("condition",e,t,s),"bool"),u=[yield a.whereAsync(l)];return l.dispose(),u}case"ListDiff":return a.setdiff1dAsync(h("x",e,t,s),h("y",e,t,s));default:throw TypeError(`Node type ${e.op} is not implemented`)}});return function(t,s,r,a){return n.apply(this,arguments)}}();var Tc=o(48661);class bc{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,i.iD$)(0),this.tensorMap=new Map,(0,i.CnY)(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Tc.i(this.size(),"int32")}import(e,t){var s=this;return(0,b.Z)(function*(){s.checkKeyAndValueTensor(e,t);const r=yield e.data();return s.tensorMap.forEach(a=>a.dispose()),s.tensorMap.clear(),(0,i.lub)(()=>{const a=(0,i.HHK)(t),l=r.length,u=a.length;i.D5U.assert(l===u,()=>`The number of elements doesn't match, keys has ${l} elements, the values has ${u} elements.`);for(let c=0;c<l;c++){const d=r[c],m=a[c];(0,i.CnY)(m),s.tensorMap.set(d,m)}return s.handle})})()}find(e,t){var s=this;return(0,b.Z)(function*(){s.checkKeyAndValueTensor(e,t);const r=yield e.data();return(0,i.lub)(()=>{const a=[];for(let l=0;l<r.length;l++){const c=s.findWithDefault(r[l],t);a.push(c)}return(0,i.knu)(a)})})()}findWithDefault(e,t){return this.tensorMap.get(e)??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const Dc=function(){var n=(0,b.Z)(function*(e,t,s,r){switch(e.op){case"HashTable":case"HashTableV2":{const a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{const l=h("keyDType",e,t,s),u=h("valueDType",e,t,s),c=new bc(l,u);return r.addHashTable(e.name,c),[c.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=h("tableHandle",e,t,s,r),l=h("keys",e,t,s),u=h("values",e,t,s);return[yield r.getHashTableById(a.id).import(l,u)]}case"LookupTableFind":case"LookupTableFindV2":{const a=h("tableHandle",e,t,s,r),l=h("keys",e,t,s),u=h("defaultValue",e,t,s);return[yield r.getHashTableById(a.id).find(l,u)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=h("tableHandle",e,t,s,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}});return function(t,s,r,a){return n.apply(this,arguments)}}();function to(n,e,t,s,r=i.lub){const a=((l,u,c)=>{switch(l.category){case"arithmetic":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(h("a",n,e,t),h("b",n,e,t))];case"AddN":return[s.addN(h("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(h("a",n,e,t),h("b",n,e,t))];case"Mul":return[s.mul(h("a",n,e,t),h("b",n,e,t))];case"RealDiv":case"Div":return[s.div(h("a",n,e,t),h("b",n,e,t))];case"DivNoNan":return[s.divNoNan(h("a",n,e,t),h("b",n,e,t))];case"FloorDiv":return[s.floorDiv(h("a",n,e,t),h("b",n,e,t))];case"Sub":return[s.sub(h("a",n,e,t),h("b",n,e,t))];case"Minimum":return[s.minimum(h("a",n,e,t),h("b",n,e,t))];case"Maximum":return[s.maximum(h("a",n,e,t),h("b",n,e,t))];case"Pow":return[s.pow(h("a",n,e,t),h("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(h("a",n,e,t),h("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"basic_math":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(h("x",n,e,t))];case"Acos":return[s.acos(h("x",n,e,t))];case"Acosh":return[s.acosh(h("x",n,e,t))];case"Asin":return[s.asin(h("x",n,e,t))];case"Asinh":return[s.asinh(h("x",n,e,t))];case"Atan":return[s.atan(h("x",n,e,t))];case"Atan2":return[s.atan2(h("x",n,e,t),h("y",n,e,t))];case"Atanh":return[s.atanh(h("x",n,e,t))];case"Ceil":return[s.ceil(h("x",n,e,t))];case"Complex":return[s.complex(h("real",n,e,t),h("imag",n,e,t))];case"Cos":return[s.cos(h("x",n,e,t))];case"Cosh":return[s.cosh(h("x",n,e,t))];case"Elu":return[s.elu(h("x",n,e,t))];case"Erf":return[s.erf(h("x",n,e,t))];case"Exp":return[s.exp(h("x",n,e,t))];case"Expm1":return[s.expm1(h("x",n,e,t))];case"Floor":return[s.floor(h("x",n,e,t))];case"Log":return[s.log(h("x",n,e,t))];case"Log1p":return[s.log1p(h("x",n,e,t))];case"Imag":return[s.imag(h("x",n,e,t))];case"Neg":return[s.neg(h("x",n,e,t))];case"Reciprocal":return[s.reciprocal(h("x",n,e,t))];case"Real":return[s.real(h("x",n,e,t))];case"Relu":return[s.relu(h("x",n,e,t))];case"Round":return[s.round(h("x",n,e,t))];case"Selu":return[s.selu(h("x",n,e,t))];case"Sigmoid":return[s.sigmoid(h("x",n,e,t))];case"Sin":return[s.sin(h("x",n,e,t))];case"Sign":return[s.sign(h("x",n,e,t))];case"Sinh":return[s.sinh(h("x",n,e,t))];case"Softplus":return[s.softplus(h("x",n,e,t))];case"Sqrt":return[s.sqrt(h("x",n,e,t))];case"Square":return[s.square(h("x",n,e,t))];case"Tanh":return[s.tanh(h("x",n,e,t))];case"Tan":return[s.tan(h("x",n,e,t))];case"ClipByValue":return[s.clipByValue(h("x",n,e,t),h("clipValueMin",n,e,t),h("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(h("x",n,e,t))];case"Rsqrt":return[s.rsqrt(be(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(h("x",n,e,t),h("alpha",n,e,t))];case"Prelu":return[s.prelu(h("x",n,e,t),h("alpha",n,e,t))];case"IsNan":return[s.isNaN(be(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(be(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(be(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"control":return pc(l,u,c);case"convolution":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"Conv1D":{const r=h("stride",n,e,t),a=h("pad",n,e,t),l=h("dataFormat",n,e,t).toUpperCase(),u=h("dilation",n,e,t);return[s.conv1d(h("x",n,e,t),h("filter",n,e,t),r,a,l,u)]}case"Conv2D":{const r=h("strides",n,e,t),a=Xr(n,e,t),l=h("dataFormat",n,e,t).toUpperCase(),u=h("dilations",n,e,t);return[s.conv2d(h("x",n,e,t),h("filter",n,e,t),[r[1],r[2]],a,l,[u[1],u[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:l,dilations:u,biasArg:c,preluArg:d,activationFunc:m,leakyreluAlpha:M}=qa(n,e,t);return[s.fused.conv2d({x:h("x",n,e,t),filter:h("filter",n,e,t),strides:[r[1],r[2]],pad:a,dataFormat:l,dilations:[u[1],u[2]],bias:c,activation:m,preluActivationWeights:d,leakyreluAlpha:M})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:l,dilations:u,biasArg:c,preluArg:d,activationFunc:m,leakyreluAlpha:M}=qa(n,e,t);return[s.fused.depthwiseConv2d({x:h("x",n,e,t),filter:h("filter",n,e,t),strides:[r[1],r[2]],pad:a,dataFormat:l,dilations:[u[1],u[2]],bias:c,activation:m,preluActivationWeights:d,leakyreluAlpha:M})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=h("outputShape",n,e,t),a=h("strides",n,e,t),l=Xr(n,e,t);return[s.conv2dTranspose(h("x",n,e,t),h("filter",n,e,t),r,[a[1],a[2]],l)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=h("strides",n,e,t),a=Xr(n,e,t),l=h("dilations",n,e,t),u=h("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(h("input",n,e,t),h("filter",n,e,t),[r[1],r[2]],a,u,[l[1],l[2]])]}case"Conv3D":{const r=h("strides",n,e,t),a=h("pad",n,e,t),l=h("dataFormat",n,e,t).toUpperCase(),u=h("dilations",n,e,t);return[s.conv3d(h("x",n,e,t),h("filter",n,e,t),[r[1],r[2],r[3]],a,l,[u[1],u[2],u[3]])]}case"AvgPool":{const r=h("strides",n,e,t),a=h("pad",n,e,t),l=h("kernelSize",n,e,t);return[s.avgPool(h("x",n,e,t),[l[1],l[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=h("strides",n,e,t),a=h("pad",n,e,t),l=h("kernelSize",n,e,t);return[s.maxPool(h("x",n,e,t),[l[1],l[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=h("strides",n,e,t),a=h("pad",n,e,t),l=h("kernelSize",n,e,t),u=h("includeBatchInIndex",n,e,t),{result:c,indexes:d}=s.maxPoolWithArgmax(h("x",n,e,t),[l[1],l[2]],[r[1],r[2]],a,u);return[c,d]}case"AvgPool3D":{const r=h("strides",n,e,t),a=h("pad",n,e,t),l=h("kernelSize",n,e,t);return[s.avgPool3d(h("x",n,e,t),[l[1],l[2],l[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=h("strides",n,e,t),a=h("pad",n,e,t),l=h("kernelSize",n,e,t);return[s.maxPool3d(h("x",n,e,t),[l[1],l[2],l[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=h("strides",n,e,t),a=h("pad",n,e,t),l=h("dilations",n,e,t),u=r[1],c=r[2],d=l[1],m=l[2];return[s.dilation2d(h("x",n,e,t),h("filter",n,e,t),[u,c],a,[d,m],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"creation":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"Fill":{const r=h("shape",n,e,t),a=h("dtype",n,e,t),l=h("value",n,e,t);return[s.fill(r,l,a)]}case"LinSpace":{const r=h("start",n,e,t),a=h("stop",n,e,t),l=h("num",n,e,t);return[s.linspace(r,a,l)]}case"Multinomial":{const r=h("logits",n,e,t),a=h("numSamples",n,e,t),l=h("seed",n,e,t);return[s.multinomial(r,a,l)]}case"OneHot":{const r=h("indices",n,e,t),a=h("depth",n,e,t),l=h("onValue",n,e,t),u=h("offValue",n,e,t),c=h("dtype",n,e,t);return[s.oneHot(r,a,l,u,c)]}case"Ones":return[s.ones(h("shape",n,e,t),h("dtype",n,e,t))];case"OnesLike":return[s.onesLike(h("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(h("shape",n,e,t),h("dtype",n,e,t),h("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(h("shape",n,e,t),h("minval",n,e,t),h("maxval",n,e,t),h("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(h("shape",n,e,t),h("minval",n,e,t),h("maxval",n,e,t),h("seed",n,e,t))];case"Range":{const r=h("start",n,e,t),a=h("stop",n,e,t),l=h("step",n,e,t);return[s.range(r,a,l,h("dtype",n,e,t))]}case"TruncatedNormal":{const r=h("shape",n,e,t),a=h("mean",n,e,t),l=h("stdDev",n,e,t),u=h("seed",n,e,t);return[s.truncatedNormal(r,a,l,h("dtype",n,e,t),u)]}case"Zeros":return[s.zeros(h("shape",n,e,t),h("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(h("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"dynamic":return _c(l,u,c);case"evaluation":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"LowerBound":{const r=h("sortedSequence",n,e,t),a=h("values",n,e,t);return[s.lowerBound(r,a)]}case"TopKV2":{const r=h("x",n,e,t),a=h("k",n,e,t),l=h("sorted",n,e,t),u=s.topk(r,a,l);return[u.values,u.indices]}case"UpperBound":{const r=h("sortedSequence",n,e,t),a=h("values",n,e,t);return[s.upperBound(r,a)]}case"Unique":{const r=h("x",n,e,t),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{const r=h("x",n,e,t),a=h("axis",n,e,t),l=s.unique(r,a);return[l.values,l.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"image":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"ResizeBilinear":{const r=h("images",n,e,t),a=h("size",n,e,t),l=h("alignCorners",n,e,t),u=h("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[a[0],a[1]],l,u)]}case"ResizeNearestNeighbor":{const r=h("images",n,e,t),a=h("size",n,e,t),l=h("alignCorners",n,e,t),u=h("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],l,u)]}case"CropAndResize":{const r=h("image",n,e,t),a=h("boxes",n,e,t),l=h("boxInd",n,e,t),u=h("cropSize",n,e,t),c=h("method",n,e,t),d=h("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,a,l,u,c,d)]}case"ImageProjectiveTransformV3":{const r=h("images",n,e,t),a=h("transforms",n,e,t),l=h("outputShape",n,e,t),u=h("fillValue",n,e,t),c=h("interpolation",n,e,t),d=h("fillMode",n,e,t);return[s.image.transform(r,a,c.toLowerCase(),d.toLowerCase(),u,l)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"graph":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=h("default",n,e,t);return[be(n.name,e,t)||r];case"Placeholder":return[be(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[ln(h("x",n,e,t))];case"IdentityN":return h("x",n,e,t).map(m=>ln(m));case"Shape":return[s.tensor1d(h("x",n,e,t).shape,"int32")];case"ShapeN":return h("x",n,e,t).map(m=>s.tensor1d(m.shape));case"Size":return[s.scalar(h("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(h("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const l=h("x",n,e,t),u=h("data",n,e,t),c=h("message",n,e,t),d=h("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let m=0;m<u.length;m++)console.log(Array.prototype.slice.call(u[m].dataSync()).slice(0,d));return[l];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"logical":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"Equal":return[s.equal(h("a",n,e,t),h("b",n,e,t))];case"NotEqual":return[s.notEqual(h("a",n,e,t),h("b",n,e,t))];case"Greater":return[s.greater(h("a",n,e,t),h("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(h("a",n,e,t),h("b",n,e,t))];case"Less":return[s.less(h("a",n,e,t),h("b",n,e,t))];case"LessEqual":return[s.lessEqual(h("a",n,e,t),h("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(h("a",n,e,t),h("b",n,e,t))];case"LogicalNot":return[s.logicalNot(h("a",n,e,t))];case"LogicalOr":return[s.logicalOr(h("a",n,e,t),h("b",n,e,t))];case"Select":case"SelectV2":return[s.where(h("condition",n,e,t),h("a",n,e,t),h("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(h("a",n,e,t),h("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"matrices":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(h("a",n,e,t),h("b",n,e,t),h("transposeA",n,e,t),h("transposeB",n,e,t))];case"Einsum":return[s.einsum(h("equation",n,e,t),...h("tensors",n,e,t))];case"Transpose":return[s.transpose(h("x",n,e,t),h("perm",n,e,t))];case"_FusedMatMul":const[r,a]=h("fusedOps",n,e,t),l="biasadd"===r,u="prelu"===a,c=h("numArgs",n,e,t),d=h("leakyreluAlpha",n,e,t);if(l){if(u&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!u&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[m,M]=h("args",n,e,t);return[s.fused.matMul({a:h("a",n,e,t),b:h("b",n,e,t),transposeA:h("transposeA",n,e,t),transposeB:h("transposeB",n,e,t),bias:m,activation:a,preluActivationWeights:M,leakyreluAlpha:d})];case"MatrixBandPart":return[s.linalg.bandPart(h("a",n,e,t),h("numLower",n,e,t),h("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"normalization":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(h("x",n,e,t),h("axis",n,e,t),h("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[s.batchNorm(h("x",n,e,t),h("mean",n,e,t),h("variance",n,e,t),h("offset",n,e,t),h("scale",n,e,t),h("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(h("x",n,e,t),h("radius",n,e,t),h("bias",n,e,t),h("alpha",n,e,t),h("beta",n,e,t))];case"Softmax":return[s.softmax(h("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(h("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"ragged":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:a}=s.raggedGather(h("paramsNestedSplits",n,e,t),h("paramsDenseValues",n,e,t),h("indices",n,e,t),h("outputRaggedRank",n,e,t));return r.concat(a)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:a}=s.raggedRange(h("starts",n,e,t),h("limits",n,e,t),h("splits",n,e,t));return[r,a]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(h("shape",n,e,t),h("values",n,e,t),h("defaultValue",n,e,t),h("rowPartitionTensors",n,e,t),h("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"reduction":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"Max":{const u=h("axis",n,e,t),c=h("keepDims",n,e,t);return[s.max(h("x",n,e,t),u,c)]}case"Mean":{const u=h("axis",n,e,t),c=h("keepDims",n,e,t);return[s.mean(h("x",n,e,t),u,c)]}case"Min":{const u=h("axis",n,e,t),c=h("keepDims",n,e,t);return[s.min(h("x",n,e,t),u,c)]}case"Sum":{const u=h("axis",n,e,t),c=h("keepDims",n,e,t);return[s.sum(h("x",n,e,t),u,c)]}case"All":{const u=h("axis",n,e,t),c=h("keepDims",n,e,t);return[s.all(h("x",n,e,t),u,c)]}case"Any":{const u=h("axis",n,e,t),c=h("keepDims",n,e,t);return[s.any(h("x",n,e,t),u,c)]}case"ArgMax":{const u=h("axis",n,e,t);return[s.argMax(h("x",n,e,t),u)]}case"ArgMin":{const u=h("axis",n,e,t);return[s.argMin(h("x",n,e,t),u)]}case"Prod":{const u=h("axis",n,e,t),c=h("keepDims",n,e,t);return[s.prod(h("x",n,e,t),u,c)]}case"Cumprod":{const u=h("axis",n,e,t),c=h("exclusive",n,e,t),d=h("reverse",n,e,t);return[s.cumprod(h("x",n,e,t),u,c,d)]}case"Cumsum":{const u=h("axis",n,e,t),c=h("exclusive",n,e,t),d=h("reverse",n,e,t);return[s.cumsum(h("x",n,e,t),u,c,d)]}case"Bincount":const r=h("x",n,e,t),a=h("weights",n,e,t),l=h("size",n,e,t);return[s.bincount(r,a,l)];case"DenseBincount":{const u=h("x",n,e,t),c=h("weights",n,e,t),d=h("size",n,e,t),m=h("binaryOutput",n,e,t);return[s.denseBincount(u,c,d,m)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"slice_join":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=h("n",n,e,t),a=h("axis",n,e,t);let l=h("tensors",n,e,t);return l=l.slice(0,r),[s.concat(l,a)]}case"Gather":{const r=h("x",n,e,t),a=h("indices",n,e,t);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{const r=h("axis",n,e,t),a=h("batchDims",n,e,t),l=h("x",n,e,t),u=h("indices",n,e,t);return[s.gather(l,s.cast(u,"int32"),r,a)]}case"Reverse":{const r=h("dims",n,e,t),a=[];for(let u=0;u<r.length;u++)r[u]&&a.push(u);const l=h("x",n,e,t);return[s.reverse(l,a)]}case"ReverseV2":{const r=h("axis",n,e,t),a=h("x",n,e,t);return[s.reverse(a,r)]}case"Slice":{const r=h("begin",n,e,t),a=h("size",n,e,t);return[s.slice(h("x",n,e,t),r,a)]}case"StridedSlice":{const r=h("begin",n,e,t),a=h("end",n,e,t),l=h("strides",n,e,t),u=h("beginMask",n,e,t),c=h("endMask",n,e,t),d=h("ellipsisMask",n,e,t),m=h("newAxisMask",n,e,t),M=h("shrinkAxisMask",n,e,t),R=h("x",n,e,t);return[s.stridedSlice(R,r,a,l,u,c,d,m,M)]}case"Pack":return(0,i.lub)(()=>{const r=h("axis",n,e,t),a=h("tensors",n,e,t),l=a[0].shape,u=s.squeeze(a[0]).shape,c=a.map(d=>{const m=i.D5U.arraysEqual(d.shape,l);if(!m&&!i.D5U.arraysEqual(s.squeeze(d).shape,u))throw new Error("the input tensors shape does not match");return m?d:s.reshape(d,l)});return[s.stack(c,r)]});case"Unpack":{const r=h("axis",n,e,t),a=h("tensor",n,e,t);return s.unstack(a,r)}case"Tile":{const r=h("reps",n,e,t);return[s.tile(h("x",n,e,t),r)]}case"Split":case"SplitV":{const r=h("axis",n,e,t),a=h("numOrSizeSplits",n,e,t),l=h("x",n,e,t);return s.split(l,a,r)}case"ScatterNd":{const r=h("indices",n,e,t),a=h("values",n,e,t),l=h("shape",n,e,t);return[s.scatterND(r,a,l)]}case"GatherNd":{const r=h("x",n,e,t),a=h("indices",n,e,t);return[s.gatherND(r,a)]}case"SparseToDense":{const r=h("sparseIndices",n,e,t),a=h("outputShape",n,e,t),l=h("sparseValues",n,e,t),u=h("defaultValue",n,e,t);return[s.sparseToDense(r,l,a,l.dtype===u.dtype?u:s.cast(u,l.dtype))]}case"TensorScatterUpdate":{const r=h("indices",n,e,t),a=h("values",n,e,t),l=h("tensor",n,e,t);return[s.tensorScatterUpdate(l,r,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"sparse":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:l,reverseIndexMap:u}=s.sparse.sparseFillEmptyRows(h("indices",n,e,t),h("values",n,e,t),h("denseShape",n,e,t),h("defaultValue",n,e,t));return[r,a,l,u]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(h("inputIndices",n,e,t),h("inputShape",n,e,t),h("newShape",n,e,t));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(h("data",n,e,t),h("indices",n,e,t),h("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(h("data",n,e,t),h("indices",n,e,t),h("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"spectral":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"FFT":return[s.fft(h("x",n,e,t))];case"IFFT":return[s.ifft(h("x",n,e,t))];case"RFFT":return[s.rfft(h("x",n,e,t))];case"IRFFT":return[s.irfft(h("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"string":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(h("input",n,e,t),h("pattern",n,e,t),h("rewrite",n,e,t),h("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(h("data",n,e,t),h("dataSplits",n,e,t),h("separator",n,e,t),h("nGramWidths",n,e,t),h("leftPad",n,e,t),h("rightPad",n,e,t),h("padWidth",n,e,t),h("preserveShortSequences",n,e,t));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:l}=s.string.stringSplit(h("input",n,e,t),h("delimiter",n,e,t),h("skipEmpty",n,e,t));return[r,a,l]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(h("input",n,e,t),h("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"transformation":return r(()=>((n,e,t,s=j)=>{switch(n.op){case"Cast":return[s.cast(h("x",n,e,t),h("dtype",n,e,t))];case"ExpandDims":{const r=h("axis",n,e,t);return[s.expandDims(h("x",n,e,t),r)]}case"Squeeze":{const r=h("axis",n,e,t);return[s.squeeze(h("x",n,e,t),r)]}case"Reshape":return[s.reshape(h("x",n,e,t),h("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(h("x",n,e,t),h("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(h("x",n,e,t),h("padding",n,e,t),h("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(h("x",n,e,t),h("padding",n,e,t),h("constantValue",n,e,t))];case"SpaceToBatchND":{const r=h("blockShape",n,e,t),a=h("paddings",n,e,t);return[s.spaceToBatchND(h("x",n,e,t),r,a)]}case"BatchToSpaceND":{const r=h("blockShape",n,e,t),a=h("crops",n,e,t);return[s.batchToSpaceND(h("x",n,e,t),r,a)]}case"DepthToSpace":{const r=h("blockSize",n,e,t),a=h("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(h("x",n,e,t),r,a)]}case"BroadcastTo":return[s.broadcastTo(h("x",n,e,t),h("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(h("s0",n,e,t),h("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(l,u,c));case"hash_table":return Dc(l,u,c,s);case"custom":const d=Ha(l.op);if(d&&d.customExecutor)return d.customExecutor(new oc(l,u,c));throw TypeError(`Custom op ${l.op} is not registered.`);default:throw TypeError(`Unknown op '${l.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return i.D5U.isPromise(a)?a.then(l=>[].concat(l)):[].concat(a)}class eo{constructor(e={},t={},s={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function no(n,e,t,s){const r=new Set,a=[];let l=null,u=null;const c=new Set,d=new Set(Object.keys(n).map(R=>Me(R)[0]));s=s||[];const m=new Set(s.map(R=>Me(R.name)[0])),M=[...e];for(;M.length>0;){const R=M.pop();if((Un(R)||$c(R)||Kc(R))&&null==l&&(l=R,u=l.children.map($=>$.name).filter($=>r.has($))),r.add(R.name),null==t[R.name]&&!d.has(R.name)&&!m.has(R.name)){if(0===R.inputs.length){a.push(R.name);continue}R.inputs.forEach($=>{c.has($.name)||(c.add($.name),M.push($))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:a,dynamicNode:l,syncInputs:u}}class Qr extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Fc=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Wc=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),kc=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Un(n){return Fc.has(n.op)}function $c(n){return Wc.has(n.op)}function Kc(n){return kc.has(n.op)}class Yr{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Yr(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(a=>a.name).sort(),r=t.map(a=>a.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=no(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:l}=s;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${l}]`);if(r.length>0){const d=t.map(M=>M.name),m=Object.keys(e);throw new Error(`Cannot compute the outputs [${d}] from the provided inputs [${m}]. Missing the following inputs: [${r}]`)}const u=function xc(n,e){const{usedNodes:t,inputs:s}=e,l=k=>t.has("string"==typeof k?k:k.name);function u(k){return[...new Map(k.map(et=>[et.name,et])).values()]}const c=u([...Object.keys(s).map(k=>Me(k)[0]).map(k=>n.nodes[k]),...n.weights,...n.initNodes||[]]).filter(l),d=u([...c,...Object.values(n.nodes)]).filter(l),m=new Map(d.map(k=>[k.name,k])),M={};for(const k of d){M[k.name]=M[k.name]||0;for(const et of k.children)l(et)||(M[et.name]=Number.POSITIVE_INFINITY),M[et.name]=(M[et.name]||0)+1}const R=Object.entries(M).filter(([,k])=>0===k).map(([k])=>k),$=[...R];for(;R.length>0;){const k=R.pop(),et=m.get(k);for(const ht of et.children.filter(l))0===--M[ht.name]&&($.push(ht.name),R.push(ht.name))}const q=function Bc(n,e){const t=new Map(n.map(l=>[l.name,l])),s=e.map(l=>l.name),r=new Set(s);for(;s.length>0;){const l=s.pop(),u=t.get(l);for(const c of u.children)!t.has(c.name)||r.has(c.name)||(r.add(c.name),s.push(c.name))}return n.filter(l=>r.has(l.name))}($.map(k=>m.get(k)),c);return function zc(n,e){const t=new Map(n.map((u,c)=>[u.name,c])),s=new Set(e.map(u=>u.name)),r=u=>s.has("string"==typeof u?u:u.name),a=new Set(n.map(u=>u.name)),l=u=>a.has("string"==typeof u?u:u.name);for(const u of n){for(const c of u.children.filter(l)){if(!t.has(c.name))throw new Qr(`Child ${c.name} of node ${u.name} is unreachable.`);if(t.get(u.name)>t.get(c.name))throw new Qr(`Node ${u.name} is scheduled to run after its child ${c.name}.`)}if(!r(u))for(const c of u.inputs){if(!t.has(c.name))throw new Qr(`Input ${c.name} of node ${u.name} is unreachable.`);if(t.get(c.name)>t.get(u.name))throw new Qr(`Node ${u.name} is scheduled to run before its input ${c.name}.`)}}}(q,c),q}(this.graph,s),c=function Uc(n){const e=new Map(n.map((u,c)=>[u.name,c])),t=Number.MAX_SAFE_INTEGER,s=n.map((u,c)=>Un(u)?t:c),r=u=>s[e.get(u.name)]??-1,a=n.map((u,c)=>u.children.map(r).reduce((d,m)=>Math.max(d,m),s[c])),l=new Map;for(let u=0;u<n.length;++u){const c=a[u];if(c===t)continue;const d=n[u],m=n[c];l.has(m.name)||l.set(m.name,[]),l.get(m.name).push(d)}return l}(u);return{orderedNodes:u,nodeLiveUntilMap:c}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,i.CnY)(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(R=>this.graph.nodes[Me(R)[0]]),a=t.map(R=>Me(R)[0]),l=new Set(a);let u=a.map(R=>this.graph.nodes[R]);0===u.length&&(u=this._outputs);const c=this.getCompilationKey(r,u);let d=this.compiledMap.get(c);null==d&&(d=this.compile(e,u),this.compiledMap.set(c,d));try{this.keepIntermediateTensors=(0,i.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(R){this.keepIntermediateTensors=!1,console.warn(R.message)}const m={},M={};return(0,i.lub)(()=>{const R=new eo(this.weightMap,m,M,this.functionExecutorMap,this.parseNodeNameCache),$=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(et=>{const[ht,gt]=Me(et,R),bt=[];bt[gt]=e[et],$[ht]=bt,this.keepIntermediateTensors&&(this.clonedTensorsMap[ht]=this.cloneTensorList(bt))});const nt=this.getFrozenTensorIds($),{orderedNodes:q,nodeLiveUntilMap:k}=d;for(const et of q){if($[et.name])continue;const ht=to(et,$,R,this._resourceManager);if(i.D5U.isPromise(ht))throw new Error(`The execution of the op '${et.op}' returned a promise. Please use model.executeAsync() instead.`);$[et.name]=ht,this.keepIntermediateTensors&&(this.clonedTensorsMap[et.name]=this.cloneTensorList(ht)),this.checkTensorForDisposalWithNodeLiveUntilInfo(et,$,R,nt,l,k.get(et.name))}return null==this.parent&&R.dispose(nt),t.map(et=>be(et,$,R))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,a,l,u){if(!Un(t)&&!l.has(e)){for(const c of s[e])null!=c&&(u[c.id]=(u[c.id]||0)+t.children.length);for(const c of t.inputs){if(Un(c))continue;const d=Ga(c.name,s,r);if(null!=d)for(const m of d){if(!m||m.kept||a.has(m.id))continue;const M=u[m.id];1===M?(m.dispose(),delete u[m.id]):null!=M&&u[m.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,a,l){function u(c){return Un(c)||a.has(c.name)}if(!Un(e)&&null!=l)for(const c of l){if(u(c))continue;const d=Ga(c.name,t,s);for(const m of d)!m||m.kept||r.has(m.id)||m.dispose()}}executeAsync(e,t){var s=this;return(0,b.Z)(function*(){return s._executeAsync(e,t)})()}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(e,t){var s=this;return(0,b.Z)(function*(r,a,l=!1,u={},c={}){s.disposeIntermediateTensors(),l||(r=s.mapInputs(r),s.checkInputs(r),s.checkInputShapeAndType(r),a=s.mapOutputs(a),s.checkOutputs(a));try{s.keepIntermediateTensors=(0,i.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(q){s.keepIntermediateTensors=!1,console.warn(q.message)}const d=new eo(s.weightMap,u,c,s.functionExecutorMap,s.parseNodeNameCache);s.keepIntermediateTensors&&(s.clonedTensorsMap=s.cloneTensorMap(s.weightMap));const m=yield s.executeWithControlFlow(r,d,a,l),M=a.map(q=>be(q,m,d)),R=M.map(q=>q.id),$=Object.keys(r).map(q=>r[q].id),nt=new Set([...R,...$,...s.weightIds]);return Object.values(m).forEach(q=>{q.forEach(k=>{k&&!k.isDisposed&&!nt.has(k.id)&&k.dispose()})}),null==s.parent&&d.dispose(nt),M}).apply(this,arguments)}executeFunctionAsync(e,t,s){var r=this;return(0,b.Z)(function*(){const a=e.reduce((l,u,c)=>(l[r.inputs[c].name]=u,l),{});return r._executeAsync(a,r.outputNodes,!0,t,s)})()}executeWithControlFlow(e,t,s,r){var a=this;return(0,b.Z)(function*(){const l=Object.keys(e),u=l.map(Et=>a.graph.nodes[Me(Et)[0]]),c=s.map(Et=>Me(Et)[0]),d=new Set(c);let m=c.map(Et=>a.graph.nodes[Et]);0===m.length&&(m=a._outputs);const{usedNodes:M,missingInputs:R,dynamicNode:$,syncInputs:nt}=no(e,m,a.weightMap,a._initNodes),q=[...u,...a.graph.weights,...a._initNodes||[]].map(Et=>({node:Et,contexts:t.currentContext})),k=Object.assign({},a.weightMap);Object.keys(e).forEach(Et=>{const[Nt,St]=Me(Et),Lt=[];Lt[St]=e[Et],k[Nt]=Lt});const et={},ht=a.getFrozenTensorIds(k),gt={};for(;q.length>0;){const Et=a.processStack(u,q,t,k,gt,ht,d,et,M);yield Promise.all(Et)}null==$&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const bt=m.filter(Et=>!Un(Et)&&!be(Et.name,k,t)).map(Et=>Et.name);if(bt.length>0){let Et="";throw null!=$&&(Et=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${nt}]`),new Error(`Cannot compute the outputs [${bt}] from the provided inputs [${l}]. Consider providing the following inputs: [${R}]. ${Et}`)}return k})()}processStack(e,t,s,r,a,l,u,c,d){const m=[];for(;t.length>0;){const M=t.pop();s.currentContext=M.contexts;let R="";if("Enter"===M.node.op&&h("isConstant",M.node,r,s)&&([R]=on(M.node.name,s)),null==r[M.node.name]){const $=to(M.node,r,s,this._resourceManager);R||([R]=on(M.node.name,s));const nt=s.currentContext;i.D5U.isPromise($)?m.push($.then(q=>(r[R]=q,this.keepIntermediateTensors&&(this.clonedTensorsMap[R]=this.cloneTensorList(q)),s.currentContext=nt,this.checkTensorForDisposal(R,M.node,r,s,l,u,c),this.processChildNodes(M.node,t,s,r,a,d),q))):(r[R]=$,this.keepIntermediateTensors&&(this.clonedTensorsMap[R]=this.cloneTensorList($)),this.checkTensorForDisposal(R,M.node,r,s,l,u,c),this.processChildNodes(M.node,t,s,r,a,d))}else this.processChildNodes(M.node,t,s,r,a,d)}return m}processChildNodes(e,t,s,r,a,l){e.children.forEach(u=>{const[c]=on(u.name,s);a[c]||!l.has(u.name)||("Merge"===u.op?u.inputNames.some(d=>!!be(d,r,s))&&(a[c]=!0,t.push({contexts:s.currentContext,node:u})):u.inputNames.every(d=>!!be(d,r,s))&&(a[c]=!0,t.push({contexts:s.currentContext,node:u})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=Me(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const l=a.attrParams.shape.value,u=l.length===s.shape.length&&s.shape.every((c,d)=>-1===l[d]||l[d]===c);i.D5U.assert(u,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${l}], but was [${s.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&i.D5U.assert(s.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const a in e){const l=null===(s=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===s?void 0:s[a];null!=l?r[l.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=Me(s);return null==this.graph.nodes[r]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const a=null===(r=null===(s=this._signature)||void 0===s?void 0:s.outputs)||void 0===r?void 0:r[t];return null!=a?a.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=Me(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class Vc{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var jc=o(98339);class Ni{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=i.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,null==t&&(this.loadOptions={}),this.resourceManager=new Vc}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return i.D5U.isPromise(e)?e.then(t=>null==t.getWeightStream?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}loadStreaming(e){var t=this;return(0,b.Z)(function*(){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const s=yield(0,jc.r)(e.getWeightStream(),e.weightSpecs);return t.loadWithWeightMap(e,s)})()}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const a=this.artifacts.userDefinedMetadata;null!=a.signature&&(r=a.signature),null!=a.structuredOutputKeys&&(this.structuredOutputKeys=a.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Yr(Za.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const a=Za.Instance.transformGraph(e.modelInitializer);this.initializer=new Yr(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}save(e,t){var s=this;return(0,b.Z)(function*(){if("string"==typeof e){const r=s.io.getSaveHandlers(e);if(0===r.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(s.artifacts)})()}addStructuredOutputNames(e){if(this.structuredOutputKeys){const s={};return(e instanceof i.esB?[e]:e).forEach((r,a)=>s[this.structuredOutputKeys[a]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}predictAsync(e,t){var s=this;return(0,b.Z)(function*(){const r=yield s.executeAsync(e,s.outputNodes);return s.addStructuredOutputNames(r)})()}normalizeInputs(e){var t;if(!(e instanceof i.esB||Array.isArray(e))){const a=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=a)for(const l in a){const u=a[l];null!=u.resourceId&&(e[l]=this.resourceIdToCapturedInput[u.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((a,l)=>{var u,c,d;const m=null===(d=null===(c=null===(u=this.signature)||void 0===u?void 0:u.inputs)||void 0===c?void 0:c[l])||void 0===d?void 0:d.resourceId;return a[l]=null!=m?this.resourceIdToCapturedInput[m]:e[r++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:this.initializer.execute({},null==this.initializerSignature?[]:Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){var e=this;return(0,b.Z)(function*(){return null==e.initializer?[]:e.initializer.executeAsync({},null==e.initializerSignature?[]:Object.keys(e.initializerSignature.outputs))})()}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++)this.resourceIdToCapturedInput[t[s[r]].resourceId]=e[r]}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}executeAsync(e,t){var s=this;return(0,b.Z)(function*(){null==s.resourceIdToCapturedInput&&s.setResourceIdToCapturedInput(yield s.executeInitializerGraphAsync()),e=s.normalizeInputs(e),t=s.normalizeOutputs(t);const r=yield s.executor.executeAsync(e,t);return r.length>1?r:r[0]})()}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,i.B90)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}function Zc(n){return Ci.apply(this,arguments)}function Ci(){return(Ci=(0,b.Z)(function*(n,e={},t=i.io){if(null==n)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&"string"==typeof n&&(n=function Qc(n){return n.endsWith("/")||(n+="/"),`${n}model.json?tfjs-format=file`}(n));const s=new Ni(n,e,t);return yield s.load(),s})).apply(this,arguments)}function Xc(n){if(null==n)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(n instanceof Array){const[s,r]=n;if(!s)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in s))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in s))throw new Error("Model JSON is missing 'weightsManifest'");const a=i.io.getWeightSpecs(s.weightsManifest),l=i.io.getModelArtifactsForJSONSync(s,a,r);e=i.io.fromMemorySync(l)}else if("load"in n)e=n;else{if(!("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n))throw new Error("Unknown model format");e=i.io.fromMemorySync(n)}const t=new Ni(e);return t.load(),t}var so=o(64254),ro=o(89128);function Jr(n,e,t=new Map,s=new Set){if(null==n)return null;if("function"==typeof Blob&&n instanceof Blob)return n.slice();if(s.has(n))throw new Error("Circular references are not supported.");if(t.has(n))return t.get(n);const r=e(n);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(_s(n)){const a=Array.isArray(n)?[]:{};s.add(n);for(const l in n){const c=Jr(n[l],e,t,s);a[l]=c}return s.delete(n),n.__proto__&&(a.__proto__=n.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${n}`)}return t.set(n,r.value),r.value}function Jc(n,e=ao){return io(n,e)}function io(n,e,t=new Set){const s=n[0];if(t.has(s))throw new Error("Circular references are not supported.");const r=e(n);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(_s(s)){const a=Array.isArray(s)?[]:{};t.add(s);for(const l in s){const c=io(n.map(d=>d[l]),e,t);a[l]=c}return t.delete(s),a}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function ao(n){return null===n?null:_s(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}function oo(n,e){return Si.apply(this,arguments)}function Si(){return(Si=(0,b.Z)(function*(n,e){const t=new Map;Jr(n,e,t);for(const r of Array.from(t.keys())){const a=t.get(r);if(i.D5U.isPromise(a)){const l=yield a;t.set(r,l)}}return Jr(n,e,t)})).apply(this,arguments)}function _s(n){let e=!1;if(i.OBj().get("IS_BROWSER"))e=n instanceof TextDecoder;else{const{StringDecoder:t}=o(34977);e=n instanceof t}return null!=n&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||"object"==typeof n&&!(n instanceof i.esB)&&!(n instanceof Promise)&&!e)}function nh(n){return n instanceof i.esB?{value:n.clone(),recurse:!1}:_s(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}class lo{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),s=this.get(t);return this.set(t,this.pop()),s}}let sh=(()=>{class n extends lo{constructor(){super(n.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,s=new Array(t),r=this.length();for(let a=0;a<r;a++)s[a]=this.get(this.wrap(this.begin+a));this.data=s,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}return n.INITIAL_CAPACITY=32,n})();function uo(n){return new ih(n)}function ar(n){return new ah(n)}class ge{toArray(){var e=this;return(0,b.Z)(function*(){const t=[];let s=yield e.next();for(;!s.done;)t.push(s.value),s=yield e.next();return t})()}toArrayForTest(){var e=this;return(0,b.Z)(function*(){const t=e.prefetch(100),s=[];let r=yield t.next();for(;!r.done;)s.push(r.value),r=yield t.next();return s})()}resolveFully(){var e=this;return(0,b.Z)(function*(){let t=yield e.next();for(;!t.done;)t=yield e.next()})()}resolveWhile(e){var t=this;return(0,b.Z)(function*(){let s=yield t.next(),r=e(s.value);for(;!s.done&&r;)s=yield t.next(),r=e(s.value)})()}handleErrors(e){return new mh(this,e)}filter(e){return new hh(this,e)}map(e){return new dh(this,e)}mapAsync(e){return new ho(this,e)}serialMapAsync(e){return new ho(this,e).serial()}flatmap(e){return new fh(this,e)}forEachAsync(e){var t=this;return(0,b.Z)(function*(){return t.map(e).resolveFully()})()}serialForEach(e){var t=this;return(0,b.Z)(function*(){return t.serialMapAsync(e).resolveWhile(s=>!0===s)})()}rowMajorBatch(e,t=!0){return new ch(this,e,t)}columnMajorBatch(e,t=!0,s=ao){return this.rowMajorBatch(e,t).map(a=>Jc(a,s))}concatenate(e,t){return new mo(uo([this,e]),t)}take(e){return e<0||null==e?this:new uh(this,e)}skip(e){return e<0||null==e?this:new lh(this,e)}prefetch(e){return new fo(this,e)}shuffle(e,t){return new gh(this,e,t)}serial(){return new oh(this)}}class ih extends ge{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}next(){var e=this;return(0,b.Z)(function*(){if(e.trav>=e.items.length)return{value:null,done:!0};const t=e.items[e.trav];return e.trav++,{value:(n=t,function Yc(n,e){return Jr(n,e)}(n,nh)),done:!1};var n})()}}class ah extends ge{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}next(){var e=this;return(0,b.Z)(function*(){try{return e.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}})()}}class oh extends ge{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}next(){var e=this;return(0,b.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,b.Z)(function*(){return e.upstream.next()})()}}class lh extends ge{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}next(){var e=this;return(0,b.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,b.Z)(function*(){for(;e.count++<e.maxCount;){const t=yield e.upstream.next();if(t.done)return t;i.B90(t.value)}return e.upstream.next()})()}}class uh extends ge{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}next(){var e=this;return(0,b.Z)(function*(){return e.count++>=e.maxCount?{value:null,done:!0}:e.upstream.next()})()}}class ch extends ge{constructor(e,t,s=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=s,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}next(){var e=this;return(0,b.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,b.Z)(function*(){const t=[];for(;t.length<e.batchSize;){const s=yield e.upstream.next();if(s.done)return e.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(s.value)}return{value:t,done:!1}})()}}class hh extends ge{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}next(){var e=this;return(0,b.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,b.Z)(function*(){for(;;){const t=yield e.upstream.next();if(t.done||e.predicate(t.value))return t;i.B90(t.value)}})()}}class dh extends ge{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}next(){var e=this;return(0,b.Z)(function*(){const t=yield e.upstream.next();if(t.done)return{value:null,done:!0};const s=i.piX.getTensorsInContainer(t.value),r=e.transform(t.value),a=i.piX.getTensorsInContainer(r);for(const l of s)i.piX.isTensorInList(l,a)||l.dispose();return{value:r,done:!1}})()}}class mh extends ge{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}next(){var e=this;return(0,b.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,b.Z)(function*(){for(;;)try{return yield e.upstream.next()}catch(t){if(!e.handler(t))return{value:null,done:!0}}})()}}class ho extends ge{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}next(){var e=this;return(0,b.Z)(function*(){const t=yield e.upstream.next();if(t.done)return{value:null,done:!0};const s=i.piX.getTensorsInContainer(t.value),r=yield e.transform(t.value),a=i.piX.getTensorsInContainer(r);for(const l of s)i.piX.isTensorInList(l,a)||l.dispose();return{value:r,done:!1}})()}}class Ri extends ge{constructor(){super(),this.outputQueue=new sh,this.lastRead=Promise.resolve({value:null,done:!1})}next(){var e=this;return(0,b.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,b.Z)(function*(){for(;0===e.outputQueue.length();)if(!(yield e.pump()))return{value:null,done:!0};return{value:e.outputQueue.shift(),done:!1}})()}}class fh extends Ri{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}pump(){var e=this;return(0,b.Z)(function*(){const t=yield e.upstream.next();if(t.done)return!1;const s=i.piX.getTensorsInContainer(t.value),r=e.transform(t.value),a=i.piX.getTensorsInContainer(r);e.outputQueue.pushAll(r);for(const l of s)i.piX.isTensorInList(l,a)||l.dispose();return!0})()}}class mo extends ge{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}next(){var e=this;return(0,b.Z)(function*(){return e.lastRead=e.readFromChain(e.lastRead),e.lastRead})()}readFromChain(e){var t=this;return(0,b.Z)(function*(){if(yield e,null==t.iterator){const r=yield t.moreIterators.next();if(r.done)return{value:null,done:!0};t.iterator=r.value,null!=t.baseErrorHandler&&(t.iterator=t.iterator.handleErrors(t.baseErrorHandler))}const s=yield t.iterator.next();return s.done?(t.iterator=null,t.readFromChain(e)):s})()}}var Fn=function(n){return n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n}(Fn||{});class ph extends ge{constructor(e,t=Fn.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}nextState(e){var t=this;return(0,b.Z)(function*(){yield e;let s=0,r=0;const l=yield oo(t.iterators,function a(u){return u instanceof ge?{value:u.next().then(d=>(s++,d.done&&r++,d.value)),recurse:!1}:{value:null,recurse:!0}});if(s===r)return{value:null,done:!0};if(r>0)switch(t.mismatchMode){case Fn.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${t.count}.`);case Fn.SHORTEST:return{value:null,done:!0}}return t.count++,{value:l,done:!1}})()}next(){var e=this;return(0,b.Z)(function*(){return e.currentPromise=e.nextState(e.currentPromise),e.currentPromise})()}}class fo extends ge{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new lo(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class gh extends fo{constructor(e,t,s){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ro.alea(s||i.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}next(){var e=this;return(0,b.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}serialNext(){var e=this;return(0,b.Z)(function*(){for(e.upstreamExhausted||e.refill();!e.buffer.isEmpty();){const t=e.chooseIndex(),s=yield e.buffer.shuffleExcise(t);if(!s.done)return e.refill(),s;e.upstreamExhausted=!0}return{value:null,done:!0}})()}}let or=(()=>{class n{constructor(){this.size=null}batch(t,s=!0){const r=this;let a;return i.D5U.assert(t>0,()=>`batchSize needs to be positive, but it is\n      ${t}`),a=this.size===1/0||null==this.size?this.size:s?Math.ceil(this.size/t):Math.floor(this.size/t),Le((0,b.Z)(function*(){return(yield r.iterator()).columnMajorBatch(t,s,Eh)}),a)}concatenate(t){const s=this;let r;return r=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Le((0,b.Z)(function*(){return(yield s.iterator()).concatenate(yield t.iterator())}),r)}filter(t){const s=this;let r;return r=this.size===1/0?1/0:null,Le((0,b.Z)(function*(){return(yield s.iterator()).filter(a=>i.lub(()=>t(a)))}),r)}forEachAsync(t){var s=this;return(0,b.Z)(function*(){return(yield s.iterator()).forEachAsync(t)})()}map(t){const s=this;return Le((0,b.Z)(function*(){return(yield s.iterator()).map(r=>i.lub(()=>t(r)))}),this.size)}mapAsync(t){const s=this;return Le((0,b.Z)(function*(){return(yield s.iterator()).mapAsync(t)}),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const s=this;return Le((0,b.Z)(function*(){return(yield s.iterator()).prefetch(t)}),this.size)}repeat(t){const s=this;let r;return r=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Le((0,b.Z)(function*(){return function co(n,e){return new mo(n,e)}(ar((0,b.Z)(function*(){return{value:yield s.iterator(),done:!1}})).take(t))}),r)}skip(t){const s=this;let r;return r=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Le((0,b.Z)(function*(){return(yield s.iterator()).skip(t)}),r)}shuffle(t,s,r=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,l=ro.alea(s||i.D5U.now().toString());return Le((0,b.Z)(function*(){let u=l.int32();return r&&(u+=l.int32()),(yield a.iterator()).shuffle(t,u.toString())}),this.size)}take(t){const s=this;let r;return r=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Le((0,b.Z)(function*(){return(yield s.iterator()).take(t)}),r)}toArray(){var t=this;return(0,b.Z)(function*(){if(t.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield t.iterator()).toArray()})()}toArrayForTest(){var t=this;return(0,b.Z)(function*(){if(t.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield t.iterator()).toArrayForTest()})()}}return n.MAX_BUFFER_SIZE=1e4,n})();function Le(n,e=null){return new class extends or{constructor(){super(...arguments),this.size=e}iterator(){return(0,b.Z)(function*(){return n()})()}}}function yh(n){return Le((0,b.Z)(function*(){return uo(n)}),n.length)}function _h(n){if(!_s(n))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(n))for(let t=0;t<n.length;t++)e=null==e?n[t].size:Math.min(e,n[t].size);else if(n instanceof Object)for(const t in n)e=null==e?n[t].size:Math.min(e,n[t].size);return Le((0,b.Z)(function*(){return function rh(n,e=Fn.FAIL){return new ph(n,e)}(yield oo(n,s=>{if(s instanceof or)return{value:s.iterator(),recurse:!1};if(_s(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),Fn.SHORTEST)}),e)}function Eh(n){return null===n?null:function qc(n){return null==n||function th(n){return null===n||"object"!=typeof n&&"function"!=typeof n}(n)||Array.isArray(n)||"object"==typeof n&&n instanceof i.esB||i.D5U.isTypedArray(n)}(n[0])?{value:vh(n),recurse:!1}:{value:null,recurse:!0}}function vh(n){if(0===n.length)throw new Error("Can't make a batch of zero elements.");return n[0]instanceof i.esB?i.knu(n):i.XeE(n)}class po extends or{constructor(e){super(),this.input=e}iterator(){var e=this;return(0,b.Z)(function*(){return(yield e.input.iterator()).decodeUTF8().split("\n").map(a=>(a.endsWith("\r")&&(a=a.slice(0,-1)),a))})()}}const lr=Symbol("out"),go=Symbol("field"),ti=Symbol("quote"),Pi=Symbol("quoteafterquote"),yo=Symbol("quoteinquote");class _o extends or{columnNames(){var e=this;return(0,b.Z)(function*(){return e.columnNamesValidated||(yield e.setColumnNames()),e.configuredColumnsOnly?Object.keys(e.columnConfigs):e.fullColumnNames})()}setColumnNames(){var e=this;return(0,b.Z)(function*(){const t=yield e.maybeReadHeaderLine();if(!e.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");e.fullColumnNames&&t&&i.D5U.assert(t.length===e.fullColumnNames.length,()=>"The length of provided columnNames ("+e.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),e.fullColumnNames||(e.fullColumnNames=t);const s=e.fullColumnNames.reduce((a,l)=>(a[l]=a[l]+1||1,a),{}),r=Object.keys(s).filter(a=>s[a]>1);if(i.D5U.assert(0===r.length,()=>"Duplicate column names found: "+r.toString()),e.columnConfigs)for(const a of Object.keys(e.columnConfigs))if(-1===e.fullColumnNames.indexOf(a))throw new Error('The key "'+a+'" provided in columnConfigs does not match any of the column names ('+e.fullColumnNames.toString()+").");e.columnNamesValidated=!0})()}maybeReadHeaderLine(){var e=this;return(0,b.Z)(function*(){if(e.hasHeader){const s=yield(yield e.base.iterator()).next();if(s.done)throw new Error("No data was found for CSV parsing.");return e.parseRow(s.value,!1)}return null})()}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new po(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(i.D5U.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}iterator(){var e=this;return(0,b.Z)(function*(){e.columnNamesValidated||(yield e.setColumnNames());let t=yield e.base.iterator();return e.hasHeader&&(t=t.skip(1)),t.map(s=>e.makeDataElement(s))})()}makeDataElement(e){const t=this.parseRow(e),s={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const l=this.fullColumnNames[a],u=this.columnConfigs?this.columnConfigs[l]:null;if(!this.configuredColumnsOnly||u){const c=t[a];let d=null;if(""===c)if(u&&void 0!==u.default)d=u.default;else{if(u&&(u.required||u.isLabel))throw new Error(`Required column ${l} is empty in this line: ${e}`);d=void 0}else{const m=Number(c);if(isNaN(m))d=u&&"bool"===u.dtype?this.getBoolean(c):c;else if(u&&u.dtype)switch(u.dtype){case"float32":default:d=m;break;case"int32":d=Math.floor(m);break;case"bool":d=this.getBoolean(c)}else d=m}u&&u.isLabel?r[l]=d:s[l]=d}}return 0===Object.keys(r).length?s:{xs:s,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const s=[];let r=0;const a=e.length;let l=lr;for(let u=0;u<a;u++)switch(l){case lr:switch(e.charAt(u)){case'"':r=u+1,l=ti;break;case this.delimiter:if(r=u+1," "===this.delimiter&&this.delimWhitespace)break;s.push(""),l=lr;break;default:l=go,r=u}break;case go:e.charAt(u)===this.delimiter&&(s.push(e.substring(r,u)),l=lr,r=u+1);break;case ti:'"'===e.charAt(u)&&(l=Pi);break;case Pi:switch(e.charAt(u)){case this.delimiter:s.push(e.substring(r,u-1)),l=lr,r=u+1;break;case'"':l=ti;break;default:l=yo}break;case yo:'"'===e.charAt(u)&&(l=ti)}if(s.push(l===Pi?e.substring(r,a-1):e.substring(r)),t&&s.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${s}`);return s}}class Mi extends ge{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static create(){return(0,b.Z)(function*(e={}){if(!(0,i.OBj)().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new Mi(e);return yield t.start(),t}).apply(this,arguments)}start(){var e=this;return(0,b.Z)(function*(){try{e.stream=yield navigator.mediaDevices.getUserMedia({audio:null==e.audioTrackConstraints||e.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!e.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(e.audioContext=new t,e.sampleRateHz){if(e.audioContext.sampleRate!==e.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${e.sampleRateHz}; Actual: ${e.audioContext.sampleRate}`)}else e.sampleRateHz=e.audioContext.sampleRate;const s=e.audioContext.createMediaStreamSource(e.stream);e.analyser=e.audioContext.createAnalyser(),e.analyser.fftSize=2*e.fftSize,e.analyser.smoothingTimeConstant=e.smoothingTimeConstant,s.connect(e.analyser),e.freqData=new Float32Array(e.fftSize),e.timeData=new Float32Array(e.fftSize)})()}next(){var e=this;return(0,b.Z)(function*(){if(e.isClosed)return{value:null,done:!0};let t,s;const r=yield e.getAudioData();if(e.includeSpectrogram){const a=e.flattenQueue(r.freqDataQueue);t=e.getTensorFromAudioDataArray(a,[e.numFrames,e.columnTruncateLength,1])}if(e.includeWaveform){const a=e.flattenQueue(r.timeDataQueue);s=e.getTensorFromAudioDataArray(a,[e.numFrames*e.fftSize,1])}return{value:{spectrogram:t,waveform:s},done:!1}})()}capture(){var e=this;return(0,b.Z)(function*(){return(yield e.next()).value})()}getAudioData(){var e=this;return(0,b.Z)(function*(){const t=[],s=[];let r=0;return new Promise(a=>{const l=setInterval(()=>{e.includeSpectrogram&&(e.analyser.getFloatFrequencyData(e.freqData),e.freqData[0]===-1/0&&a({freqDataQueue:t,timeDataQueue:s}),t.push(e.freqData.slice(0,e.columnTruncateLength))),e.includeWaveform&&(e.analyser.getFloatTimeDomainData(e.timeData),s.push(e.timeData.slice())),++r===e.numFrames&&(clearInterval(l),a({freqDataQueue:t,timeDataQueue:s}))},e.fftSize/e.sampleRateHz*1e3)})})()}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,s=new Float32Array(e.length*t);return e.forEach((r,a)=>s.set(r,a*t)),s}getTensorFromAudioDataArray(e,t){const s=new Float32Array(i.D5U.sizeFromShape(t));return s.set(e,s.length-e.length),(0,i.XeE)(s,t)}}class Li extends ge{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,i.RRF)([0],"int32"),this.webcamConfig.centerCrop){const s=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,r=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,a=(1-s)/2,l=(1-r)/2;this.cropBox=(0,i.odF)([l,a,r+l,a+s],[1,4])}else this.cropBox=(0,i.odF)([0,0,1,1],[1,4])}summary(){return"webcam"}static create(e){return(0,b.Z)(function*(t,s={}){if(!(0,i.OBj)().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!s.resizeWidth||!s.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=s.resizeWidth,t.height=s.resizeHeight}const r=new Li(t,s);return yield r.start(),r}).apply(this,arguments)}start(){var e=this;return(0,b.Z)(function*(){e.webcamConfig.facingMode&&i.D5U.assert("user"===e.webcamConfig.facingMode||"environment"===e.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${e.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{e.stream=yield navigator.mediaDevices.getUserMedia({video:{deviceId:e.webcamConfig.deviceId,facingMode:e.webcamConfig.facingMode?e.webcamConfig.facingMode:"user",width:e.webcamVideoElement.width,height:e.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!e.stream)throw new Error("Could not obtain video from webcam.");try{e.webcamVideoElement.srcObject=e.stream}catch(t){console.log(t),e.webcamVideoElement.src=window.URL.createObjectURL(e.stream)}return e.webcamVideoElement.play(),e.isClosed=!1,new Promise(t=>{e.webcamVideoElement.onloadedmetadata=()=>{t()}})})()}next(){var e=this;return(0,b.Z)(function*(){if(e.isClosed)return{value:null,done:!0};let t;try{t=i.Xhn.fromPixels(e.webcamVideoElement)}catch(s){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(s)}`)}if(!e.resize)return{value:t,done:!1};try{return{value:e.cropAndResizeFrame(t),done:!1}}catch(s){throw new Error(`Error thrown cropping the video: ${s.message}`)}finally{t.dispose()}})()}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return(0,i.lub)(()=>{const t=(0,i.dt4)((0,i.pju)(e,"float32"),0);let s;return s=i.image.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear"),(0,i.XLQ)(s,s.shape.slice(1))})}capture(){var e=this;return(0,b.Z)(function*(){return(yield e.next()).value})()}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class Eo{}class vo extends ge{split(e){return new Th(this,e)}}class Th extends vo{constructor(e,t){super(),this.upstream=e,this.impl=new bh(e,t)}summary(){return this.impl.summary()}next(){var e=this;return(0,b.Z)(function*(){return e.impl.next()})()}}class bh extends Ri{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}pump(){var e=this;return(0,b.Z)(function*(){const t=yield e.upstream.next();if(t.done)return""!==e.carryover&&(e.outputQueue.push(e.carryover),e.carryover="",!0);const s=t.value.split(e.separator);s[0]=e.carryover+s[0];for(const r of s.slice(0,-1))e.outputQueue.push(r);return e.carryover=s[s.length-1],!0})()}}class Dh extends ge{decodeUTF8(){return new Oh(this)}}class Oh extends vo{constructor(e){super(),this.upstream=e,this.impl=new Ah(e)}summary(){return this.impl.summary()}next(){var e=this;return(0,b.Z)(function*(){return e.impl.next()})()}}class Ah extends Ri{constructor(e){if(super(),this.upstream=e,(0,i.OBj)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=o(31601);this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}pump(){var e=this;return(0,b.Z)(function*(){const t=yield e.upstream.next();let s,r;return!t.done&&(s=t.value,r=(0,i.OBj)().get("IS_BROWSER")?e.decoder.decode(s,{stream:!0}):e.decoder.write(Buffer.from(s.buffer)),e.outputQueue.push(r),!0)})()}}class To extends Dh{constructor(e,t={}){super(),this.file=e,this.options=t,i.D5U.assert(e instanceof Uint8Array||!!(0,i.OBj)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}next(){var e=this;return(0,b.Z)(function*(){return e.offset>=(e.file instanceof Uint8Array?e.file.byteLength:e.file.size)?{value:null,done:!0}:{value:yield new Promise((s,r)=>{const a=e.offset+e.chunkSize;if(e.file instanceof Uint8Array)s(new Uint8Array(e.file.slice(e.offset,a)));else{const l=new FileReader;l.onload=c=>{let d=l.result;if(d instanceof ArrayBuffer&&(d=new Uint8Array(d)),!(d instanceof Uint8Array))return r(new TypeError("FileReader returned unknown type."));s(d)},l.onabort=c=>r(new Error("Aborted")),l.onerror=c=>r(new Error(c.type));const u=e.file.slice(e.offset,a);l.readAsArrayBuffer(u)}e.offset=a}),done:!1}})()}}function xi(){return(xi=(0,b.Z)(function*(n,e={},t){let s,r;"string"==typeof n?s=n:(s=n.url,r=wh(n));const a=yield(t||i.D5U.fetch)(s,r);if(a.ok){const l=new Uint8Array(yield a.arrayBuffer());return new To(l,e)}throw new Error(a.statusText)})).apply(this,arguments)}const wh=n=>({method:n.method,headers:n.headers,body:n.body,mode:n.mode,credentials:n.credentials,cache:n.cache,redirect:n.redirect,referrer:n.referrer,integrity:n.integrity});function bo(n){return"string"==typeof n&&"file://"===n.slice(0,7)}class Do extends Eo{constructor(e,t={}){super(),this.input=e,this.options=t}iterator(){var e=this;return(0,b.Z)(function*(){if(bo(e.input)&&(0,i.OBj)().get("IS_NODE")){const t=o(67792);e.input=t.readFileSync(e.input.slice(7))}return new To(e.input,e.options)})()}}class Oo extends Eo{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}iterator(){var e=this;return(0,b.Z)(function*(){return bo(e.url)?new Do(e.url,e.fileOptions).iterator():function Ih(n){return xi.apply(this,arguments)}(e.url,e.fileOptions)})()}}function Nh(n,e={}){return new _o(new Oo(n),e)}function Ch(n){const e=ar(n);return Le((0,b.Z)(function*(){return e}))}function Sh(n){return Le((0,b.Z)(function*(){const e=yield n();return ar(()=>e.next())}))}function Rh(n,e){return Bi.apply(this,arguments)}function Bi(){return(Bi=(0,b.Z)(function*(n,e){return Li.create(n,e)})).apply(this,arguments)}function Ph(n){return zi.apply(this,arguments)}function zi(){return(zi=(0,b.Z)(function*(n){return Mi.create(n)})).apply(this,arguments)}var Ao=o(46580),Io=o(69989),Mh=o(98669),wo=o(36456);(0,i.jqO)("cpu",()=>new Io.O,1),o(67949);var No=o(5926),Co=o(91883),Lh=o(11230),xh=o(63076),Bh=o(88377),zh=o(11484);function So(){(0,i.OBj)().set("WEBGL_FORCE_F16_TEXTURES",!0)}i.C2$.isBrowser()&&(0,i.jqO)("webgl",()=>new No.QC,2);const Uh={forceHalfFloat:So};o(17161);var Fh=o(42006);const Wh={"tfjs-core":i.jTM,"tfjs-backend-cpu":wo.i,"tfjs-backend-webgl":Co.i,"tfjs-data":Ao.i,"tfjs-layers":An.i,"tfjs-converter":so.i,tfjs:Fh.i};class Ro{alphabet;characters;isWarmedUp;_model;constructor(e){e?(this.alphabet=" abcdefghijklmnopqrstuvwxyz",this.characters=this.alphabet.toUpperCase()):this.characters="0123456789",this.isWarmedUp=this.initModel(e)}initModel(e){return new Promise(t=>{i.CQI("wasm").then(()=>{this.loadModel(e).then().then(()=>{console.info("Backend running on:",i.N_N()),t()})})})}loadModel(e){return console.time("Load model"),e?(console.log("load letter",x),pn("content/classifier/letterclassifier/model.json").then(t=>{this._model=t,console.timeEnd("Load model")})):(console.log("load digit"),pn("https://storage.googleapis.com/tfjs-models/tfjs/iris_v1/model.json").then(t=>t.summary()),pn("content/classifier/digitclassifier/model.json").then(t=>{this._model=t,console.timeEnd("Load model")}))}warmUp(){console.time("Warmup"),this._model.predict(i.nGf([1,28,28,1])).as1D().dataSync(),console.timeEnd("Warmup")}preprocessImage(e){const a=e.width>e.height,l=Math.round((Math.max(e.width,e.height)-Math.min(e.width,e.height))/2),u=a?[[l,l],[0,0],[0,0]]:[[0,0],[l,l],[0,0]];return i.lub(()=>{let c=i.Xhn.fromPixels(e,1).pad(u,255);return c=i.image.resizeBilinear(c,[24,24]).pad([[2,2],[2,2],[0,0]],255),c=i.iD$(1).sub(c.toFloat().div(i.iD$(255))),c.expandDims(0)})}predict(e){if(!this._model)return console.warn("Model not loaded yet!");const t=this.preprocessImage(e),s=this._model.predict(t).as1D(),r=s.argMax().dataSync()[0],a=s.max().dataSync()[0];return[this.characters[r],a]}}function me(n){const e=cv.boundingRect(n);return{w:e.width,h:e.height}}function ue(n){const e=cv.boundingRect(n);return{x:e.x,y:e.y}}function Po(n,e){const t=e.qcm_epsilon*cv.arcLength(n,!0),s=new cv.Mat;let r;cv.approxPolyDP(n,s,t,!0);const a=me(s);if(a.w>=e.qcm_min_width_shape&&a.h>=e.qcm_min_height_shape){const l=s.rows;if(1===l)r="LIGNE";else if(3===l)r="TRIANGLE";else if(4===l){const u=a.w/a.h;r=u>=.95&&u<=1.05?"CARRE":"RECTANGLE"}else r=void 0}return{nom:r,forme:s}}function Mo(n,e){let t=ue(n),s=ue(e);return t.y<s.y?-1:t.y>s.y?1:t.x-s.x}function Hh(n,e){let t=ue(n),s=ue(e);return t.x-s.x}function Lo(n,e){let t=ue(n),s=ue(e),r=me(n),a=me(e);return(s.x>=t.x&&s.x<=t.x+r.w||s.x+a.w>=t.x&&s.x+a.w<=t.x+r.w)&&(s.y>=t.y&&s.y<=t.y+r.h||s.y+a.h>=t.y&&s.y+a.h<=t.y+r.h)}function xo(n,e){let t=e[n],s=!1;return e.forEach((r,a)=>{n<a&&function Gh(n,e){return Lo(n,e)||Lo(e,n)}(t,r)&&(s=!0)}),s}function Bo(n,e){const t=function jh(n,e=[],t){const s=new cv.Mat;cv.threshold(n,s,245,255,cv.THRESH_BINARY);let r=new cv.MatVector,a=new cv.Mat;cv.findContours(s,r,a,cv.RETR_TREE,cv.CHAIN_APPROX_NONE);const l=[];for(let m=0;m<r.size();++m){const R=Po(r.get(m),t);e.includes(R.nom)&&l.push(R.forme)}l.sort(Mo);const u=[],c=[],d=[];return l.forEach(m=>{0===ue(m).x&&0===ue(m).y||(100*me(m).w/me(n).w+100*me(m).h/me(n).h)/2>80?c.push(m):d.push(m)}),d.forEach((m,M)=>{xo(M,d)?c.push(m):u.push(m)}),c.forEach(m=>{m.delete()}),u}(n,["CARRE","RECTANGLE"],e),s=[],r=[];return t.forEach(a=>{const l=me(a),u=ue(a);s.push(a),r.push(Wn(n,u,l))}),{cases:s,img_cases:r}}function Wn(n,e,t){let s=new cv.Mat,r=e.x,a=e.y,l=t.w,u=t.h;r<0&&(r=0),a<0&&(a=0),r+l>n.size().width&&(l=n.size().width-r),u+a>n.size().height&&(u=n.size().height-a);const c=new cv.Rect(r,a,l,u);return l<=0||u<=0?n:(s=n.roi(c),s)}function zo(n,e,t=new cv.Scalar(255,0,0,128),s=2){return e.forEach(r=>{const a=ue(r),l=me(r);let u=new cv.Point(a.x,a.y),c=new cv.Point(a.x+l.w,a.y+l.h);cv.rectangle(n,u,c,t,s,0)}),n}function ei(n){return 1-cv.countNonZero(n)/(n.rows*n.cols)}function Jh(n,e){return Math.abs(n-e)}function td(n,e){const t=new Array(n.length);for(let s=0;s<n.length;s++){let r=0,a=1;for(let l=0;l<e.length;l++){const u=Jh(n[s],e[l]);u<a&&(a=u,r=l)}t[s]=r}return t}function ed(n,e,t){const s=new Array(t).fill(0),r=new Array(t).fill(0);for(let a=0;a<n.length;a++){const l=e[a];r[l]++,s[l]+=n[a]}for(let a=0;a<t;a++)0!==r[a]&&(s[a]/=r[a]);return s}function Uo(n,e=100){let t=function qh(n){const e=[];return e.push(Math.min(...n)),e.push(Math.max(...n)),e}(n),s=[],r=!1,a=0;for(;!r&&a<e;){const l=td(n,t),u=ed(n,l,2);r=JSON.stringify(s)===JSON.stringify(l),s=l,t=u,a++}return{clusters:s,centroids:t}}function Fo(n,e){let t=n.centroids[0],s=n.centroids[1],r=[],a=[];n.clusters.forEach((d,m)=>{0===d?r.push(Math.abs(t-e[m])):a.push(Math.abs(s-e[m]))});let l=0;for(let d=0;d<r.length;d++)l+=r[d];r.length>0&&(l/=r.length);let u=0;for(let d=0;d<a.length;d++)u+=a[d];return a.length>0&&(u/=a.length),s-u-(t+l)}var Wo=o(82384),ko=o(78645),Ui=o(24036),nd=o(7551);let ur,Es,kn,Gi,Zi;class sd{sqliteWorkerport;ready;subjects=new Map;constructor(e){this.sqliteWorkerport=e;const t=new ko.x;this.subjects.set("0",t),this.ready=new Promise((s,r)=>{this.subjects.get("0")?.asObservable().subscribe(()=>{s()},()=>r())})}onmessage=e=>{const t=e.data;switch(t.msg){case"getFirstNonAlignImage":{const s=new TextDecoder("utf-8"),r=new Uint8Array(t.payload.value);t.payload.value=s.decode(r),this.subjects.get(t.uid)?.next(t.payload),this.subjects.get(t.uid)?.complete();break}case"getFirstAlignImage":{const s=new TextDecoder("utf-8"),r=new Uint8Array(t.payload.value);t.payload.value=s.decode(r),this.subjects.get(t.uid)?.next(t.payload),this.subjects.get(t.uid)?.complete();break}case"getFirstTemplate":{const s=new TextDecoder("utf-8"),r=new Uint8Array(t.payload.value);t.payload.value=s.decode(r),this.subjects.get(t.uid)?.next(t.payload),this.subjects.get(t.uid)?.complete();break}default:this.subjects.get(t.uid)?.next(t.payload),this.subjects.get(t.uid)?.complete()}};onerror=e=>{this.subjects.has(e.uid)&&(console.log("get error uid"),this.subjects.get(e.uid)?.error(e)),console.log(`error on service work: ${JSON.stringify(e)}`)};_dispatch(e,t,s){const r=(0,nd.Z)();this.ready.then(()=>{s?this.sqliteWorkerport.postMessage({msg:e,uid:r,payload:t},s):this.sqliteWorkerport.postMessage({msg:e,uid:r,payload:t})});const a=new ko.x;return this.subjects.set(r,a),this.ready=new Promise((l,u)=>{this.subjects.get(r)?.asObservable().subscribe(()=>{l()},()=>u())}),a.asObservable()}getFirstNonAlignImage(e,t){return(0,Ui.z)(this._dispatch("getFirstNonAlignImage",{examId:e,pageInscan:t}))}getFirstAlignImage(e,t){return(0,Ui.z)(this._dispatch("getFirstAlignImage",{examId:e,pageInscan:t}))}getFirstTemplate(e,t){return(0,Ui.z)(this._dispatch("getFirstTemplate",{examId:e,pageInscan:t}))}}function $o(n,e,t){return Fi.apply(this,arguments)}function Fi(){return(Fi=(0,b.Z)(function*(n,e,t){return t?(void 0===kn&&(kn=new Wo.z4),yield kn.getFirstTemplate(e,n)):yield Es.getFirstTemplate(e,n)})).apply(this,arguments)}function Ko(n,e,t,s){return Wi.apply(this,arguments)}function Wi(){return(Wi=(0,b.Z)(function*(n,e,t,s){return s?(void 0===kn&&(kn=new Wo.z4),n?yield kn.getFirstAlignImage(t,e):yield kn.getFirstNonAlignImage(t,e)):n?yield Es.getFirstAlignImage(t,e):yield Es.getFirstNonAlignImage(t,e)})).apply(this,arguments)}function rd(n,e){return"object"==typeof e&&null!==e&&"Map"===e.dataType?new Map(e.value):e}function ki(n){return $i.apply(this,arguments)}function $i(){return($i=(0,b.Z)(function*(n){const e=JSON.parse(n.value,rd),s=yield(yield fetch(e.pages)).blob(),r=yield createImageBitmap(s),l=new OffscreenCanvas(r.width,r.height).getContext("2d");return l.drawImage(r,0,0),l.getImageData(0,0,r.width,r.height)})).apply(this,arguments)}function $n(n,e,t){let s=e.width*n.width*t/1e5,r=e.height*n.height*t/1e5,a=e.xInit*n.width/1e5-(e.width*n.width*t/1e5-e.width*n.width/1e5)/2;a<0&&(s+=a,a=0);let l=e.yInit*n.height/1e5-(e.height*n.height*t/1e5-e.height*n.height/1e5)/2;l<0&&(r+=l,l=0);let u=new cv.Rect(a,l,s,r),c=new cv.Mat,d=cv.matFromImageData(n);return c=Qi(d,u),d.delete(),c}function Ki(){return(Ki=(0,b.Z)(function*(n){const e=n.payload;let t;if(t=e.template?yield $o(e.page,e.examId,e.indexDb):yield Ko(e.align,e.page,e.examId,e.indexDb),void 0!==t){const r=$n(yield ki(t),e.z,e.factor),l={image:en(r).data.buffer,page:e.page,width:r.size().width,height:r.size().height};ur.target.postMessage({msg:n.msg,payload:l,uid:n.uid},[l.image]),r.delete()}})).apply(this,arguments)}function Vi(){return(Vi=(0,b.Z)(function*(n){const e=n.payload;if(function od(n){return"pagesToAnalyze"in n}(e)){const t=[],s=[],r=new Map;for(let a of e.pagesToAnalyze){console.time("analysePage"),console.timeLog("analysePage","before getScan");const l=yield Ko(e.align,a,e.examId,e.indexDb);if(console.timeLog("analysePage","after getScan"),void 0!==l){console.timeLog("analysePage","before loadImage");const u=yield ki(l);console.timeLog("analysePage","after loadImage");let c,d,m,M=0;console.timeLog("analysePage","before cropZone"),e.nameZone&&(c=$n(u,e.nameZone,e.factor),M=e.nameZone.pageNumber),e.firstnameZone&&(d=$n(u,e.firstnameZone,e.factor),M=e.firstnameZone.pageNumber),e.ineZone&&(m=$n(u,e.ineZone,e.factor),M=e.ineZone.pageNumber),console.timeLog("analysePage","after cropZone");const R={page:a-M,resultPrediction:[]};let $,nt,q;if(c&&($=en(c).data.buffer,R.nameZoneW=c.size().width,R.nameZoneH=c.size().height,$&&t.push($)),d&&(nt=en(d).data.buffer,R.firstnameZoneW=d.size().width,R.firstnameZoneH=d.size().height,nt&&t.push(nt)),m&&(q=en(m).data.buffer,R.ineZoneW=m.size().width,R.ineZoneH=m.size().height,q&&t.push(q)),R.nameZone=$,R.firstnameZone=nt,R.ineZone=q,e.assist)try{console.timeLog("analysePage","before template load");const k=yield $o(e.pageTemplate,e.examId,e.indexDb);if(console.timeLog("analysePage","after template load"),void 0!==k){console.timeLog("analysePage","before template image load");const et=yield ki(k);let ht,gt,bt,Et,Nt,St;if(console.timeLog("analysePage","after template image load"),console.timeLog("analysePage","before cropZone template"),e.nameZone&&(ht=$n(et,e.nameZone,e.factor)),e.firstnameZone&&(gt=$n(et,e.firstnameZone,e.factor)),e.ineZone&&(bt=$n(et,e.ineZone,e.factor)),console.timeLog("analysePage","after cropZone template"),console.timeLog("analysePage","before doPredidction4zone name"),void 0!==c&&void 0!==ht&&(Et=yield Hi(!0,c,ht,e.preferences,e.looking4missing,e.removeHorizontal,e.debug),ht.delete(),Et.debug)){const Lt=en(Et.debug).data.buffer;Lt&&(t.push(Lt),R.nameZoneDebug=Lt),Et.debug.delete()}if(console.timeLog("analysePage","after doPredidction4zone name"),console.timeLog("analysePage","before doPredidction4zone firstname"),void 0!==d&&void 0!==gt&&(Nt=yield Hi(!0,d,gt,e.preferences,e.looking4missing,e.removeHorizontal,e.debug),gt.delete(),Nt.debug)){const Lt=en(Nt.debug).data.buffer;Lt&&(t.push(Lt),R.firstnameZoneDebug=Lt),Nt.debug.delete()}if(console.timeLog("analysePage","after doPredidction4zone firstname"),console.timeLog("analysePage","before doPredidction4zone ine"),void 0!==m&&void 0!==bt&&(St=yield Hi(!1,m,bt,e.preferences,e.looking4missing,e.removeHorizontal,e.debug),bt.delete(),St.debug)){const Lt=en(St.debug).data.buffer;Lt&&(t.push(Lt),R.ineZoneDebug=Lt),St.debug.delete()}if(console.timeLog("analysePage","after doPredidction4zone ine"),console.timeLog("analysePage","before computescore"),Et?.solution?.length>0&&Nt?.solution?.length>0){const Lt=Et.solution.length,Ut=Nt.solution.length,$t=e.candidates.filter(zt=>Math.abs(Lt-zt.name.length)<=2&&Math.abs(Ut-zt.firstname.length)<=2);r.set(R.page,new Map),$t.forEach(zt=>{const Qt={...zt},En=Math.abs(Lt-zt.name.length)+Math.abs(Ut-zt.firstname.length);Qt.score=1e3/Math.pow(2,En),Qt.proba=Vo(Qt,Et,Nt,St),r.get(R.page)?.set(Qt.id,Qt)});const Ft=Array.from(r.get(R.page).values()).sort((zt,Qt)=>Qt.proba*Qt.score-zt.proba*zt.score);let Xt=[];Xt=Ft.length>2?[Ft[0],Ft[1],Ft[2]]:Ft,R.resultPrediction=Xt}else if(Et?.solution?.length>0){const Lt=Et.solution.length,Ut=e.candidates.filter(Xt=>Math.abs(Lt-Xt.name.length)<=2);r.set(R.page,new Map),Ut.forEach(Xt=>{const zt={...Xt},Qt=Math.abs(Lt-Xt.name.length);zt.score=1e3/Math.pow(2,Qt),zt.proba=Vo(zt,Et,Nt,St),r.get(R.page)?.set(zt.id,zt)});const $t=Array.from(r.get(R.page).values()).sort((Xt,zt)=>zt.proba*zt.score-Xt.proba*Xt.score);let Ft=[];Ft=$t.length>2?[$t[0],$t[1],$t[2]]:$t,R.resultPrediction=Ft}console.timeLog("analysePage","after computescore")}}catch(k){console.error("could not perform name analysis",k);continue}s.push(R),c?.delete(),d?.delete(),m?.delete()}console.timeEnd("analysePage")}ur.target.postMessage({msg:n.msg,payload:s,uid:n.uid},t)}})).apply(this,arguments)}function ji(n,e,t){let s=0;for(let u=0;u<e.length;u++)n.substring(u,u+1).toLowerCase()===e[u][0].toLowerCase()?s+=e[u][1]:s+=t?(1-e[u][1])/35:(1-e[u][1])/9;e>0&&(s/=e.length);const r=n.trim(),a=function gd(n,e){let t=new Array(n.length+1);for(let s=0;s<=n.length;s++)t[s]=new Array(e.length+1);for(let s=0;s<=n.length;s++)t[s][0]=s;for(let s=0;s<=e.length;s++)t[0][s]=s;for(let s=1;s<=n.length;s++)for(let r=1;r<=e.length;r++)t[s][r]=n[s-1]===e[r-1]?t[s-1][r-1]:Math.min(t[s-1][r],t[s][r-1],t[s-1][r-1])+1;return t[n.length][e.length]}(r,e.map(u=>u[0]).join(""));return s-=s*a/Math.max(e.map(u=>u[0]).join("").length,r.length),s}function Vo(n,e,t,s){let r=0,a=0,l=0,u=0,c=0;return e?.solution?.length>0&&(r=ji(n.name,e.solution,!0),u+=1,c+=r),t?.solution?.length>0&&(a=ji(n.firstname,t.solution,!0),u+=1,c+=a),s?.solution?.length>0&&(l=ji(n.ine,s.solution,!1),u+=1,c+=l),u>0?c/u:0}function Hi(n,e,t,s,r,a,l){let u=new cv.Mat;cv.cvtColor(t,u,cv.COLOR_RGBA2GRAY,0);const c=function cd(n,e){const t=function Vh(n,e=[],t){const s=new cv.Mat;cv.threshold(n,s,248,255,cv.THRESH_BINARY);let r=new cv.MatVector,a=new cv.Mat;cv.findContours(s,r,a,cv.RETR_TREE,cv.CHAIN_APPROX_NONE);const l=[];for(let m=0;m<r.size();++m){const R=Po(r.get(m),t);e.includes(R.nom)&&l.push(R.forme)}l.sort(Mo);const u=[],c=[],d=[];return l.forEach(m=>{0===ue(m).x&&0===ue(m).y||(100*me(m).w/me(n).w+100*me(m).h/me(n).h)/2>80?c.push(m):d.push(m)}),d.forEach((m,M)=>{xo(M,d)?c.push(m):u.push(m)}),c.forEach(m=>{m.delete()}),u}(n,["CARRE","RECTANGLE"],e),s=[],r=[];return t.forEach(a=>{const l=me(a),u=ue(a);s.push(a),r.push(Wn(n,u,l))}),{cases:s,img_cases:r}}(u,s),d=c.cases.sort(Hh),m=[],M=[];for(let k=0;k<d.length;k++){const et=d[k],ht=me(et);M.push(ht);const gt=ue(et);m.push(gt)}for(let k=0;k<c.cases.length;k++)c.cases[k].delete();for(let k=0;k<c.img_cases.length;k++)c.img_cases[k].delete();const R=m.map(k=>k.x);let $=[];for(let k=0;k<m.length-1;k++)$.push(R[k+1]-R[k]);let nt=$.reduce((k,et)=>k+et,0)/$.length;$=$.filter(k=>k<1.1*nt),nt=$.reduce((k,et)=>k+et,0)/$.length;const q={w:M.map(k=>k.w).reduce((k,et)=>k+et,0)/M.length,h:M.map(k=>k.h).reduce((k,et)=>k+et,0)/M.length};return u.delete(),function pd(n,e,t,s,r,a,l,u){return Xi.apply(this,arguments)}(e,r,a,n,s,q,nt,l)}function en(n){const e=new cv.Mat,t=n.type()%8,s=t<=cv.CV_8S?1:t<=cv.CV_32S?1/256:255,r=t===cv.CV_8S||t===cv.CV_16S?128:0;switch(n.convertTo(e,cv.CV_8U,s,r),e.type()){case cv.CV_8UC1:cv.cvtColor(e,e,cv.COLOR_GRAY2RGBA);break;case cv.CV_8UC3:cv.cvtColor(e,e,cv.COLOR_RGB2RGBA);break;case cv.CV_8UC4:break;default:throw new Error("Bad number of channels (Source image must have 1, 3 or 4 channels)")}const a=new ImageData(new Uint8ClampedArray(e.data),e.cols,e.rows);return e.delete(),a}function Xi(){return(Xi=(0,b.Z)(function*(n,e,t,s,r,a,l,u){const c=function fd(n){return n?(void 0===Gi&&(Gi=new Ro(n)),Gi):(void 0===Zi&&(Zi=new Ro(n)),Zi)}(s);yield c.isWarmedUp;const d=function yd(n,e,t,s,r,a){const l=s.linelength,u=s.repairsize,c=s.dilatesize,d=s.morphsize,m=s.drawcontoursizeh,M=s.drawcontoursizev;let R=n.clone(),$=new cv.Mat;cv.cvtColor(n,$,cv.COLOR_BGR2GRAY,0);let nt=new cv.Mat;cv.threshold($,nt,0,255,cv.THRESH_BINARY_INV+cv.THRESH_OTSU);const q=new cv.Point(-1,-1);if(e){let It=new cv.Mat,le=new cv.Size(1,l),De=cv.getStructuringElement(cv.MORPH_RECT,le,q);cv.morphologyEx(nt,It,cv.MORPH_OPEN,De,q,2,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let Ze=new cv.MatVector,Xe=new cv.Mat;cv.findContours(It,Ze,Xe,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);let ye=new cv.Scalar(255,255,255);cv.drawContours(R,Ze,-1,ye,M);let un=new cv.Mat,hr=new cv.Size(l,1),vs=cv.getStructuringElement(cv.MORPH_RECT,hr,q),dr=new cv.Point(-1,-1);cv.morphologyEx(nt,un,cv.MORPH_OPEN,vs,dr,2,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let cn=new cv.MatVector,mr=new cv.Mat;cv.findContours(un,cn,mr,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);let ni=new cv.Scalar(255,255,255);cv.drawContours(R,cn,-1,ni,m),It.delete(),Ze.delete(),Xe.delete(),De.delete(),un.delete(),cn.delete(),mr.delete(),vs.delete()}let k=new cv.Size(u,u),et=cv.getStructuringElement(cv.MORPH_ELLIPSE,k,q),ht=new cv.Mat,bt=new cv.Mat.ones(n.rows,n.cols,cv.CV_8UC3);bt.setTo(new cv.Scalar(255,255,255)),cv.cvtColor(bt,bt,cv.COLOR_BGR2GRAY,0);let Et=new cv.Mat;cv.cvtColor(R,Et,cv.COLOR_BGR2GRAY,0);let Nt=new cv.Mat;cv.subtract(bt,Et,Nt,ht,-1);let St=new cv.Mat;cv.dilate(Nt,St,et,q,c,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let Lt=new cv.Mat,Ut=new cv.Mat;cv.bitwise_and(St,nt,Lt),cv.morphologyEx(Lt,Ut,cv.MORPH_CLOSE,et,q,d,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let $t=new cv.Mat;cv.bitwise_and(Ut,nt,$t);let Ft=new cv.Mat;cv.subtract(bt,$t,Ft,ht,-1);let Xt=new cv.MatVector,zt=new cv.Mat,Qt=new cv.Mat;cv.adaptiveThreshold(Ft,Qt,255,cv.ADAPTIVE_THRESH_GAUSSIAN_C,cv.THRESH_BINARY,3,2),cv.findContours(Qt,Xt,zt,cv.RETR_TREE,cv.CHAIN_APPROX_SIMPLE);const En=new Map;let Gt=[];for(let It=0;It<Xt.size();It++){let le=Xt.get(It),De=cv.boundingRect(le);(De.width>12||De.height>12)&&Gt.push(De)}Gt=Gt.filter(It=>Math.abs(It.width-r.w)/r.w<.8&&Math.abs(It.height-r.h)/r.h<.7),Gt.forEach(It=>{const le=It.width-r.w;le>0&&(It.x=It.x+le/2,It.width=r.w);const De=It.height-r.h;De>0&&(It.y=It.y+De/2,It.height=r.h)});let xe=jo(Gt),Ge=0;for(;null!==xe&&Ge<200;){Gt=Gt.filter(Ze=>Ze!==xe.toRemove1&&Ze!==xe.toRemove2);const It=xe.u,le=It.width-r.w;le>0&&(It.x=It.x+le/2,It.width=r.w);const De=It.height-r.h;De>0&&(It.y=It.y+De/2,It.height=r.h),Gt.push(It),xe=jo(Gt),Ge+=1}Gt.forEach(It=>{It.x=It.x-2,It.width=It.width+4,It.y=It.y-2,It.height=It.height+4}),Gt.sort((It,le)=>It.x<le.x?-1:1);const nn=[];if(Gt.length>2)for(let It=0;It<Gt.length-1;It++)Gt[It+1].x-Gt[It].x<1.5*a||Gt[It+1].x-Gt[It].x<2.5*a||nn.push(It+1);Gt=Gt.filter((It,le)=>!nn.includes(le));const vn=[];if(t&&Gt.length>1){const It=r.w;let le=0,De=0,Ze=800;const Xe=[];for(let ye=0;ye<Gt.length-1;ye++)Gt[ye+1].x-Gt[ye].x>2*It&&Xe.push(ye),Gt[ye].y<Ze&&(Ze=Gt[ye].y),Gt[ye].height>le&&(le=Gt[ye].height),Gt[ye].width>De&&(De=Gt[ye].width);Xe.forEach(ye=>{let hr=new cv.Rect(Gt[ye].x+a,Ze,De,le);vn.push(hr)})}Gt=Gt.concat(vn),Gt.sort((It,le)=>It.x<le.x?-1:1),Gt.forEach(It=>{let le=new cv.Scalar(0,0,0),De=new cv.Point(It.x,It.y),Ze=new cv.Point(It.x+It.width,It.y+It.height),Xe=new cv.Mat,ye=new cv.Mat,un=new cv.Mat,hr=new cv.Scalar(255,255,255,255);Xe=Qi(Ft,It);const vs=r.w/r.h,dr=Xe.size().width/Xe.size().height;let cn=new cv.Size(28,28);if(vs<dr){let Yi=Math.floor(26*vs/dr);cn=new cv.Size(26,Yi+1)}else{let Yi=Math.floor(26*dr/vs);cn=new cv.Size(Yi+1,26)}const mr=(28-cn.height)/2,ni=(28-cn.width)/2;cv.resize(Xe,ye,cn,0,0,cv.INTER_AREA);let Ho=ye.clone();cv.copyMakeBorder(Ho,un,mr,mr,ni,ni,cv.BORDER_CONSTANT,hr),En.set(It,un),Ho.delete(),Xe.delete(),ye.delete(),cv.rectangle(Ft,De,Ze,le,2,cv.LINE_AA,0)}),$.delete(),nt.delete(),Qt.delete(),et.delete(),ht.delete(),bt.delete(),Et.delete(),Nt.delete(),St.delete(),R.delete(),Lt.delete(),Ut.delete(),$t.delete(),Xt.delete(),zt.delete();let cr=[...En];return cr.sort((It,le)=>It[0].x<le[0].x?-1:1),{letter:cr,invert_final:Ft}}(n,t,e,r,a,l),m=[];for(let M=0;M<d.letter.length;M++){let R=c.predict(en(d.letter[M][1]));s&&("1"===R[0]&&(R[0]="i"),"0"===R[0]&&(R[0]="o"),"5"===R[0]&&(R[0]="s"),"3"===R[0]&&(R[0]="b"),"9"===R[0]&&(R[0]="g")),m.push(R)}for(let M=0;M<d.letter.length;M++)d.letter[M][1].delete();return u?{debug:d.invert_final,solution:m}:(d.invert_final.delete(),{solution:m})})).apply(this,arguments)}function Qi(n,e,t){const s=n.size().width,r=n.size().height;return e.x<0&&(e.x=0),e.y<0&&(e.y=0),e.x+e.width>s&&(e.width=s-e.x),e.y+e.height>r&&(e.height=r-e.y),n.roi(e)}function _d(n,e){const t=Math.min(n.x,e.x),s=Math.min(n.y,e.y),r=Math.max(n.x+n.width,e.x+e.width),a=Math.max(n.y+n.height,e.y+e.height);return new cv.Rect(t,s,r-t,a-s)}function Ed(n,e){let t=e,s=n,r=n,a=e;n.x>e.x&&(t=n,s=e),n.y>e.y&&(r=e,a=n),n.right=n.x+n.width,e.right=e.x+e.width,n.bottom=n.y+n.height,e.bottom=e.y+e.height;let l=e,u=n,c=e,d=n;return n.right>e.right&&(l=n,u=e),n.bottom>e.bottom&&(c=n,d=e),t.x<s.right&&a.y>r.y+r.height?new cv.Rect(s.x,d.y,l.right-s.x,c.bottom-r.y):t.x>s.x+s.width+5||a.y>r.y+r.height?null:new cv.Rect(s.x,d.y,l.right-s.x,c.bottom-r.y)}function jo(n){for(let e=0;e<n.length-1;e++){const t=n[e];for(let s=e+1;s<n.length;s++){const r=n[s];if(null!==Ed(t,r))return{u:_d(t,r),toRemove1:t,toRemove2:r}}}return null}addEventListener("message",n=>{switch(n.data.msg){case"hello":postMessage({msg:`worker response to ${n.data.msg}`,uid:n.data.uid});break;case"shareWorker":{const e=n.data.port;Es=new sd(e),e.onmessage=Es.onmessage,e.onerror=Es.onerror;break}case"load":{ur=n;const e=self;e.Module={scriptUrl:"content/opencv/5/opencv.js",onRuntimeInitialized(){cv.then(s=>{cv=s,s.ready.then(()=>postMessage({msg:"opencvready",uid:n.data.uid}))})}};let t="";n.data.payload.fronturl&&(t=n.data.payload.fronturl),e.importScripts(e.Module.scriptUrl),e.importScripts(t+"content/tfjs/tf-core.es2017.min.js"),e.importScripts(t+"content/tfjs/dist/tf-backend-wasm.es2017.js"),tf.wasm.setWasmPaths(t+"content/tfjs/dist/");break}case"imageCrop":return function md(n){let e=new cv.Rect(n.payload.x,n.payload.y,n.payload.width,n.payload.height),t=new cv.Mat;const s=new ImageData(new Uint8ClampedArray(n.payload.image),n.payload.imageWidth,n.payload.imageHeight);let r=cv.matFromImageData(s);t=Qi(r,e);const a=en(t).data.buffer;ur.target.postMessage({msg:n.msg,payload:a,uid:n.uid},[a]),t.delete(),r.delete()}(n.data);case"doPredictions":return function ld(n){(function ud(n){return Vi.apply(this,arguments)})(n).then(()=>{}).catch(e=>{console.error(e)})}(n.data);case"imageCropFromZone":return function id(n){!function ad(n){Ki.apply(this,arguments)}(n)}(n.data);case"groupImagePerContoursLength":return function hd(n){0===n.payload.images.length&&postMessage({msg:n.msg,payload:[],uid:n.uid});const e=n.payload.images[n.payload.images.length-1].studentIndex+1,s=n.payload.nbrCluster,a=new cv.TermCriteria(cv.TermCriteria_EPS+cv.TermCriteria_MAX_ITER,1e3,.001),l=[];for(let $=0;$<e;$++){let nt=0,q=0;const k=n.payload.images.length/e;for(let et=0;et<k;et++){const ht=new ImageData(new Uint8ClampedArray(n.payload.images[$*k+et].image),n.payload.images[$*k+et].width,n.payload.images[$*k+et].height);let gt=cv.matFromImageData(ht);const bt=new cv.Mat;cv.cvtColor(gt,bt,cv.COLOR_RGBA2GRAY),cv.threshold(bt,bt,0,255,cv.THRESH_BINARY_INV+cv.THRESH_OTSU);const Et=new cv.Mat;cv.Canny(bt,Et,100,200,3);const Ut=new cv.MatVector,$t=new cv.Mat;cv.findContours(Et,Ut,$t,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);for(let Ft=0;Ft<Ut.size();Ft++){const Xt=Ut.get(Ft),zt=cv.arcLength(Xt,!0);zt>3&&(nt+=zt,q+=1)}gt.delete(),bt.delete(),Et.delete(),Ut.delete(),$t.delete()}l.push(nt)}const u=new cv.Mat,c=new cv.Mat,d=cv.matFromArray(l.length,1,cv.CV_32F,l);cv.kmeans(d,s,u,a,5,cv.KMEANS_PP_CENTERS,c);let m=[];for(let $=0;$<s;$++)m.push(c.data32F[$]);m.sort(function($,nt){return $-nt});let M=new Map;for(let $=0;$<s;$++)M.set(c.data32F.indexOf(m[$]),$);let R=[];for(let $=0;$<e;$++)R.push(M.get(u.data32S[$]));postMessage({msg:n.msg,payload:R,uid:n.uid}),u.delete(),c.delete(),d.delete()}(n.data);case"groupImagePerContoursLengthAndNbreContours":return function dd(n){0===n.payload.images.length&&postMessage({msg:n.msg,payload:[],uid:n.uid});const e=n.payload.images[n.payload.images.length-1].studentIndex+1,s=n.payload.nbrCluster,a=new cv.TermCriteria(cv.TermCriteria_EPS+cv.TermCriteria_MAX_ITER,1e3,.001),l=[];for(let $=0;$<e;$++){let nt=0,q=0;const k=n.payload.images.length/e;for(let et=0;et<k;et++){const ht=new ImageData(new Uint8ClampedArray(n.payload.images[$*k+et].image),n.payload.images[$*k+et].width,n.payload.images[$*k+et].height);let gt=cv.matFromImageData(ht);const bt=new cv.Mat;cv.cvtColor(gt,bt,cv.COLOR_RGBA2GRAY),cv.threshold(bt,bt,0,255,cv.THRESH_BINARY_INV+cv.THRESH_OTSU);const Et=new cv.Mat;cv.Canny(bt,Et,100,200,3);const Ut=new cv.MatVector,$t=new cv.Mat;cv.findContours(Et,Ut,$t,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);for(let Ft=0;Ft<Ut.size();Ft++){const Xt=Ut.get(Ft),zt=cv.arcLength(Xt,!0);zt>3&&(nt+=zt,q+=1)}gt.delete(),bt.delete(),Et.delete(),Ut.delete(),$t.delete()}l.push(nt),l.push(q)}const u=new cv.Mat,c=new cv.Mat,d=cv.matFromArray(l.length/2,2,cv.CV_32F,l);cv.kmeans(d,s,u,a,5,cv.KMEANS_PP_CENTERS,c);let m=[];for(let $=0;$<s;$++)m.push(c.data32F[2*$+1]);m.sort(function($,nt){return $-nt});let M=new Map;for(let $=0;$<s;$++)M.set((c.data32F.indexOf(m[$])-1)/2,$);let R=[];for(let $=0;$<e;$++)R.push(M.get(u.data32S[$]));postMessage({msg:n.msg,payload:R,uid:n.uid}),u.delete(),c.delete(),d.delete()}(n.data);case"qcmresolution":return function $h(n){const e={solutions:[]};let t=cv.matFromImageData(n.payload.imageTemplate),s=new cv.Mat;cv.cvtColor(t,s,cv.COLOR_RGBA2GRAY,0);const r=Bo(s,n.payload.preference);n.payload.pages?.forEach((a,l)=>{let u=new cv.Mat,c=cv.matFromImageData(a.imageInput),d=new cv.Mat,m=new cv.Size(t.size().width,t.size().height);cv.resize(c,d,m,0,0,cv.INTER_AREA),new cv.Mat(t.rows,t.cols,t.type(),[255,255,255,255]);const R=r.cases.map(gt=>cv.boundingRect(gt));let $,nt;if(R.length>0){const gt=Math.min(...R.map(Qt=>Qt.x)),bt=Math.min(...R.map(Qt=>Qt.y)),Et=Math.max(...R.map(Qt=>Qt.x+Qt.width)),Nt=Math.max(...R.map(Qt=>Qt.y+Qt.height));let St=Wn(d,{x:gt,y:bt},{w:Et-gt,h:Nt-bt}),Lt=new cv.Mat,Ut=new cv.Mat;const $t=new cv.Scalar(255,255,255,255),Ft=Math.min(5,gt,t.size().width-Et,bt,t.size().height-Nt);cv.copyMakeBorder(St,Lt,Ft,Ft,Ft,Ft,cv.BORDER_CONSTANT,$t);let Xt=Lt.clone();cv.copyMakeBorder(Xt,Ut,bt-Ft,d.size().height-Nt-Ft,gt-Ft,d.size().width-Et-Ft,cv.BORDER_CONSTANT,$t),cv.cvtColor(Ut,u,cv.COLOR_RGBA2GRAY,0);const zt={...n.payload.preference};zt.qcm_epsilon=Math.max(.05,zt.qcm_epsilon),zt.qcm_differences_avec_case_blanche=Math.min(.1,zt.qcm_differences_avec_case_blanche),$=Bo(u,zt),St.delete(),Lt.delete(),Xt.delete(),Ut.delete()}if(void 0!==$&&void 0!==$.cases&&$.cases.length>0){const gt=function Xh(n,e){const t=[];return n.cases.forEach(s=>{let a,r=500;if(e.cases.forEach(l=>{const u=function Yh(n,e){const t=cv.boundingRect(n),s=cv.boundingRect(e);let r=t.x+t.width/2,a=t.y+t.height/2,l=s.x+s.width/2,u=s.y+s.height/2;return Math.sqrt((r-l)*(r-l)+(a-u)*(a-u))}(s,l);r>u&&u<25&&(r=u,a=l)}),void 0!==a){const l=ue(s),u=ue(a),c=me(s),d=me(a);t.push({x:l.x-u.x,y:l.y-u.y,deltaw:c.w-d.w,deltah:c.h-d.h})}}),function Kh(n){if(n.length>0){const e=Math.min(...n.map(s=>Math.abs(s.deltaw)*Math.abs(s.deltaw)+Math.abs(s.deltah)*Math.abs(s.deltah)+Math.abs(s.x)+Math.abs(s.y))),t=n.filter(s=>Math.abs(s.deltaw)*Math.abs(s.deltaw)+Math.abs(s.deltah)*Math.abs(s.deltah)+Math.abs(s.x)+Math.abs(s.y)===e)[0];return{x:t.x,y:t.y}}return{x:0,y:0}}(t)}($,r);nt=function Qh(n,e){let t=new cv.Mat;if(0!==e.x||0!==e.y){let s=cv.matFromArray(2,3,cv.CV_64FC1,[1,0,-e.x,0,1,-e.y]),r=new cv.Size(n.cols,n.rows);return cv.warpAffine(n,t,s,r,cv.INTER_LINEAR,cv.BORDER_CONSTANT,new cv.Scalar),t}return n}(d,gt)}else nt=d;const q={...n.payload.preference};q.qcm_differences_avec_case_blanche=Math.max(.1,q.qcm_differences_avec_case_blanche);let k=function Zh(n,e,t,s){const r=[],a=[];let l=new Map;const u=new Map,c=new Map,d=new cv.Mat;cv.cvtColor(e,d,cv.COLOR_RGBA2GRAY,0);let m=new cv.Mat,M=new cv.Mat;cv.adaptiveThreshold(d,M,255,cv.ADAPTIVE_THRESH_GAUSSIAN_C,cv.THRESH_BINARY,11,2),cv.threshold(d,m,0,255,cv.THRESH_BINARY+cv.THRESH_OTSU);const R=new cv.Mat;cv.cvtColor(t,R,cv.COLOR_RGBA2GRAY,0);let $=new cv.Mat,nt=new cv.Mat;cv.threshold(R,$,0,255,cv.THRESH_BINARY+cv.THRESH_OTSU),cv.adaptiveThreshold(R,nt,255,cv.ADAPTIVE_THRESH_GAUSSIAN_C,cv.THRESH_BINARY,11,2);for(const[Nt,St]of n.cases.entries()){const Lt=Wn(m,ue(St),me(St)),Ut=ei(Lt);u.set(Nt,Ut);const $t=Wn(M,ue(St),me(St)),Ft=ei($t);c.set(Nt,Ft),Lt.delete(),$t.delete()}d.delete(),m.delete(),M.delete();for(const[Nt,St]of n.cases.entries()){const Lt=Wn($,ue(St),me(St)),Ut=Wn(nt,ue(St),me(St)),$t=ei(Lt),Ft=ei(Ut);let Xt=$t-u.get(Nt),zt=Ft-c.get(Nt);Xt<0&&(Xt=0),zt<0&&(Xt=0),l.set(Nt,{prediction:Xt,predictionAdaptative:zt}),Lt.delete(),Ut.delete()}const q=Array.from(l.values()).map(Nt=>Nt.prediction),k=Array.from(l.values()).map(Nt=>Nt.predictionAdaptative),et=Uo(q,100),ht=Uo(k,100),gt=Fo(et,q),bt=Fo(ht,k),Et=gt>bt?gt:bt;for(const[Nt,St]of n.cases.entries()){const Lt=l.get(Nt),Ut=gt>bt?Lt.prediction:Lt.predictionAdaptative;1===(gt>bt?et:ht).clusters[Nt]&&Et>s.qcm_differences_avec_case_blanche?(l.set(Nt,{verdict:!0,prediction:Ut}),cv.putText(t,""+Ut.toFixed(2),{x:ue(St).x+15,y:ue(St).y+10},cv.FONT_HERSHEY_COMPLEX,.5,new cv.Scalar(255,0,0,128),1),r.push(St)):(l.set(Nt,{verdict:!1,prediction:Ut}),cv.putText(t,""+Ut.toFixed(2),{x:ue(St).x+15,y:ue(St).y+10},cv.FONT_HERSHEY_COMPLEX,.33,new cv.Scalar(255,0,0,128),1),a.push(St))}return R.delete(),$.delete(),nt.delete(),zo(t,r,new cv.Scalar(0,255,0,128),2),zo(t,a,new cv.Scalar(0,0,255,128),2),l}(r,t,nt,q),et=function kh(n){const e=new cv.Mat,t=n.type()%8,s=t<=cv.CV_8S?1:t<=cv.CV_32S?1/256:255,r=t===cv.CV_8S||t===cv.CV_16S?128:0;switch(n.convertTo(e,cv.CV_8U,s,r),e.type()){case cv.CV_8UC1:cv.cvtColor(e,e,cv.COLOR_GRAY2RGBA);break;case cv.CV_8UC3:cv.cvtColor(e,e,cv.COLOR_RGB2RGBA);break;case cv.CV_8UC4:break;default:throw new Error("Bad number of channels (Source image must have 1, 3 or 4 channels)")}const a=new ImageData(new Uint8ClampedArray(e.data),e.cols,e.rows);return e.delete(),a}(nt),ht=[];k.forEach((gt,bt)=>{gt.verdict&&ht.push(String.fromCharCode(97+bt))}),e.solutions?.push({imageSolution:et,numero:l,solution:ht.join("&")}),u.delete(),d.delete(),c.delete(),nt!==d&&nt.delete(),$.cases.forEach(gt=>gt.delete()),$.img_cases.forEach(gt=>gt.delete())}),t.delete(),s.delete(),r.img_cases.forEach(a=>a.delete()),postMessage({msg:n.msg,payload:e,uid:n.uid})}(n.data);case"getLinesFromImage":return function vd(n){const t=cv.matFromImageData(n.payload.image),s=new cv.Mat;cv.cvtColor(t,s,cv.COLOR_RGBA2GRAY),t.delete();const r=new cv.Mat;cv.threshold(s,r,0,255,cv.THRESH_BINARY_INV+cv.THRESH_OTSU);const a=[];for(let ht=0;ht<r.rows;ht++){let gt=0;const bt=r.ucharPtr(ht);for(let Et=0;Et<r.cols;Et++)gt+=bt[Et];a.push(gt)}const l=.05*Math.max(...a),u=[];let c=!1,d=0;a.forEach((ht,gt)=>{ht>l&&!c?(d=gt,c=!0):ht<=l&&c&&(u.push([d,gt]),c=!1)});const m=[];u.forEach(([ht,gt])=>{if(gt-ht<2)return;const bt=m[m.length-1];bt&&ht-bt[1]<=2?m[m.length-1][1]=gt:m.push([ht,gt])});const R=[];m.forEach(([ht,gt])=>{if(a.slice(ht,gt).reduce((Ut,$t)=>Ut+$t,0)<1e3)return;const Et=Math.max(0,ht-8),Nt=Math.min(s.rows,gt+8),St=new cv.Rect(0,Et,s.cols,Nt-Et),Lt=s.roi(St).clone();R.push(Lt)}),s.delete(),r.delete();const nt={},q=[],k=[],et=R.map(ht=>{const gt=en(ht);return q.push(ht.size().width),k.push(ht.size().height),ht.delete(),gt.data.buffer});nt.linesbase64=et,nt.widths=q,nt.heights=k,ur.target.postMessage({msg:n.msg,payload:nt,uid:n.uid},nt.linesbase64)}(n.data)}})},47846:(rt,H,o)=>{"use strict";o.d(H,{EE:()=>A,JP:()=>f});var p=o(30003),P=o(89450),I=o(9642);const f=(0,P.b)((_,C)=>Math.floor(_/C)),v=(0,I.j)(p.jeX,f,null,"int32"),A={kernelName:p.jeX,backendName:"cpu",kernelFunc:v}},4376:(rt,H,o)=>{"use strict";o.d(H,{Hz:()=>f,MS:()=>A});var p=o(30003),P=o(89450),I=o(9642);const f=(0,P.b)((_,C)=>{const S=_-C;return S*S}),v=(0,I.j)(p._tC,f),A={kernelName:p._tC,backendName:"cpu",kernelFunc:v}},98669:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{addImpl:()=>P.EH,bincountImpl:()=>I.W,bincountReduceImpl:()=>I.i,bitwiseAndImpl:()=>f.nv,castImpl:()=>v.sJ,ceilImpl:()=>A.__,concatImpl:()=>_.j,equalImpl:()=>C.tW,expImpl:()=>S.Ro,expm1Impl:()=>L.OF,floorDivImpl:()=>N.JP,floorImpl:()=>O.r6,gatherNdImpl:()=>B.m,gatherV2Impl:()=>z.i,greaterEqualImpl:()=>U.HL,greaterImpl:()=>V.o,lessEqualImpl:()=>T.lx,lessImpl:()=>E.rO,linSpaceImpl:()=>K.b,logImpl:()=>it.vX,maxImpl:()=>J.B,maximumImpl:()=>y.wS,minimumImpl:()=>F.vP,multiplyImpl:()=>tt.$3,negImpl:()=>at.uC,notEqualImpl:()=>j.Gj,prodImpl:()=>w.Qg,raggedGatherImpl:()=>x.c,raggedRangeImpl:()=>b.S,raggedTensorToTensorImpl:()=>i.p,rangeImpl:()=>G.b,rsqrtImpl:()=>ft.zd,scatterImpl:()=>Y.N,sigmoidImpl:()=>lt.VY,simpleAbsImpl:()=>p.bk,sliceImpl:()=>st.rT,sparseFillEmptyRowsImpl:()=>Pt.c,sparseReshapeImpl:()=>Wt.U,sparseSegmentReductionImpl:()=>Q.V,sqrtImpl:()=>ct.zT,squaredDifferenceImpl:()=>_t.Hz,staticRegexReplaceImpl:()=>ut.P,stridedSliceImpl:()=>At.t,stringNGramsImpl:()=>Ot.A,stringSplitImpl:()=>Mt.Q,stringToHashBucketFastImpl:()=>xt.h,subImpl:()=>Ct.VY,tileImpl:()=>ie.R,topKImpl:()=>ee.W,transposeImpl:()=>Yt.H,uniqueImpl:()=>mt.S});var p=o(53777),P=o(76931),I=o(19569),f=o(38642),v=o(21928),A=o(75079),_=o(39971),C=o(75190),S=o(622),L=o(27166),O=o(1471),N=o(47846),B=o(52465),z=o(52697),V=o(4730),U=o(47310),E=o(2339),T=o(50033),K=o(77142),it=o(46723),J=o(7727),y=o(46160),F=o(28170),tt=o(37985),at=o(19994),j=o(47555),w=o(12585),x=o(86134),b=o(20832),i=o(50820),G=o(26229),ft=o(41509),Y=o(32529),lt=o(42250),st=o(45006),Pt=o(5483),Wt=o(59912),Q=o(80391),ct=o(6769),_t=o(4376),ut=o(26893),At=o(25549),Ot=o(23118),Mt=o(6482),xt=o(74105),Ct=o(51981),ie=o(91692),ee=o(39942),Yt=o(8385),mt=o(50705)},11230:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{bindVertexProgramAttributeStreams:()=>K,createBufferFromOutputTexture:()=>y,createFloat16MatrixTexture:()=>N,createFloat16PackedMatrixTexture:()=>T,createFloat32MatrixTexture:()=>L,createIndexBuffer:()=>_,createPackedMatrixTexture:()=>U,createUnsignedBytesMatrixTexture:()=>z,createVertexBuffer:()=>A,createVertexShader:()=>v,downloadByteEncodedFloatMatrixFromOutputTexture:()=>tt,downloadFloat32MatrixFromBuffer:()=>F,downloadMatrixFromPackedOutputTexture:()=>j,downloadPackedMatrixFromBuffer:()=>at,getInternalFormatForFloat16MatrixTexture:()=>O,getInternalFormatForFloat16PackedMatrixTexture:()=>E,getInternalFormatForFloat32MatrixTexture:()=>S,getInternalFormatForPackedMatrixTexture:()=>V,getInternalFormatForUnsignedBytesMatrixTexture:()=>B,uploadDenseMatrixToTexture:()=>it,uploadPixelDataToTexture:()=>J});var p=o(30003),P=o(99100),I=o(20215),f=o(63076);function v(w){const x=(0,P.A)();return f.createVertexShader(w,`${x.version}\n    precision highp float;\n    ${x.attribute} vec3 clipSpacePos;\n    ${x.attribute} vec2 uv;\n    ${x.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function A(w){const x=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return f.createStaticVertexBuffer(w,x)}function _(w){const x=new Uint16Array([0,1,2,2,1,3]);return f.createStaticIndexBuffer(w,x)}function C(w,x,b,i,G,ft){f.validateTextureSize(x,b);const Y=f.createTexture(w),lt=w.TEXTURE_2D;return f.callAndCheck(w,()=>w.bindTexture(lt,Y)),f.callAndCheck(w,()=>w.texParameteri(lt,w.TEXTURE_WRAP_S,w.CLAMP_TO_EDGE)),f.callAndCheck(w,()=>w.texParameteri(lt,w.TEXTURE_WRAP_T,w.CLAMP_TO_EDGE)),f.callAndCheck(w,()=>w.texParameteri(lt,w.TEXTURE_MIN_FILTER,w.NEAREST)),f.callAndCheck(w,()=>w.texParameteri(lt,w.TEXTURE_MAG_FILTER,w.NEAREST)),1===(0,p.OBj)().getNumber("WEBGL_VERSION")?f.callAndCheck(w,()=>w.texImage2D(lt,0,i,x,b,0,G,ft,null)):f.callAndCheck(w,()=>w.texStorage2D(lt,1,i,x,b)),f.callAndCheck(w,()=>w.bindTexture(w.TEXTURE_2D,null)),{texture:Y,texShape:[b,x]}}function S(w){return w.internalFormatFloat}function L(w,x,b,i){const[G,ft]=I.kk(x,b);return C(w,G,ft,S(i),i.textureFormatFloat,w.FLOAT)}function O(w){return w.internalFormatHalfFloat}function N(w,x,b,i){const[G,ft]=I.kk(x,b);return C(w,G,ft,O(i),i.textureFormatFloat,i.textureTypeHalfFloat)}function B(w){return w.downloadTextureFormat}function z(w,x,b,i){const[G,ft]=I.kk(x,b);return C(w,G,ft,B(i),w.RGBA,w.UNSIGNED_BYTE)}function V(w){return w.internalFormatPackedFloat}function U(w,x,b,i){const[G,ft]=I.qe(x,b);return C(w,G,ft,V(i),w.RGBA,w.FLOAT)}function E(w){return w.internalFormatPackedHalfFloat}function T(w,x,b,i){const[G,ft]=I.qe(x,b);return C(w,G,ft,E(i),w.RGBA,i.textureTypeHalfFloat)}function K(w,x,b){return f.callAndCheck(w,()=>w.bindBuffer(w.ARRAY_BUFFER,b)),f.bindVertexBufferToProgramAttribute(w,x,"clipSpacePos",b,3,20,0)&&f.bindVertexBufferToProgramAttribute(w,x,"uv",b,2,20,12)}function it(w,x,b,i,G,ft){let Y,lt,st;f.callAndCheck(w,()=>w.bindTexture(w.TEXTURE_2D,x)),G instanceof Uint8Array?(Y=new Uint8Array(b*i*4),lt=w.UNSIGNED_BYTE,st=w.RGBA):(Y=new Float32Array(b*i*4),lt=w.FLOAT,st=ft.internalFormatPackedFloat),Y.set(G),2===(0,p.OBj)().getNumber("WEBGL_VERSION")?f.callAndCheck(w,()=>w.texSubImage2D(w.TEXTURE_2D,0,0,0,b,i,w.RGBA,lt,Y)):f.callAndCheck(w,()=>w.texImage2D(w.TEXTURE_2D,0,st,b,i,0,w.RGBA,lt,Y)),f.callAndCheck(w,()=>w.bindTexture(w.TEXTURE_2D,null))}function J(w,x,b){f.callAndCheck(w,()=>w.bindTexture(w.TEXTURE_2D,x)),b.data instanceof Uint8Array?2===(0,p.OBj)().getNumber("WEBGL_VERSION")?f.callAndCheck(w,()=>w.texSubImage2D(w.TEXTURE_2D,0,0,0,b.width,b.height,w.RGBA,w.UNSIGNED_BYTE,b.data)):f.callAndCheck(w,()=>w.texImage2D(w.TEXTURE_2D,0,w.RGBA,b.width,b.height,0,w.RGBA,w.UNSIGNED_BYTE,b.data)):2===(0,p.OBj)().getNumber("WEBGL_VERSION")?f.callAndCheck(w,()=>w.texSubImage2D(w.TEXTURE_2D,0,0,0,w.RGBA,w.UNSIGNED_BYTE,b)):f.callAndCheck(w,()=>w.texImage2D(w.TEXTURE_2D,0,w.RGBA,w.RGBA,w.UNSIGNED_BYTE,b)),f.callAndCheck(w,()=>w.bindTexture(w.TEXTURE_2D,null))}function y(w,x,b,i){const G=w.createBuffer();f.callAndCheck(w,()=>w.bindBuffer(w.PIXEL_PACK_BUFFER,G));const lt=16*x*b;return f.callAndCheck(w,()=>w.bufferData(w.PIXEL_PACK_BUFFER,lt,w.STREAM_READ)),f.callAndCheck(w,()=>w.readPixels(0,0,b,x,w.RGBA,w.FLOAT,0)),f.callAndCheck(w,()=>w.bindBuffer(w.PIXEL_PACK_BUFFER,null)),G}function F(w,x,b){const i=w,G=new Float32Array(b);return i.bindBuffer(i.PIXEL_PACK_BUFFER,x),i.getBufferSubData(i.PIXEL_PACK_BUFFER,0,G),i.bindBuffer(i.PIXEL_PACK_BUFFER,null),G}function tt(w,x,b,i){const[G,ft]=I.kk(x,b),lt=new Uint8Array(I.yb(x*b,4));return f.callAndCheck(w,()=>w.readPixels(0,0,G,ft,i.downloadTextureFormat,w.UNSIGNED_BYTE,lt)),new Float32Array(lt.buffer)}function at(w,x,b,i,G,ft,Y,lt){const st=w,Pt=new Float32Array(I.Se(ft,Y));return st.bindBuffer(st.PIXEL_PACK_BUFFER,x),st.getBufferSubData(st.PIXEL_PACK_BUFFER,0,Pt),st.bindBuffer(st.PIXEL_PACK_BUFFER,null),Pt}function j(w,x,b){const i=new Float32Array(x*b*4);return f.callAndCheck(w,()=>w.readPixels(0,0,b,x,w.RGBA,w.FLOAT,i)),i}},63076:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{assertNotComplex:()=>Qe,bindCanvasToFramebuffer:()=>i,bindColorTextureToFramebuffer:()=>G,bindTextureToProgramUniformSampler:()=>b,bindTextureUnit:()=>at,bindVertexBufferToProgramAttribute:()=>tt,callAndCheck:()=>f,canBeRepresented:()=>C,createFragmentShader:()=>N,createFramebuffer:()=>F,createProgram:()=>V,createStaticIndexBuffer:()=>K,createStaticVertexBuffer:()=>T,createTexture:()=>J,createVertexShader:()=>O,getBatchDim:()=>Wt,getExtensionOrThrow:()=>L,getFramebufferErrorMessage:()=>lt,getMaxTexturesInShader:()=>ee,getNumChannels:()=>it,getProgramUniformLocation:()=>x,getProgramUniformLocationOrThrow:()=>w,getRowsCols:()=>Q,getShapeAs3D:()=>ct,getTextureShapeFromLogicalShape:()=>_t,getWebGLDisjointQueryTimerVersion:()=>Yt,getWebGLErrorMessage:()=>S,getWebGLMaxTextureSize:()=>xt,hasExtension:()=>mt,isCapableOfRenderingToFloatTexture:()=>_e,isDownloadFloatTextureEnabled:()=>Be,isReshapeFree:()=>At,isWebGLFenceEnabled:()=>Ne,isWebGLVersionEnabled:()=>Ae,linkProgram:()=>U,logShaderSourceAndInfoLog:()=>z,resetMaxTextureSize:()=>Ct,resetMaxTexturesInShader:()=>ie,unbindColorTextureFromFramebuffer:()=>ft,unbindTextureUnit:()=>j,validateFramebuffer:()=>Y,validateProgram:()=>E,validateTextureSize:()=>y});var p=o(30003),P=o(88377),I=o(20215);function f(g,ot){const pt=ot();return(0,p.OBj)().getBool("DEBUG")&&function v(g){const ot=g.getError();if(ot!==g.NO_ERROR)throw new Error("WebGL Error: "+S(g,ot))}(g),pt}const A=5.96e-8,_=65504;function C(g){return!!((0,p.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===g||A<Math.abs(g)&&Math.abs(g)<_)}function S(g,ot){switch(ot){case g.NO_ERROR:return"NO_ERROR";case g.INVALID_ENUM:return"INVALID_ENUM";case g.INVALID_VALUE:return"INVALID_VALUE";case g.INVALID_OPERATION:return"INVALID_OPERATION";case g.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case g.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case g.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${ot}`}}function L(g,ot){return st(g,()=>g.getExtension(ot),'Extension "'+ot+'" not supported on this browser.')}function O(g,ot){const pt=st(g,()=>g.createShader(g.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(f(g,()=>g.shaderSource(pt,ot)),f(g,()=>g.compileShader(pt)),!1===g.getShaderParameter(pt,g.COMPILE_STATUS))throw console.log(g.getShaderInfoLog(pt)),new Error("Failed to compile vertex shader.");return pt}function N(g,ot){const pt=st(g,()=>g.createShader(g.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(f(g,()=>g.shaderSource(pt,ot)),f(g,()=>g.compileShader(pt)),(0,p.OBj)().get("ENGINE_COMPILE_ONLY"))return pt;if(!1===g.getShaderParameter(pt,g.COMPILE_STATUS))throw z(ot,g.getShaderInfoLog(pt)),new Error("Failed to compile fragment shader.");return pt}const B=/ERROR: [0-9]+:([0-9]+):/g;function z(g,ot){const pt=B.exec(ot);if(null==pt)return console.log(`Couldn't parse line number in error: ${ot}`),void console.log(g);const Kt=+pt[1],ae=g.split("\n"),ne=ae.length.toString().length+2,ce=ae.map((D,Bt)=>p.D5U.rightPad((Bt+1).toString(),ne)+D);let de=0;for(let D=0;D<ce.length;D++)de=Math.max(ce[D].length,de);const Ee=ce.slice(0,Kt-1),Dt=ce.slice(Kt-1,Kt),fe=ce.slice(Kt);console.log(Ee.join("\n")),console.log(ot.split("\n")[0]),console.log(`%c ${p.D5U.rightPad(Dt[0],de)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(fe.join("\n"))}function V(g){return st(g,()=>g.createProgram(),"Unable to create WebGLProgram.")}function U(g,ot){if(f(g,()=>g.linkProgram(ot)),!(0,p.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===g.getProgramParameter(ot,g.LINK_STATUS))throw console.log(g.getProgramInfoLog(ot)),new Error("Failed to link vertex and fragment shaders.")}function E(g,ot){if(f(g,()=>g.validateProgram(ot)),!1===g.getProgramParameter(ot,g.VALIDATE_STATUS))throw console.log(g.getProgramInfoLog(ot)),new Error("Shader program validation failed.")}function T(g,ot){const pt=st(g,()=>g.createBuffer(),"Unable to create WebGLBuffer");return f(g,()=>g.bindBuffer(g.ARRAY_BUFFER,pt)),f(g,()=>g.bufferData(g.ARRAY_BUFFER,ot,g.STATIC_DRAW)),pt}function K(g,ot){const pt=st(g,()=>g.createBuffer(),"Unable to create WebGLBuffer");return f(g,()=>g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,pt)),f(g,()=>g.bufferData(g.ELEMENT_ARRAY_BUFFER,ot,g.STATIC_DRAW)),pt}function it(){return 2===(0,p.OBj)().getNumber("WEBGL_VERSION")?1:4}function J(g){return st(g,()=>g.createTexture(),"Unable to create WebGLTexture.")}function y(g,ot){const pt=(0,p.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(g<=0||ot<=0)throw new Error(`Requested texture size [${g}x${ot}] is invalid.`);if(g>pt||ot>pt)throw new Error(`Requested texture size [${g}x${ot}] greater than WebGL maximum on this browser / GPU [${pt}x${pt}].`)}function F(g){return st(g,()=>g.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function tt(g,ot,pt,Kt,ae,ne,ce){const de=g.getAttribLocation(ot,pt);return-1!==de&&(f(g,()=>g.bindBuffer(g.ARRAY_BUFFER,Kt)),f(g,()=>g.vertexAttribPointer(de,ae,g.FLOAT,!1,ne,ce)),f(g,()=>g.enableVertexAttribArray(de)),!0)}function at(g,ot,pt){Pt(g,pt),f(g,()=>g.activeTexture(g.TEXTURE0+pt)),f(g,()=>g.bindTexture(g.TEXTURE_2D,ot))}function j(g,ot){Pt(g,ot),f(g,()=>g.activeTexture(g.TEXTURE0+ot)),f(g,()=>g.bindTexture(g.TEXTURE_2D,null))}function w(g,ot,pt){return st(g,()=>g.getUniformLocation(ot,pt),'uniform "'+pt+'" not present in program.')}function x(g,ot,pt){return g.getUniformLocation(ot,pt)}function b(g,ot,pt,Kt){f(g,()=>at(g,ot,Kt)),f(g,()=>g.uniform1i(pt,Kt))}function i(g){f(g,()=>g.bindFramebuffer(g.FRAMEBUFFER,null)),f(g,()=>g.viewport(0,0,g.canvas.width,g.canvas.height)),f(g,()=>g.scissor(0,0,g.canvas.width,g.canvas.height))}function G(g,ot,pt){f(g,()=>g.bindFramebuffer(g.FRAMEBUFFER,pt)),f(g,()=>g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,g.TEXTURE_2D,ot,0))}function ft(g,ot){f(g,()=>g.bindFramebuffer(g.FRAMEBUFFER,ot)),f(g,()=>g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,g.TEXTURE_2D,null,0))}function Y(g){const ot=g.checkFramebufferStatus(g.FRAMEBUFFER);if(ot!==g.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+lt(g,ot))}function lt(g,ot){switch(ot){case g.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case g.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case g.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case g.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${ot}`}}function st(g,ot,pt){const Kt=f(g,()=>ot());if(null==Kt)throw new Error(pt);return Kt}function Pt(g,ot){const pt=g.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,Kt=ot+g.TEXTURE0;if(Kt<g.TEXTURE0||Kt>pt)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${pt}].`)}function Wt(g,ot=2){return p.D5U.sizeFromShape(g.slice(0,g.length-ot))}function Q(g){if(0===g.length)throw Error("Cannot get rows and columns of an empty shape array.");return[g.length>1?g[g.length-2]:1,g[g.length-1]]}function ct(g){let ot=[1,1,1];return 0===g.length||1===g.length&&1===g[0]||(ot=[Wt(g),...Q(g)]),ot}function _t(g,ot=!1){let pt=(0,p.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),Kt=(0,p.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");Kt===1/0&&(0,p.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(Kt=pt/2),ot&&(pt*=2,Kt*=2,1===(g=g.map((de,Ee)=>Ee>=g.length-2?p.D5U.nearestLargerEven(g[Ee]):g[Ee])).length&&(g=[2,g[0]])),2!==g.length&&(g=p.D5U.squeezeShape(g).newShape);let ae=p.D5U.sizeFromShape(g),ne=null;g.length<=1&&ae<=pt?ne=[1,ae]:2===g.length&&g[0]<=pt&&g[1]<=pt?ne=g:3===g.length&&g[0]*g[1]<=pt&&g[2]<=pt?ne=[g[0]*g[1],g[2]]:3===g.length&&g[0]<=pt&&g[1]*g[2]<=pt?ne=[g[0],g[1]*g[2]]:4===g.length&&g[0]*g[1]*g[2]<=pt&&g[3]<=pt?ne=[g[0]*g[1]*g[2],g[3]]:4===g.length&&g[0]<=pt&&g[1]*g[2]*g[3]<=pt&&(ne=[g[0],g[1]*g[2]*g[3]]);const ce=null!=ne&&Math.max(...ne)>Kt&&Math.min(...ne)<=(ot?2:1)&&Math.min(...ne)>0;if(null==ne||ce)if(ot){const de=Wt(g);let Ee=2,Dt=2;g.length&&([Ee,Dt]=Q(g)),ae=de*(Ee/2)*(Dt/2),ne=p.D5U.sizeToSquarishShape(ae).map(fe=>2*fe)}else ne=p.D5U.sizeToSquarishShape(ae);return ne}function ut(g){return g%2==0}function At(g,ot){if(g=g.slice(-2),ot=ot.slice(-2),p.D5U.arraysEqual(g,ot)||!g.length||!ot.length||0===g[0]||0===g[1]||0===ot[0]||0===ot[1])return!0;if(g.length!==ot.length){const pt=g[g.length-1],Kt=ot[ot.length-1];if(pt===Kt||ut(pt)&&ut(Kt)&&(1===g[0]||1===ot[0]))return!0}return g[1]===ot[1]&&ut(g[0])&&ut(ot[0])}let Ot,Mt;function xt(g){if(null==Ot){const ot=(0,P.jl)(g);Ot=ot.getParameter(ot.MAX_TEXTURE_SIZE)}return Ot}function Ct(){Ot=null}function ie(){Mt=null}function ee(g){if(null==Mt){const ot=(0,P.jl)(g);Mt=ot.getParameter(ot.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Mt)}function Yt(g){if(0===g)return 0;let ot;const pt=(0,P.jl)(g);return ot=mt(pt,"EXT_disjoint_timer_query_webgl2")&&2===g?2:mt(pt,"EXT_disjoint_timer_query")?1:0,ot}function mt(g,ot){return null!=g.getExtension(ot)}function Ae(g){try{if(null!=(0,P.jl)(g))return!0}catch(ot){return console.log("Error when getting WebGL context: ",ot),!1}return!1}function _e(g){if(0===g)return!1;const ot=(0,P.jl)(g);if(1===g){if(!mt(ot,"OES_texture_float"))return!1}else if(!mt(ot,"EXT_color_buffer_float"))return!1;return Ie(ot)}function Be(g){if(0===g)return!1;const ot=(0,P.jl)(g);if(1!==g){if(mt(ot,"EXT_color_buffer_float"))return Ie(ot);const Kt="EXT_color_buffer_half_float";if(mt(ot,Kt)){const ae=ot.getExtension(Kt);return function we(g,ot){const pt=(0,I.Sq)(g,ot),Kt=g.createTexture();g.bindTexture(g.TEXTURE_2D,Kt),g.texImage2D(g.TEXTURE_2D,0,pt.internalFormatHalfFloat,1,1,0,pt.textureFormatFloat,pt.textureTypeHalfFloat,null);const ce=g.createFramebuffer();g.bindFramebuffer(g.FRAMEBUFFER,ce),g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,g.TEXTURE_2D,Kt,0);const de=g.checkFramebufferStatus(g.FRAMEBUFFER)===g.FRAMEBUFFER_COMPLETE;return g.bindTexture(g.TEXTURE_2D,null),g.bindFramebuffer(g.FRAMEBUFFER,null),g.deleteTexture(Kt),g.deleteFramebuffer(ce),de}(ot,ae)}return!1}return!(!mt(ot,"OES_texture_float")||!mt(ot,"WEBGL_color_buffer_float"))&&Ie(ot)}function Ie(g){const ot=(0,I.Sq)(g),pt=g.createTexture();g.bindTexture(g.TEXTURE_2D,pt),g.texImage2D(g.TEXTURE_2D,0,ot.internalFormatFloat,1,1,0,ot.textureFormatFloat,ot.textureTypeFloat,null);const ne=g.createFramebuffer();g.bindFramebuffer(g.FRAMEBUFFER,ne),g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,g.TEXTURE_2D,pt,0);const ce=g.checkFramebufferStatus(g.FRAMEBUFFER)===g.FRAMEBUFFER_COMPLETE;return g.bindTexture(g.TEXTURE_2D,null),g.bindFramebuffer(g.FRAMEBUFFER,null),g.deleteTexture(pt),g.deleteFramebuffer(ne),ce}function Ne(g){return 2===g&&null!=(0,P.jl)(g).fenceSync}function Qe(g,ot){Array.isArray(g)||(g=[g]),g.forEach(pt=>{null!=pt&&p.D5U.assert("complex64"!==pt.dtype,()=>`${ot} does not support complex64 tensors in the WebGL backend.`)})}},5527:(rt,H,o)=>{"use strict";o.d(H,{OB:()=>C,Vi:()=>S,iG:()=>L,qA:()=>f});var p=o(15861),P=o(45359);const I="tfjsflags";class f{constructor(N){this.global=N,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=v,this.populateURLFlags()}setPlatform(N,B){null!=this.platform&&(C().getBool("IS_TEST")||C().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${N}.`)),this.platformName=N,this.platform=B}registerFlag(N,B,z){if(this.flagRegistry[N]={evaluationFn:B,setHook:z},null!=this.urlFlags[N]){const V=this.urlFlags[N];C().getBool("IS_TEST")||C().getBool("PROD")||console.warn(`Setting feature override from URL ${N}: ${V}.`),this.set(N,V)}}getAsync(N){var B=this;return(0,p.Z)(function*(){return N in B.flags||(B.flags[N]=yield B.evaluateFlag(N)),B.flags[N]})()}get(N){if(N in this.flags)return this.flags[N];const B=this.evaluateFlag(N);if((0,P.tI)(B))throw new Error(`Flag ${N} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[N]=B,this.flags[N]}getNumber(N){return this.get(N)}getBool(N){return this.get(N)}getString(N){return this.get(N)}getFlags(){return this.flags}get features(){return this.flags}set(N,B){if(null==this.flagRegistry[N])throw new Error(`Cannot set flag ${N} as it has not been registered.`);this.flags[N]=B,null!=this.flagRegistry[N].setHook&&this.flagRegistry[N].setHook(B)}evaluateFlag(N){if(null==this.flagRegistry[N])throw new Error(`Cannot evaluate flag '${N}': no evaluation function found.`);return this.flagRegistry[N].evaluationFn()}setFlags(N){this.flags=Object.assign({},N)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const N=this.getQueryParams(this.global.location.search);I in N&&N[I].split(",").forEach(z=>{const[V,U]=z.split(":");this.urlFlags[V]=function _(O,N){const B=N.toLowerCase();return"true"===B||"false"===B?"true"===B:""+ +B===B?+B:N}(0,U)})}}function v(O){const N={};return O.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(B,...z)=>(function A(O,N,B){O[decodeURIComponent(N)]=decodeURIComponent(B||"")}(N,z[0],z[1]),z.join("="))),N}function C(){return S}let S=null;function L(O){S=O}},12773:(rt,H,o)=>{"use strict";o.d(H,{B9:()=>z,CQ:()=>E,Cd:()=>T,Cn:()=>V,G4:()=>v,MX:()=>C,N5:()=>N,N8:()=>S,N_:()=>K,R:()=>A,SR:()=>L,VY:()=>at,XV:()=>U,cF:()=>_,cj:()=>it,jq:()=>F,lu:()=>B,sq:()=>O,x3:()=>J,y3:()=>tt,ze:()=>y});var p=o(40687),P=o(5527),I=o(4296),f=o(27664);function v(){(0,P.OB)().set("PROD",!0)}function A(){(0,P.OB)().set("DEBUG",!0)}function _(){(0,P.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function C(j){(0,P.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(j+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function S(){p.BV.disposeVariables()}function L(){return p.BV}function O(){return p.BV.memory()}function N(j){return p.BV.profile(j)}function B(j,w){return p.BV.tidy(j,w)}function z(j){(0,f.getTensorsInContainer)(j).forEach(x=>x.dispose())}function V(j){return p.BV.keep(j)}function U(j){return p.BV.time(j)}function E(j){return p.BV.setBackend(j)}function T(){return p.BV.ready()}function K(){return p.BV.backendName}function it(j){p.BV.removeBackend(j)}function J(j){return p.BV.findBackend(j)}function y(j){return p.BV.findBackendFactory(j)}function F(j,w,x=1){return p.BV.registerBackend(j,w,x)}function tt(){return p.BV.backend}function at(j,w){(0,P.OB)().setPlatform(j,w)}(0,I.FZ)(C)},63537:(rt,H,o)=>{"use strict";o.d(H,{UQ:()=>v,cb:()=>L,fN:()=>C,h7:()=>_,pn:()=>S,ti:()=>A});var p=o(40687),P=o(4296),I=o(1257),f=o(45359);function v(N){return f.hu(f.mf(N),()=>"The f passed in grad(f) must be a function"),(B,z)=>{const V=(0,I._1)(B,"x","tf.grad","string_or_numeric"),U=null!=z?(0,I._1)(z,"dy","tf.grad"):null;return p.BV.tidy(()=>{const{value:E,grads:T}=p.BV.gradients(()=>N(V),[V],U);return null!=U&&f.k5(E.shape,U.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),O(T),T[0]})}}function A(N){return f.hu(f.mf(N),()=>"The f passed in grads(f) must be a function"),(B,z)=>{f.hu(Array.isArray(B),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const V=(0,I.sI)(B,"args","tf.grads","string_or_numeric"),U=null!=z?(0,I._1)(z,"dy","tf.grads"):null;return p.BV.tidy(()=>{const{value:E,grads:T}=p.BV.gradients(()=>N(...V),V,U);return null!=U&&f.k5(E.shape,U.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),O(T),T})}}function _(N){return f.hu(f.mf(N),()=>"The f passed in valueAndGrad(f) must be a function"),(B,z)=>{f.hu(B instanceof P.es,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),f.hu(null==z||z instanceof P.es,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:V,value:U}=p.BV.gradients(()=>N(B),[B],z);return O(V),{grad:V[0],value:U}}}function C(N){return f.hu(f.mf(N),()=>"The f passed in valueAndGrads(f) must be a function"),(B,z)=>{f.hu(Array.isArray(B)&&B.every(U=>U instanceof P.es),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),f.hu(null==z||z instanceof P.es,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const V=p.BV.gradients(()=>N(...B),B,z);return null!=z&&f.k5(V.value.shape,z.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),O(V.grads),V}}function S(N,B){f.hu(f.mf(N),()=>"The f passed in variableGrads(f) must be a function"),f.hu(null==B||Array.isArray(B)&&B.every(J=>J instanceof P._w),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const z=null!=B;if(!z){B=[];for(const J in p.BV.registeredVariables)B.push(p.BV.registeredVariables[J])}const V=z?B.filter(J=>!J.trainable):null,U=B.length;B=B.filter(J=>J.trainable),f.hu(B.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${U} variables is trainable.`);const{value:T,grads:K}=p.BV.gradients(N,B,null,!0);f.hu(K.some(J=>null!=J),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),f.hu(0===T.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${T.rank} tensor`);const it={};return B.forEach((J,y)=>{null!=K[y]&&(it[J.name]=K[y])}),V?.forEach(J=>it[J.name]=null),{value:T,grads:it}}function L(N){return p.BV.customGrad(N)}function O(N){if(N.filter(z=>null==z).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},30003:(rt,H,o)=>{"use strict";o.d(H,{SYM:()=>Z.SYM,VGw:()=>Z.VGw,SpW:()=>Z.SpW,zJI:()=>g.z,HeW:()=>ot.H,a4z:()=>pt.a,DBS:()=>Kt.D,mm_:()=>Z.mm_,Xze:()=>Z.Xze,oT6:()=>Z.oT6,IKK:()=>Z.IKK,sJF:()=>Z.sJF,aJk:()=>Z.aJk,M2y:()=>Z.M2y,qw7:()=>Z.qw7,jMg:()=>Z.jMg,QCc:()=>Z.QCc,Oyi:()=>Z.Oyi,JhU:()=>Z.JhU,_k9:()=>Z._k9,IMb:()=>Z.IMb,ROF:()=>Z.ROF,XLW:()=>Z.XLW,zws:()=>Z.zws,zvY:()=>Z.zvY,hCO:()=>Z.hCO,eEB:()=>Z.eEB,Ly9:()=>Z.Ly9,RFZ:()=>Z.RFZ,gJX:()=>Z.gJX,xnO:()=>Z.xnO,Zz9:()=>Z.Zz9,yj2:()=>Z.yj2,Eh3:()=>Z.Eh3,mhS:()=>Z.mhS,wUP:()=>Z.wUP,wm:()=>Z.wm,x12:()=>Z.x12,o2y:()=>Z.o2y,ik2:()=>Z.ik2,mc4:()=>Z.mc4,TR1:()=>Z.TR1,VcC:()=>Z.VcC,Byc:()=>Z.Byc,iHb:()=>Z.iHb,JLz:()=>hn.JL,QRR:()=>Z.QRR,T0n:()=>Z.T0n,cie:()=>Z.cie,sL$:()=>Z.sL$,y7R:()=>Z.y7R,$w:()=>Z.$w,p4S:()=>Z.p4S,Vn9:()=>Z.Vn9,ekb:()=>Z.ekb,hGc:()=>Z.hGc,ViN:()=>S.Vi,$g6:()=>Z.$g6,SX0:()=>Z.SX0,HEU:()=>Z.HEU,qAh:()=>S.qA,hdR:()=>Z.hdR,Omj:()=>Z.Omj,NEP:()=>Z.NEP,YFo:()=>Z.YFo,Y0y:()=>Z.Y0y,vwp:()=>Z.vwp,deh:()=>Z.deh,Uyb:()=>Z.Uyb,OR:()=>Z.OR,jeX:()=>Z.jeX,eBW:()=>Z.eBW,sHE:()=>Z.sHE,_V0:()=>Z._V0,luS:()=>Z.luS,q1x:()=>Z.q1x,qi_:()=>Z.qi_,iZT:()=>Z.iZT,Acj:()=>Z.Acj,Qg5:()=>Z.Qg5,iJz:()=>Z.iJz,J_u:()=>Z.J_u,avt:()=>Z.avt,iWB:()=>Z.iWB,r7n:()=>Z.r7n,Zuw:()=>hn.Zu,eZ0:()=>Z.eZ0,Hhh:()=>Z.Hhh,J$2:()=>Z.J$2,vtC:()=>Z.vtC,CAk:()=>Z.CAk,e7N:()=>Z.e7N,ZbH:()=>Z.ZbH,kU:()=>Z.kU,qCd:()=>Z.qCd,PYm:()=>Z.PYm,VfG:()=>Z.VfG,MZg:()=>Z.MZg,w6g:()=>Z.w6g,qIC:()=>Z.qIC,J7O:()=>Z.J7O,YoZ:()=>Z.YoZ,mTV:()=>Z.mTV,OAf:()=>Z.OAf,OU7:()=>Z.OU7,OV7:()=>Z.OV7,vFR:()=>Z.vFR,BMI:()=>Z.BMI,q2K:()=>Z.q2K,c17:()=>Z.c17,q8u:()=>Z.q8u,jQs:()=>Z.jQs,Vbg:()=>Z.Vbg,rIn:()=>ae.r,NZg:()=>Z.NZg,wYn:()=>Z.wYn,kuV:()=>Z.kuV,uv1:()=>Z.uv1,cye:()=>Z.cye,W0H:()=>Z.W0H,yQU:()=>Z.yQU,zvA:()=>D.zvA,we_:()=>Z.we_,qWM:()=>Z.qWM,gaJ:()=>ne.g,eEe:()=>ce.e,QiL:()=>Z.QiL,lyA:()=>Z.lyA,Kgp:()=>Z.Kgp,pe_:()=>Z.pe_,o0g:()=>Z.o0g,DlI:()=>Z.DlI,gVI:()=>de.g,dDz:()=>Z.dDz,CQl:()=>Z.CQl,BiW:()=>Z.BiW,e6w:()=>Z.e6w,yw1:()=>fe.yw,xJR:()=>Z.xJR,oHH:()=>Z.oHH,$HU:()=>Z.$HU,IH3:()=>Bt.I,qkr:()=>Z.qkr,SbG:()=>Z.SbG,HZH:()=>Z.HZH,_Yw:()=>Z._Yw,zbQ:()=>Z.zbQ,dpD:()=>Z.dpD,Hmb:()=>Z.Hmb,mKl:()=>Z.mKl,b9H:()=>Z.b9H,e07:()=>Z.e07,bV0:()=>Z.bV0,DYp:()=>Ee.D,xQA:()=>Z.xQA,nr8:()=>Z.nr8,PhF:()=>Z.PhF,oFR:()=>Z.oFR,a5O:()=>Z.a5O,i5y:()=>Z.i5y,RQH:()=>Z.RQH,wYB:()=>Z.wYB,p2w:()=>Z.p2w,Gcp:()=>Z.Gcp,MRv:()=>Z.MRv,TQc:()=>Z.TQc,O3z:()=>Z.O3z,nhH:()=>Z.nhH,w3H:()=>Z.w3H,ZjV:()=>Z.ZjV,D2d:()=>Z.D2d,L8s:()=>Z.L8s,FKq:()=>Z.FKq,bK0:()=>Z.bK0,_tC:()=>Z._tC,e0R:()=>Z.e0R,h8e:()=>Z.h8e,jQk:()=>Z.jQk,_JP:()=>Z._JP,s1s:()=>Z.s1s,XkS:()=>Z.XkS,Tr8:()=>Z.Tr8,GBy:()=>Z.GBy,sEM:()=>Z.sEM,MIZ:()=>Z.MIZ,esB:()=>Dt.es,YDk:()=>Dt.YD,SIB:()=>Z.SIB,n9L:()=>Z.n9L,cWu:()=>Z.cWu,wx7:()=>Z.wx7,G3Y:()=>Z.G3Y,kpP:()=>Z.kpP,ToN:()=>Z.ToN,Qvg:()=>Z.Qvg,XDQ:()=>Z.XDQ,_wD:()=>Dt._w,RuY:()=>Z.RuY,usg:()=>Z.usg,WnP:()=>D.WnP,Khb:()=>D.Khb,__u:()=>D.__u,IHx:()=>D.IHx,QBD:()=>D.QBD,$6P:()=>D.$6P,YjB:()=>D.YjB,NqF:()=>D.NqF,vHJ:()=>D.vHJ,ZRM:()=>D.ZRM,VfV:()=>D.VfV,z4N:()=>D.z4N,fvJ:()=>D.fvJ,C80:()=>D.C80,wS1:()=>D.wS1,uR5:()=>D.uR5,y3$:()=>Zt.y3,backend_util:()=>Je,zEQ:()=>D.zEQ,tgs:()=>D.tgs,Dxk:()=>D.Dxk,JY5:()=>D.JY5,p3b:()=>D.p3b,E4h:()=>D.E4h,yE8:()=>D.yE8,ycw:()=>D.ycw,anm:()=>D.anm,XsQ:()=>D.XsQ,UFq:()=>D.UFq,Jyw:()=>ee,Xhn:()=>Yt,f3b:()=>D.f3b,pju:()=>D.pju,mDi:()=>D.mDi,iUl:()=>D.iUl,d9v:()=>D.d9v,PYB:()=>D.PYB,zoF:()=>D.zoF,gME:()=>D.gME,Izb:()=>D.Izb,MNy:()=>D.MNy,ZaL:()=>D.ZaL,PAt:()=>D.PAt,Tek:()=>D.Tek,bc:()=>D.bc,pdZ:()=>D.pdZ,$QV:()=>D.$QV,T3b:()=>Ce.T3,mCk:()=>D.mCk,f9Y:()=>D.f9Y,mew:()=>D.mew,$Gn:()=>D.$Gn,zbp:()=>D.zbp,cbc:()=>Se.cb,ppE:()=>D.ppE,MXe:()=>Zt.MX,nTT:()=>D.nTT,B10:()=>D.B10,C2$:()=>$e,Ka3:()=>D.Ka3,WmZ:()=>D.WmZ,cFr:()=>Zt.cF,B90:()=>Zt.B9,N8o:()=>Zt.N8,hiC:()=>D.hiC,NTj:()=>D.NTj,AKD:()=>D.AKD,rvX:()=>D.rvX,WYO:()=>D.WYO,pyx:()=>D.pyx,Ra$:()=>Zt.R,G48:()=>Zt.G4,GRh:()=>D.GRh,SRH:()=>Zt.SR,EDe:()=>D.EDe,OBj:()=>S.OB,DgJ:()=>D.DgJ,qNN:()=>D.qNN,d2q:()=>D.d2q,Qqt:()=>D.Qqt,dt4:()=>D.dt4,t$B:()=>D.t$B,iyy:()=>D.iyy,kp_:()=>D.kp_,hlL:()=>D.hlL,x3e:()=>Zt.x3,zel:()=>Zt.ze,GWj:()=>D.GWj,qPi:()=>D.qPi,imm:()=>D.imm,Iqj:()=>D.Iqj,dbB:()=>D.dbB,DaI:()=>mt,N_N:()=>Zt.N_,ukX:()=>Ce.uk,pIF:()=>Ce.pI,trD:()=>Ce.tr,UQy:()=>Se.UQ,tiA:()=>Se.ti,pjt:()=>D.pjt,brS:()=>D.brS,Sxn:()=>D.Sxn,asL:()=>D.asL,image:()=>D.BHj,V3u:()=>D.V3u,io:()=>p,wx0:()=>D.wx0,xVT:()=>D.xVT,UWc:()=>D.UWc,i2d:()=>D.i2d,CnY:()=>Zt.Cn,GDt:()=>P,hi7:()=>D.hi7,d9m:()=>D.d9m,zN1:()=>D.zN1,$r2:()=>D.$r2,SX3:()=>D.SX3,G9k:()=>D.G9k,cM7:()=>D.cM7,Krr:()=>D.Krr,e_t:()=>D.e_t,CmS:()=>D.CmS,l_t:()=>D.l_t,HvI:()=>D.HvI,hJK:()=>D.hJK,K5V:()=>D.K5V,egP:()=>D.egP,MB5:()=>D.MB5,eab:()=>D.eab,OI3:()=>D.OI3,mAU:()=>ie,Fp7:()=>D.Fp7,_sB:()=>D._sB,YQQ:()=>D.YQQ,Ip$:()=>D.Ip$,gWQ:()=>D.gWQ,J69:()=>D.J69,sq6:()=>Zt.sq,ry_:()=>D.ry_,VV$:()=>D.VV$,LTh:()=>D.LTh,VdP:()=>D.VdP,wQq:()=>D.wQq,Gi7:()=>D.Gi7,p_:()=>D.p_,dC7:()=>D.dC7,rq4:()=>D.rq4,SJ_:()=>D.SJ_,W76:()=>D.W76,glt:()=>ze.g,KOy:()=>D.KOy,Quu:()=>D.Quu,lfX:()=>D.lfX,iUs:()=>D.iUs,JpU:()=>D.JpU,op:()=>D.op,N2O:()=>D.N2O,vku:()=>D.vku,pNR:()=>D.pNR,koy:()=>D.koy,t1L:()=>D.t1L,lGY:()=>D.lGY,d_R:()=>D.d_R,sQ3:()=>D.sQ3,AL3:()=>D.AL3,S0v:()=>D.S0v,WVs:()=>D.WVs,N5s:()=>Zt.N5,$gW:()=>D.$gW,VT$:()=>D.VT$,N89:()=>D.N89,TN_:()=>D.TN_,wzB:()=>D.wzB,nGf:()=>D.nGf,ruB:()=>D.ruB,LGj:()=>D.LGj,pe5:()=>D.pe5,w6H:()=>D.w6H,Cd_:()=>Zt.Cd,kwC:()=>D.kwC,M25:()=>D.M25,jqO:()=>Zt.jq,LiG:()=>Ce.Li,wCN:()=>Ce.wC,UYe:()=>D.UYe,btT:()=>D.btT,cjG:()=>Zt.cj,XLQ:()=>D.XLQ,GYS:()=>D.GYS,SDf:()=>D.SDf,diP:()=>D.diP,sx7:()=>D.sx7,mG2:()=>D.mG2,QEs:()=>D.QEs,NMM:()=>D.NMM,bp0:()=>D.bp0,iD$:()=>D.iD$,snQ:()=>D.snQ,yV1:()=>Ae,zcT:()=>D.zcT,U8D:()=>D.U8D,U_I:()=>D.U_I,m7h:()=>Be,CQI:()=>Zt.CQ,VYu:()=>Zt.VY,ODp:()=>D.ODp,XD2:()=>D.XD2,Xxe:()=>D.Xxe,tdS:()=>D.tdS,O$l:()=>D.O$l,R_K:()=>D.R_K,tPi:()=>D.tPi,jZU:()=>D.jZU,SmN:()=>D.SmN,CnO:()=>D.CnO,p0P:()=>D.p0P,kuN:()=>_e,XAC:()=>D.XAC,Wvh:()=>D.Wvh,fBT:()=>D.fBT,rVs:()=>D.rVs,ers:()=>D.ers,uN7:()=>D.uN7,Vl2:()=>D.Vl2,_b3:()=>D._b3,h62:()=>D.h62,$i:()=>D.$i,L9e:()=>D.L9e,knu:()=>D.knu,Nbs:()=>D.Nbs,NXj:()=>D.NXj,Z_8:()=>D.Z_8,luU:()=>D.luU,Smz:()=>D.Smz,z4k:()=>fe.z4,ORZ:()=>D.ORZ,AEp:()=>D.AEp,XeE:()=>D.XeE,RRF:()=>D.RRF,odF:()=>D.odF,wOQ:()=>D.wOQ,yXz:()=>D.yXz,Bfx:()=>D.Bfx,xZs:()=>D.xZs,Pg0:()=>D.Pg0,piX:()=>Ie,p3L:()=>we,lub:()=>Zt.lu,Gg6:()=>D.Gg6,XVJ:()=>Zt.XV,hg7:()=>D.hg7,p_j:()=>X.p,p4s:()=>D.p4s,Xu6:()=>D.Xu6,Two:()=>D.Two,bt3:()=>Ce.bt,nEe:()=>Ce.nE,pUJ:()=>D.pUJ,HHK:()=>D.HHK,x8V:()=>fe.x8,GaM:()=>D.GaM,D5U:()=>Ne,h76:()=>Se.h7,fNQ:()=>Se.fN,VD$:()=>D.VD$,pnJ:()=>Se.pn,jTM:()=>Qe.i,arb:()=>D.arb,itS:()=>D.itS,lls:()=>D.lls,P84:()=>D.P84});var p={};o.r(p),o.d(p,{CompositeArrayBuffer:()=>N.w,browserFiles:()=>J,browserHTTPRequest:()=>Q,concatenateArrayBuffers:()=>L.JY,copyModel:()=>Ct.ID,decodeWeights:()=>L.dI,decodeWeightsStream:()=>L.r,encodeWeights:()=>L.yz,fromMemory:()=>At,fromMemorySync:()=>Ot,getLoadHandlers:()=>O.rM,getModelArtifactsForJSON:()=>L.jN,getModelArtifactsForJSONSync:()=>L.ji,getModelArtifactsInfoForJSON:()=>L.Q,getSaveHandlers:()=>O.yB,getWeightSpecs:()=>L.hu,http:()=>Wt,isHTTPScheme:()=>st,listModels:()=>Ct.h1,loadWeights:()=>x,moveModel:()=>Ct.Ny,registerLoadRouter:()=>O.pS,registerSaveRouter:()=>O.tf,removeModel:()=>Ct.gw,weightsLoaderFactory:()=>i,withSaveHandler:()=>Mt,withSaveHandlerSync:()=>xt});var P={};o.r(P),o.d(P,{nonMaxSuppressionV3Impl:()=>sn.GP,nonMaxSuppressionV4Impl:()=>sn.qP,nonMaxSuppressionV5Impl:()=>sn.pA,whereImpl:()=>Tn.Z}),o(3311);var f=o(98754),_=(o(51462),o(83187),o(15861)),S=(o(881),o(5527)),L=o(98339),O=o(50679),N=o(37864);function U(wt){return new Promise(vt=>setTimeout(vt)).then(wt)}let E=(()=>{class wt{constructor(dt){if(!(0,S.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");dt.startsWith(wt.URL_SCHEME)&&(dt=dt.slice(wt.URL_SCHEME.length)),(null==dt||0===dt.length)&&(dt="model"),this.modelJsonFileName=dt+".json",this.weightDataFileName=dt+".weights.bin"}save(dt){var Tt=this;return(0,_.Z)(function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const Rt=N.w.join(dt.weightData),jt=window.URL.createObjectURL(new Blob([Rt],{type:"application/octet-stream"}));if(dt.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const Ht=(0,L.Yd)(dt,[{paths:["./"+Tt.weightDataFileName],weights:dt.weightSpecs}]),oe=window.URL.createObjectURL(new Blob([JSON.stringify(Ht)],{type:"application/json"})),pe=null==Tt.modelJsonAnchor?document.createElement("a"):Tt.modelJsonAnchor;if(pe.download=Tt.modelJsonFileName,pe.href=oe,yield U(()=>pe.dispatchEvent(new MouseEvent("click"))),null!=dt.weightData){const ve=null==Tt.weightDataAnchor?document.createElement("a"):Tt.weightDataAnchor;ve.download=Tt.weightDataFileName,ve.href=jt,yield U(()=>ve.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:(0,L.Q)(dt)}}})()}}return wt.URL_SCHEME="downloads://",wt})();class T{constructor(vt){if(null==vt||vt.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${vt}`);this.jsonFile=vt[0],this.weightsFiles=vt.slice(1)}load(){var vt=this;return(0,_.Z)(function*(){return new Promise((dt,Tt)=>{const Rt=new FileReader;Rt.onload=jt=>{const kt=JSON.parse(jt.target.result),Ht=kt.modelTopology;if(null==Ht)return void Tt(new Error(`modelTopology field is missing from file ${vt.jsonFile.name}`));if(null==kt.weightsManifest)return void Tt(new Error(`weightManifest field is missing from file ${vt.jsonFile.name}`));if(0===vt.weightsFiles.length)return void dt({modelTopology:Ht});const pe=(0,L.jN)(kt,ve=>vt.loadWeights(ve));dt(pe)},Rt.onerror=jt=>Tt(`Failed to read model topology and weights manifest JSON from file '${vt.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),Rt.readAsText(vt.jsonFile)})})()}loadWeights(vt){const dt=[],Tt=[];for(const kt of vt)dt.push(...kt.weights),Tt.push(...kt.paths);const Rt=this.checkManifestAndWeightFiles(vt),jt=Tt.map(kt=>this.loadWeightsFile(kt,Rt[kt]));return Promise.all(jt).then(kt=>[dt,kt])}loadWeightsFile(vt,dt){return new Promise((Tt,Rt)=>{const jt=new FileReader;jt.onload=kt=>{Tt(kt.target.result)},jt.onerror=kt=>Rt(`Failed to weights data from file of path '${vt}'.`),jt.readAsArrayBuffer(dt)})}checkManifestAndWeightFiles(vt){const dt=[],Tt=this.weightsFiles.map(jt=>(0,L.EZ)(jt.name)),Rt={};for(const jt of vt)jt.paths.forEach(kt=>{const Ht=(0,L.EZ)(kt);if(-1!==dt.indexOf(Ht))throw new Error(`Duplicate file basename found in weights manifest: '${Ht}'`);if(dt.push(Ht),-1===Tt.indexOf(Ht))throw new Error(`Weight file with basename '${Ht}' is not provided.`);Rt[kt]=this.weightsFiles[Tt.indexOf(Ht)]});if(dt.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${dt.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return Rt}}function J(wt){return new T(wt)}O.U3.registerSaveRouter(wt=>(0,S.OB)().getBool("IS_BROWSER")&&!Array.isArray(wt)&&wt.startsWith(E.URL_SCHEME)?function it(wt="model"){return new E(wt)}(wt.slice(E.URL_SCHEME.length)):null);var y=o(45359),F=o(46705),tt=o(81352);function at(wt,vt){return j.apply(this,arguments)}function j(){return(j=(0,_.Z)(function*(wt,vt){null==vt&&(vt={});const dt=null==vt.fetchFunc?(0,S.OB)().platform.fetch:vt.fetchFunc,Tt=wt.map(Pe=>dt(Pe,vt.requestInit,{isBinary:!0})),Ht=(null==vt.onProgress?yield Promise.all(Tt):yield(0,F.b)(Tt,vt.onProgress,0,.5)).map(Pe=>Pe.arrayBuffer());return null==vt.onProgress?yield Promise.all(Ht):yield(0,F.b)(Ht,vt.onProgress,.5,1)})).apply(this,arguments)}function x(wt){return b.apply(this,arguments)}function b(){return(b=(0,_.Z)(function*(wt,vt="",dt,Tt){return i(kt=>at(kt,{requestInit:Tt}))(wt,vt,dt)})).apply(this,arguments)}function i(wt){return function(){var vt=(0,_.Z)(function*(dt,Tt="",Rt){const jt=dt.map(()=>!1),kt={},Ht=null!=Rt?Rt.map(()=>!1):[],oe=[];if(dt.forEach((Te,Oe)=>{let Re=0;Te.weights.forEach(Ue=>{const Fe=tt.J["quantization"in Ue?Ue.quantization.dtype:Ue.dtype]*y.NA(Ue.shape),We=()=>{jt[Oe]=!0,null==kt[Oe]&&(kt[Oe]=[]),kt[Oe].push({manifestEntry:Ue,groupOffset:Re,sizeBytes:Fe})};null!=Rt?Rt.forEach((Ke,rn)=>{Ke===Ue.name&&(We(),Ht[rn]=!0)}):We(),oe.push(Ue.name),Re+=Fe})}),!Ht.every(Te=>Te)){const Te=Rt.filter((Oe,Re)=>!Ht[Re]);throw new Error(`Could not find weights in manifest with names: ${Te.join(", ")}. \nManifest JSON has weights with names: ${oe.join(", ")}.`)}const pe=jt.reduce((Te,Oe,Re)=>(Oe&&Te.push(Re),Te),[]),ve=[];pe.forEach(Te=>{dt[Te].paths.forEach(Oe=>{const Re=Tt+(Tt.endsWith("/")?"":"/")+Oe;ve.push(Re)})});const Pe=yield wt(ve),bn={};let dn=0;return pe.forEach(Te=>{const Oe=dt[Te].paths.length,Re=new N.w(Pe.slice(dn,dn+Oe));kt[Te].forEach(Ye=>{const Fe=Re.slice(Ye.groupOffset,Ye.groupOffset+Ye.sizeBytes),We=(0,L.dI)(Fe,[Ye.manifestEntry]);for(const Ke in We)bn[Ke]=We[Ke]}),dn+=Oe}),bn});return function(dt){return vt.apply(this,arguments)}}()}let Y=(()=>{class wt{constructor(dt,Tt){if(this.DEFAULT_METHOD="POST",null==Tt&&(Tt={}),this.weightPathPrefix=Tt.weightPathPrefix,this.weightUrlConverter=Tt.weightUrlConverter,null!=Tt.fetchFunc?((0,y.hu)("function"==typeof Tt.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=Tt.fetchFunc):this.fetch=(0,S.OB)().platform.fetch,(0,y.hu)(null!=dt&&dt.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(dt)&&(0,y.hu)(2===dt.length,()=>`URL paths for http must have a length of 2, (actual length is ${dt.length}).`),this.path=dt,null!=Tt.requestInit&&null!=Tt.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=Tt.requestInit||{},this.loadOptions=Tt}save(dt){var Tt=this;return(0,_.Z)(function*(){if(dt.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const Rt=Object.assign({method:Tt.DEFAULT_METHOD},Tt.requestInit);Rt.body=new FormData;const kt=(0,L.Yd)(dt,[{paths:["./model.weights.bin"],weights:dt.weightSpecs}]);if(Rt.body.append("model.json",new Blob([JSON.stringify(kt)],{type:"application/json"}),"model.json"),null!=dt.weightData){const oe=N.w.join(dt.weightData);Rt.body.append("model.weights.bin",new Blob([oe],{type:"application/octet-stream"}),"model.weights.bin")}const Ht=yield Tt.fetch(Tt.path,Rt);if(Ht.ok)return{modelArtifactsInfo:(0,L.Q)(dt),responses:[Ht]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${Ht.status}.`)})()}loadModelJSON(){var dt=this;return(0,_.Z)(function*(){const Tt=yield dt.fetch(dt.path,dt.requestInit);if(!Tt.ok)throw new Error(`Request to ${dt.path} failed with status code ${Tt.status}. Please verify this URL points to the model JSON of the model to load.`);let Rt;try{Rt=yield Tt.json()}catch{let oe=`Failed to parse model JSON of response from ${dt.path}.`;throw dt.path.endsWith(".pb")?oe+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":oe+=" Please make sure the server is serving valid JSON for this request.",new Error(oe)}if(null==Rt.modelTopology&&null==Rt.weightsManifest)throw new Error(`The JSON from HTTP path ${dt.path} contains neither model topology or manifest for weights.`);return Rt})()}load(){var dt=this;return(0,_.Z)(function*(){if(dt.loadOptions.streamWeights)return dt.loadStream();const Tt=yield dt.loadModelJSON();return(0,L.jN)(Tt,Rt=>dt.loadWeights(Rt))})()}loadStream(){var dt=this;return(0,_.Z)(function*(){const Tt=yield dt.loadModelJSON(),Rt=yield dt.getWeightUrls(Tt.weightsManifest),jt=(0,L.hu)(Tt.weightsManifest);return Object.assign(Object.assign({},Tt),{weightSpecs:jt,getWeightStream:()=>function w(wt,vt){var dt;const Tt=null==vt.fetchFunc?(0,S.OB)().platform.fetch:vt.fetchFunc;let jt,Rt=0;return null===(dt=vt.onProgress)||void 0===dt||dt.call(vt,0),new ReadableStream({pull:(kt=(0,_.Z)(function*(Ht){for(var oe;Rt<wt.length;){jt||(jt=(yield Tt(wt[Rt],vt.requestInit,{isBinary:!0})).body.getReader());const{done:pe,value:ve}=yield jt.read();if(!pe)return void Ht.enqueue(ve);Rt++,jt=void 0,null===(oe=vt.onProgress)||void 0===oe||oe.call(vt,Rt/wt.length)}Ht.close()}),function(oe){return kt.apply(this,arguments)})});var kt}(Rt,dt.loadOptions)})})()}getWeightUrls(dt){var Tt=this;return(0,_.Z)(function*(){const Rt=Array.isArray(Tt.path)?Tt.path[1]:Tt.path,[jt,kt]=function lt(wt){const vt=wt.lastIndexOf("/"),dt=wt.lastIndexOf("?");return[wt.substring(0,vt)+"/",dt>vt?wt.substring(dt):""]}(Rt),Ht=Tt.weightPathPrefix||jt,oe=[],pe=[];for(const ve of dt)for(const Pe of ve.paths)null!=Tt.weightUrlConverter?pe.push(Tt.weightUrlConverter(Pe)):oe.push(Ht+Pe+kt);return Tt.weightUrlConverter&&oe.push(...yield Promise.all(pe)),oe})()}loadWeights(dt){var Tt=this;return(0,_.Z)(function*(){const Rt=yield Tt.getWeightUrls(dt);return[(0,L.hu)(dt),yield at(Rt,Tt.loadOptions)]})()}}return wt.URL_SCHEME_REGEX=/^https?:\/\//,wt})();function st(wt){return null!=wt.match(Y.URL_SCHEME_REGEX)}const Pt=(wt,vt)=>{if(typeof fetch>"u"&&(null==vt||null==vt.fetchFunc))return null;{let dt=!0;if(dt=Array.isArray(wt)?wt.every(Tt=>st(Tt)):st(wt),dt)return Wt(wt,vt)}return null};function Wt(wt,vt){return new Y(wt,vt)}function Q(wt,vt){return Wt(wt,vt)}O.U3.registerSaveRouter(Pt),O.U3.registerLoadRouter(Pt);class ct{constructor(vt){this.modelArtifacts=vt}load(){return this.modelArtifacts}}class _t{constructor(vt){this.saveHandler=vt}save(vt){return this.saveHandler(vt)}}class ut{constructor(vt){vt.load&&(this.load=()=>Promise.resolve(vt.load())),vt.save&&(this.save=dt=>Promise.resolve(vt.save(dt)))}}function At(wt,vt,dt,Tt){return new ut(Ot(...arguments))}function Ot(wt,vt,dt,Tt){return 1===arguments.length?null!=wt.modelTopology||null!=wt.weightSpecs?new ct(wt):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ct({modelTopology:wt})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ct({modelTopology:wt,weightSpecs:vt,weightData:dt,trainingConfig:Tt}))}function Mt(wt){return new _t(wt)}function xt(wt){return new _t(wt)}var Ct=o(20320),ie=o(53894),ee=o(93239),Yt=o(19179),mt=o(39859),Ae=o(1876),_e=o(22320),Be=o(44807),Ie=o(27664),we=o(18155),Ne=o(49823),Qe=o(62180),g=o(71960),ot=o(55328),pt=o(46330),Kt=o(23771),ae=o(76680),ne=o(57075),ce=o(93529),de=o(1051),Ee=o(29115),Dt=o(4296),fe=o(1216),D=o(8449),Bt=o(54839),X=o(57304),Zt=o(12773),Ce=o(8987),Se=o(63537),ze=o(75524),Je=o(73099),$e=o(90322),sn=o(97228),Tn=o(57349),hn=o(67173),Z=o(34251);(0,f.V)()},37864:(rt,H,o)=>{"use strict";o.d(H,{w:()=>P});var p=o(49823);class P{static join(v){return new P(v).slice()}constructor(v){if(this.shards=[],this.previousShardIndex=0,null==v||(v instanceof Array||(v=[v]),0===(v=v.map(_=>p.isTypedArray(_)?_.buffer:_)).length))return;this.bufferUniformSize=v[0].byteLength;let A=0;for(let _=0;_<v.length;_++){const C=v[_];_!==v.length-1&&C.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const S=A+C.byteLength;this.shards.push({buffer:C,start:A,end:S}),A=S}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(v=0,A=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(v=isNaN(Number(v))?0:v,A=isNaN(Number(A))?0:A,v=Math.max(0,v),(A=Math.min(this.byteLength,A))<=v)return new ArrayBuffer(0);const _=this.findShardForByte(v);if(-1===_)throw new Error(`Could not find start shard for byte ${v}`);const S=new ArrayBuffer(A-v),L=new Uint8Array(S);let O=0;for(let N=_;N<this.shards.length;N++){const B=this.shards[N],V=v+O-B.start,U=O,T=Math.min(A,B.end)-B.start,K=new Uint8Array(B.buffer,V,T-V);if(L.set(K,U),O+=K.length,A<B.end)break}return S}findShardForByte(v){if(0===this.shards.length||v<0||v>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(v/this.bufferUniformSize),this.previousShardIndex;function A(C){return v<C.start?-1:v>=C.end?1:0}if(0===A(this.shards[this.previousShardIndex]))return this.previousShardIndex;const _=function I(f,v){let A=0,_=f.length;for(;A<=_;){const C=Math.floor((_-A)/2)+A,S=v(f[C]);if(0===S)return C;S<0?_=C:A=C+1}return-1}(this.shards,A);return-1===_?-1:(this.previousShardIndex=_,this.previousShardIndex)}}},98339:(rt,H,o)=>{"use strict";o.d(H,{EZ:()=>w,JY:()=>j,Q:()=>ft,Yd:()=>x,_n:()=>tt,dI:()=>N,hu:()=>Y,jN:()=>i,ji:()=>b,n7:()=>at,r:()=>K,yz:()=>L});var p=o(15861),P=o(93037),I=o(23905),f=o(45359),v=o(81352),A=o(37864),_=o(12773),C=o(5527);const S=4;function L(Q,ct){return O.apply(this,arguments)}function O(){return O=(0,p.Z)(function*(Q,ct){const _t=[],ut=[],At=Array.isArray(Q)?Q.map(Mt=>Mt.name):Object.keys(Q);for(let Mt=0;Mt<At.length;++Mt){const xt=At[Mt],Ct=Array.isArray(Q)?Q[Mt].tensor:Q[xt];if("float32"!==Ct.dtype&&"int32"!==Ct.dtype&&"bool"!==Ct.dtype&&"string"!==Ct.dtype&&"complex64"!==Ct.dtype)throw new Error(`Unsupported dtype in weight '${xt}': ${Ct.dtype}`);const ie={name:xt,shape:Ct.shape,dtype:Ct.dtype};if("string"===Ct.dtype){const ee=new Promise(function(){var Yt=(0,p.Z)(function*(mt){const Ae=yield Ct.bytes(),_e=Ae.reduce((we,Ne)=>we+Ne.length,0)+S*Ae.length,Be=new Uint8Array(_e);let Ie=0;for(let we=0;we<Ae.length;we++){const Ne=Ae[we],Qe=new Uint8Array(new Uint32Array([Ne.length]).buffer);Be.set(Qe,Ie),Ie+=S,Be.set(Ne,Ie),Ie+=Ne.length}mt(Be)});return function(mt){return Yt.apply(this,arguments)}}());ut.push(ee)}else ut.push(Ct.data());null!=ct&&(ie.group=ct),_t.push(ie)}return{data:J(yield Promise.all(ut)),specs:_t}}),O.apply(this,arguments)}function N(Q,ct){const _t=new A.w(Q),ut={};let At=0;for(const Ot of ct){const Mt=B(Ot,(xt,Ct)=>_t.slice(At+xt,At+Ct));ut[Ot.name]=U(Ot,_t.slice(At,At+Mt)),At+=Mt}return ut}function B(Q,ct){const _t=(0,f.NA)(Q.shape);let ut;if("quantization"in Q)ut=v.J[Q.quantization.dtype];else{if("string"===Q.dtype){let At=0;for(let Ot=0;Ot<_t;Ot++)At+=S+new Uint32Array(ct(At,At+S))[0];return At}ut=v.J[Q.dtype]}return _t*ut}function z(Q,ct){return V.apply(this,arguments)}function V(){return(V=(0,p.Z)(function*(Q,ct){const _t=(0,f.NA)(Q.shape);let ut;if("quantization"in Q)ut=v.J[Q.quantization.dtype];else{if("string"===Q.dtype){let At=0;for(let Ot=0;Ot<_t;Ot++)At+=S+new Uint32Array(yield ct(At,At+S))[0];return At}ut=v.J[Q.dtype]}return _t*ut})).apply(this,arguments)}function U(Q,ct){const _t=Q.name,ut=Q.dtype,At=Q.shape,Ot=(0,f.NA)(At);let Mt,xt=0;if("quantization"in Q){const Ct=Q.quantization;if("uint8"===Ct.dtype||"uint16"===Ct.dtype){if(!("min"in Ct)||!("scale"in Ct))throw new Error(`Weight ${Q.name} with quantization ${Ct.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==Ct.dtype)throw new Error(`Weight ${Q.name} has unknown quantization dtype ${Ct.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==ut)throw new Error(`Weight ${Q.name} is quantized with ${Ct.dtype} which only supports weights of type float32 not ${ut}.`)}const ie=v.J[Ct.dtype],ee="uint8"===Ct.dtype?new Uint8Array(ct):new Uint16Array(ct);if("float32"===ut)if("uint8"===Ct.dtype||"uint16"===Ct.dtype){Mt=new Float32Array(ee.length);for(let Yt=0;Yt<ee.length;Yt++)Mt[Yt]=ee[Yt]*Ct.scale+Ct.min}else{if("float16"!==Ct.dtype)throw new Error(`Unsupported quantization type ${Ct.dtype} for weight type float32.`);Mt=function Wt(){const Q=function lt(){const Q=_t=>{let ut=_t<<13,At=0;for(;!(8388608&ut);)At-=8388608,ut<<=1;return ut&=-8388609,At+=947912704,ut|At},ct=new Uint32Array(2048);ct[0]=0;for(let _t=1;_t<1024;_t++)ct[_t]=Q(_t);for(let _t=1024;_t<2048;_t++)ct[_t]=939524096+(_t-1024<<13);return ct}(),ct=function st(){const Q=new Uint32Array(64);Q[0]=0,Q[31]=1199570944,Q[32]=2147483648,Q[63]=3347054592;for(let ct=1;ct<31;ct++)Q[ct]=ct<<23;for(let ct=33;ct<63;ct++)Q[ct]=2147483648+(ct-32<<23);return Q}(),_t=function Pt(){const Q=new Uint32Array(64);for(let ct=0;ct<64;ct++)Q[ct]=1024;return Q[0]=Q[32]=0,Q}();return ut=>{const At=new ArrayBuffer(4*ut.length),Ot=new Uint32Array(At);for(let Mt=0;Mt<ut.length;Mt++){const xt=ut[Mt];Ot[Mt]=Q[_t[xt>>10]+(1023&xt)]+ct[xt>>10]}return new Float32Array(At)}}()(ee)}else{if("int32"!==ut)throw new Error(`Unsupported dtype in weight '${_t}': ${ut}`);if("uint8"!==Ct.dtype&&"uint16"!==Ct.dtype)throw new Error(`Unsupported quantization type ${Ct.dtype} for weight type int32.`);Mt=new Int32Array(ee.length);for(let Yt=0;Yt<ee.length;Yt++)Mt[Yt]=Math.round(ee[Yt]*Ct.scale+Ct.min)}xt+=Ot*ie}else if("string"===ut){const Ct=(0,f.NA)(Q.shape);Mt=[];for(let ie=0;ie<Ct;ie++){const ee=new Uint32Array(ct.slice(xt,xt+S))[0];xt+=S;const Yt=new Uint8Array(ct.slice(xt,xt+ee));Mt.push(Yt),xt+=ee}}else{const Ct=v.J[ut];if("float32"===ut)Mt=new Float32Array(ct);else if("int32"===ut)Mt=new Int32Array(ct);else{if("bool"!==ut){if("complex64"===ut){Mt=new Float32Array(ct);const ie=new Float32Array(Mt.length/2),ee=new Float32Array(Mt.length/2);for(let _e=0;_e<ie.length;_e++)ie[_e]=Mt[2*_e],ee[_e]=Mt[2*_e+1];const Yt=(0,I.X)(ie,At,"float32"),mt=(0,I.X)(ee,At,"float32"),Ae=(0,P.P)(Yt,mt);return Yt.dispose(),mt.dispose(),Ae}throw new Error(`Unsupported dtype in weight '${_t}': ${ut}`)}Mt=new Uint8Array(ct)}xt+=Ot*Ct}return(0,I.X)(Mt,At,ut)}function E(Q,ct,_t){return T.apply(this,arguments)}function T(){return(T=(0,p.Z)(function*(Q,ct,_t){let ut=new Uint8Array(ct);for(;ut.byteLength<_t;){const{done:At,value:Ot}=yield Q.read();if(At&&null==Ot)throw new Error(`Reader is done but ${_t-ut.byteLength} bytes are still expected`);const Mt=new Uint8Array(ut.length+Ot.byteLength);Mt.set(ut,0),Mt.set(new Uint8Array(Ot),ut.length),ut=Mt}return ut.buffer})).apply(this,arguments)}function K(Q,ct){return it.apply(this,arguments)}function it(){return it=(0,p.Z)(function*(Q,ct){const _t={},ut=Q.getReader();let At=new ArrayBuffer(0);for(const Ot of ct){const Mt=yield z(Ot,function(){var ie=(0,p.Z)(function*(ee,Yt){return At=yield E(ut,At,Yt),At.slice(ee,Yt)});return function(ee,Yt){return ie.apply(this,arguments)}}());At=yield E(ut,At,Mt);const xt=At.slice(0,Mt);At=At.slice(Mt);const Ct=U(Ot,xt);if(_t[Ot.name]=Ct,"webgpu"===(0,_.N_)()){const ie=(0,_.y3)();"uploadToGPU"in ie&&(0,f.NA)(Ct.shape)>=(0,C.OB)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&ie.uploadToGPU(Ct.dataId)}}return _t}),it.apply(this,arguments)}function J(Q){if(null===Q)throw new Error(`Invalid input value: ${JSON.stringify(Q)}`);let ct=0;const _t=[];Q.forEach(Ot=>{if(ct+=Ot.byteLength,_t.push(Ot.byteLength===Ot.buffer.byteLength?Ot:new Ot.constructor(Ot)),!(Ot instanceof Float32Array||Ot instanceof Int32Array||Ot instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${Ot.constructor.name}`)});const ut=new Uint8Array(ct);let At=0;return _t.forEach(Ot=>{ut.set(new Uint8Array(Ot.buffer),At),At+=Ot.byteLength}),ut.buffer}const y=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function F(Q){return y?Buffer.byteLength(Q,"utf8"):new Blob([Q]).size}function tt(Q){if(y)return Buffer.from(Q).toString("base64");const ct=new Uint8Array(Q);let _t="";for(let ut=0,At=ct.length;ut<At;ut++)_t+=String.fromCharCode(ct[ut]);return btoa(_t)}function at(Q){if(y){const ut=Buffer.from(Q,"base64");return ut.buffer.slice(ut.byteOffset,ut.byteOffset+ut.byteLength)}const ct=atob(Q),_t=new Uint8Array(ct.length);for(let ut=0;ut<ct.length;++ut)_t.set([ct.charCodeAt(ut)],ut);return _t.buffer}function j(Q){return A.w.join(Q)}function w(Q){for(Q=Q.trim();Q.endsWith("/");)Q=Q.slice(0,Q.length-1);const _t=Q.split("/");return _t[_t.length-1]}function x(Q,ct){const _t={modelTopology:Q.modelTopology,format:Q.format,generatedBy:Q.generatedBy,convertedBy:Q.convertedBy,weightsManifest:ct};return null!=Q.signature&&(_t.signature=Q.signature),null!=Q.userDefinedMetadata&&(_t.userDefinedMetadata=Q.userDefinedMetadata),null!=Q.modelInitializer&&(_t.modelInitializer=Q.modelInitializer),null!=Q.initializerSignature&&(_t.initializerSignature=Q.initializerSignature),null!=Q.trainingConfig&&(_t.trainingConfig=Q.trainingConfig),_t}function b(Q,ct,_t){const ut={modelTopology:Q.modelTopology,format:Q.format,generatedBy:Q.generatedBy,convertedBy:Q.convertedBy};if(null!=Q.trainingConfig&&(ut.trainingConfig=Q.trainingConfig),null!=Q.weightsManifest){if(!ct)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!_t)throw new Error("modelJSON has weightsManifest but weightData is null");ut.weightSpecs=ct,ut.weightData=_t}return null!=Q.signature&&(ut.signature=Q.signature),null!=Q.userDefinedMetadata&&(ut.userDefinedMetadata=Q.userDefinedMetadata),null!=Q.modelInitializer&&(ut.modelInitializer=Q.modelInitializer),null!=Q.initializerSignature&&(ut.initializerSignature=Q.initializerSignature),ut}function i(Q,ct){return G.apply(this,arguments)}function G(){return(G=(0,p.Z)(function*(Q,ct){let _t,ut;return null!=Q.weightsManifest&&([_t,ut]=yield ct(Q.weightsManifest)),b(Q,_t,ut)})).apply(this,arguments)}function ft(Q){if(Q.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==Q.modelTopology?0:F(JSON.stringify(Q.modelTopology)),weightSpecsBytes:null==Q.weightSpecs?0:F(JSON.stringify(Q.weightSpecs)),weightDataBytes:null==Q.weightData?0:new A.w(Q.weightData).byteLength}}function Y(Q){const ct=[];for(const _t of Q)ct.push(..._t.weights);return ct}},20320:(rt,H,o)=>{"use strict";o.d(H,{ID:()=>B,Ny:()=>V,gw:()=>O,h1:()=>S,xQ:()=>v});var p=o(15861),P=o(45359),I=o(50679);const f="://";class v{constructor(){this.managers={}}static getInstance(){return null==v.instance&&(v.instance=new v),v.instance}static registerManager(T,K){(0,P.hu)(null!=T,()=>"scheme must not be undefined or null."),T.endsWith(f)&&(T=T.slice(0,T.indexOf(f))),(0,P.hu)(T.length>0,()=>"scheme must not be an empty string.");const it=v.getInstance();(0,P.hu)(null==it.managers[T],()=>`A model store manager is already registered for scheme '${T}'.`),it.managers[T]=K}static getManager(T){const K=v.getInstance().managers[T];if(null==K)throw new Error(`Cannot find model manager for scheme '${T}'`);return K}static getSchemes(){return Object.keys(v.getInstance().managers)}}function A(E){if(-1===E.indexOf(f))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${v.getSchemes().join(",")}`);return{scheme:E.split(f)[0],path:E.split(f)[1]}}function _(E,T){return C.apply(this,arguments)}function C(){return(C=(0,p.Z)(function*(E,T,K=!1){(0,P.hu)(E!==T,()=>`Old path and new path are the same: '${E}'`);const it=I.U3.getLoadHandlers(E);(0,P.hu)(it.length>0,()=>`Copying failed because no load handler is found for source URL ${E}.`),(0,P.hu)(it.length<2,()=>`Copying failed because more than one (${it.length}) load handlers for source URL ${E}.`);const J=it[0],y=I.U3.getSaveHandlers(T);(0,P.hu)(y.length>0,()=>`Copying failed because no save handler is found for destination URL ${T}.`),(0,P.hu)(y.length<2,()=>`Copying failed because more than one (${it.length}) save handlers for destination URL ${T}.`);const F=y[0],tt=A(E).scheme,at=A(E).path,j=tt===A(E).scheme,w=yield J.load();K&&j&&(yield v.getManager(tt).removeModel(at));const x=yield F.save(w);return K&&!j&&(yield v.getManager(tt).removeModel(at)),x.modelArtifactsInfo})).apply(this,arguments)}function S(){return L.apply(this,arguments)}function L(){return(L=(0,p.Z)(function*(){const E=v.getSchemes(),T={};for(const K of E){const it=yield v.getManager(K).listModels();for(const J in it)T[K+f+J]=it[J]}return T})).apply(this,arguments)}function O(E){return N.apply(this,arguments)}function N(){return(N=(0,p.Z)(function*(E){const T=A(E);return v.getManager(T.scheme).removeModel(T.path)})).apply(this,arguments)}function B(E,T){return z.apply(this,arguments)}function z(){return(z=(0,p.Z)(function*(E,T){return _(E,T,!1)})).apply(this,arguments)}function V(E,T){return U.apply(this,arguments)}function U(){return(U=(0,p.Z)(function*(E,T){return _(E,T,!0)})).apply(this,arguments)}},50679:(rt,H,o)=>{"use strict";o.d(H,{U3:()=>p,pS:()=>I,rM:()=>v,tf:()=>P,yB:()=>f});class p{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==p.instance&&(p.instance=new p),p.instance}static registerSaveRouter(_){p.getInstance().saveRouters.push(_)}static registerLoadRouter(_){p.getInstance().loadRouters.push(_)}static getSaveHandlers(_){return p.getHandlers(_,"save")}static getLoadHandlers(_,C){return p.getHandlers(_,"load",C)}static getHandlers(_,C,S){const L=[];return("load"===C?p.getInstance().loadRouters:p.getInstance().saveRouters).forEach(N=>{const B=N(_,S);null!==B&&L.push(B)}),L}}const P=A=>p.registerSaveRouter(A),I=A=>p.registerLoadRouter(A),f=A=>p.getSaveHandlers(A),v=(A,_)=>p.getLoadHandlers(A,_)},81352:(rt,H,o)=>{"use strict";o.d(H,{J:()=>p});const p={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},34251:(rt,H,o)=>{"use strict";o.d(H,{$HU:()=>mn,$g6:()=>Be,$w:()=>ie,Acj:()=>Bt,BMI:()=>Pe,BiW:()=>Dn,Byc:()=>ct,CAk:()=>Tn,CQl:()=>Ss,D2d:()=>Vs,DlI:()=>Ns,Eh3:()=>i,FKq:()=>Ws,G3Y:()=>ns,GBy:()=>je,Gcp:()=>yt,HEU:()=>we,HZH:()=>fn,Hhh:()=>oe,Hmb:()=>Zn,IKK:()=>_,IMb:()=>T,J$2:()=>$e,J7O:()=>pe,J_u:()=>Ce,JhU:()=>V,Kgp:()=>As,L8s:()=>$s,Ly9:()=>F,M2y:()=>L,MIZ:()=>es,MRv:()=>Fs,MZg:()=>Tt,NEP:()=>g,NZg:()=>rn,O3z:()=>Ks,OAf:()=>Te,OR:()=>ce,OU7:()=>Oe,OV7:()=>dn,Omj:()=>Ne,Oyi:()=>B,PYm:()=>vt,PhF:()=>Bs,QCc:()=>z,QRR:()=>At,Qg5:()=>Zt,QiL:()=>pr,Qvg:()=>re,RFZ:()=>at,ROF:()=>U,RQH:()=>Yn,RuY:()=>is,SIB:()=>se,SX0:()=>Ie,SYM:()=>p,SbG:()=>On,SpW:()=>I,T0n:()=>Ot,TQc:()=>ks,TR1:()=>Q,ToN:()=>ss,Tr8:()=>he,Uyb:()=>ne,VGw:()=>P,Vbg:()=>Ke,VcC:()=>ut,VfG:()=>dt,Vn9:()=>mt,W0H:()=>jn,XDQ:()=>rs,XLW:()=>K,XkS:()=>ts,Xze:()=>v,Y0y:()=>pt,YFo:()=>ot,YoZ:()=>ve,ZbH:()=>Z,ZjV:()=>Cn,Zz9:()=>x,_JP:()=>qn,_V0:()=>te,_Yw:()=>Ls,_k9:()=>E,_tC:()=>Sn,a5O:()=>Jn,aJk:()=>S,avt:()=>Se,b9H:()=>ls,bK0:()=>js,bV0:()=>Ve,c17:()=>Ye,cWu:()=>Gs,cie:()=>Mt,cye:()=>Ds,dDz:()=>Cs,deh:()=>ae,dpD:()=>Ms,e07:()=>xs,e0R:()=>Rn,e6w:()=>Rs,e7N:()=>hn,eBW:()=>os,eEB:()=>tt,eZ0:()=>Ht,ekb:()=>Yt,gJX:()=>j,h8e:()=>as,hCO:()=>y,hGc:()=>Ae,hdR:()=>Qe,i5y:()=>Us,iHb:()=>_t,iJz:()=>X,iWB:()=>ze,iZT:()=>D,ik2:()=>Pt,jMg:()=>N,jQk:()=>Hs,jQs:()=>We,jeX:()=>de,kU:()=>wt,kpP:()=>Jt,kuV:()=>Ts,luS:()=>Ln,lyA:()=>Os,mKl:()=>An,mTV:()=>bn,mc4:()=>Wt,mhS:()=>G,mm_:()=>f,n9L:()=>gn,nhH:()=>Nn,nr8:()=>In,o0g:()=>ws,o2y:()=>st,oFR:()=>wn,oHH:()=>_e,oT6:()=>A,p2w:()=>Qn,p4S:()=>ee,pe_:()=>Is,q1x:()=>fe,q2K:()=>Ue,q8u:()=>Fe,qCd:()=>jt,qIC:()=>kt,qWM:()=>Hn,qi_:()=>Dt,qkr:()=>Ps,qw7:()=>O,r7n:()=>Je,s1s:()=>Pn,sEM:()=>Mn,sHE:()=>Ee,sJF:()=>C,sL$:()=>xt,usg:()=>us,uv1:()=>Vn,vFR:()=>Re,vtC:()=>sn,vwp:()=>Kt,w3H:()=>pn,w6g:()=>Rt,wUP:()=>ft,wYB:()=>zs,wYn:()=>Kn,we_:()=>fr,wm:()=>Y,wx7:()=>Zs,x12:()=>lt,xJR:()=>Gn,xQA:()=>Xn,xnO:()=>w,y7R:()=>Ct,yQU:()=>bs,yj2:()=>b,zbQ:()=>qt,zvY:()=>J,zws:()=>it});const p="Abs",P="Acos",I="Acosh",f="Add",v="AddN",A="All",_="Any",C="ArgMax",S="ArgMin",L="Asin",O="Asinh",N="Atan",B="Atanh",z="Atan2",V="AvgPool",U="AvgPoolGrad",E="AvgPool3D",T="AvgPool3DGrad",K="BatchMatMul",it="BatchToSpaceND",J="Bincount",y="BitwiseAnd",F="BroadcastTo",tt="BroadcastArgs",at="Cast",j="Ceil",w="ClipByValue",x="Complex",b="ComplexAbs",i="Concat",G="Conv2D",ft="Conv2DBackpropFilter",Y="Conv2DBackpropInput",lt="Conv3D",st="Conv3DBackpropFilterV2",Pt="Conv3DBackpropInputV2",Wt="Cos",Q="Cosh",ct="Cumprod",_t="Cumsum",ut="CropAndResize",At="DenseBincount",Ot="DepthToSpace",Mt="DepthwiseConv2dNative",xt="DepthwiseConv2dNativeBackpropFilter",Ct="DepthwiseConv2dNativeBackpropInput",ie="Diag",ee="Dilation2D",Yt="Dilation2DBackpropInput",mt="Dilation2DBackpropFilter",Ae="Draw",_e="RealDiv",Be="Einsum",Ie="Elu",we="EluGrad",Ne="Erf",Qe="Equal",g="Exp",ot="ExpandDims",pt="Expm1",Kt="FFT",ae="Fill",ne="FlipLeftRight",ce="Floor",de="FloorDiv",Ee="FusedBatchNorm",Dt="GatherV2",fe="GatherNd",D="Greater",Bt="GreaterEqual",X="Identity",Zt="IFFT",Ce="Imag",Se="IsFinite",ze="IsInf",Je="IsNan",$e="LeakyRelu",sn="Less",Tn="LessEqual",hn="LinSpace",Z="Log",wt="Log1p",vt="LogicalAnd",dt="LogicalNot",Tt="LogicalOr",Rt="LogicalXor",jt="LogSoftmax",kt="LowerBound",Ht="LRN",oe="LRNGrad",pe="MatrixBandPart",ve="Max",Pe="Maximum",bn="MaxPool",dn="MaxPoolGrad",Te="MaxPool3D",Oe="MaxPool3DGrad",Re="MaxPoolWithArgmax",Ue="Mean",Ye="Min",Fe="Minimum",We="MirrorPad",Ke="Mod",rn="Multinomial",Kn="Multiply",Ts="Neg",bs="NotEqual",Vn="NonMaxSuppressionV3",Ds="NonMaxSuppressionV4",jn="NonMaxSuppressionV5",Hn="OnesLike",fr="OneHot",pr="Pack",Os="PadV2",As="Pool",Is="Pow",ws="Prelu",Ns="Prod",Cs="RaggedGather",Ss="RaggedRange",Dn="RaggedTensorToTensor",Rs="Range",Gn="Real",mn="Reciprocal",Ps="Relu",fn="Reshape",Ms="ResizeNearestNeighbor",Zn="ResizeNearestNeighborGrad",Ls="ResizeBilinear",qt="ResizeBilinearGrad",On="Relu6",An="Reverse",xs="Round",Ve="Rsqrt",Xn="ScatterNd",se="TensorScatterUpdate",In="SearchSorted",Bs="Select",wn="Selu",Qn="Slice",Yn="Sin",zs="Sinh",Us="Sign",Jn="Sigmoid",Fs="Softplus",Ws="Sqrt",je="Sum",ks="SpaceToBatchND",$s="SplitV",yt="Softmax",Ks="SparseFillEmptyRows",Nn="SparseReshape",pn="SparseSegmentMean",Cn="SparseSegmentSum",Vs="SparseToDense",Sn="SquaredDifference",js="Square",Rn="StaticRegexReplace",Hs="StridedSlice",qn="StringNGrams",Pn="StringSplit",ts="StringToHashBucketFast",he="Sub",Mn="Tan",es="Tanh",gn="Tile",Gs="TopK",Zs="Transform",ns="Transpose",Jt="Unique",ss="Unpack",re="UnsortedSegmentSum",rs="UpperBound",is="ZerosLike",as="Step",os="FromPixels",ls="RotateWithOffset",us="_FusedMatMul",te="FusedConv2D",Ln="FusedDepthwiseConv2D"},8987:(rt,H,o)=>{"use strict";o.d(H,{Li:()=>L,T3:()=>B,bt:()=>N,nE:()=>O,pI:()=>A,tr:()=>C,uk:()=>_,wC:()=>S});var p=o(5527),P=o(32918),I=o(12932);const f=(0,P.R)("kernelRegistry",()=>new Map),v=(0,P.R)("gradRegistry",()=>new Map);function A(V,U){const E=z(V,U);return f.get(E)}function _(V){return v.get(V)}function C(V){const U=f.entries(),E=[];for(;;){const{done:T,value:K}=U.next();if(T)break;const[it,J]=K,[y]=it.split("_");y===V&&E.push(J)}return E}function S(V){const{kernelName:U,backendName:E}=V,T=z(U,E);f.has(T)&&I.Z(`The kernel '${U}' for backend '${E}' is already registered`),f.set(T,V)}function L(V){const{kernelName:U}=V;v.has(U)&&(0,p.OB)().getBool("DEBUG")&&I.Z(`Overriding the gradient for '${U}'`),v.set(U,V)}function O(V,U){const E=z(V,U);if(!f.has(E))throw new Error(`The kernel '${V}' for backend '${U}' is not registered`);f.delete(E)}function N(V){if(!v.has(V))throw new Error(`The gradient '${V}' for backend is not registered`);v.delete(V)}function B(V,U){C(V).forEach(T=>{S(Object.assign({},T,{backendName:U}))})}function z(V,U){return`${U}_${V}`}},53894:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{confusionMatrix:()=>S});var p=o(1257),P=o(45359),I=o(3062),f=o(15592),v=o(5618),A=o(44195),_=o(19194);const S=(0,A.op)({confusionMatrix_:function C(L,O,N){const B=(0,p._1)(L,"labels","confusionMatrix"),z=(0,p._1)(O,"predictions","confusionMatrix");P.hu(null==N||N>0&&Number.isInteger(N),()=>`If provided, numClasses must be a positive integer, but got ${N}`),P.hu(1===B.rank,()=>`Expected the rank of labels to be 1, but got ${B.rank}`),P.hu(1===z.rank,()=>`Expected the rank of predictions to be 1, but got ${z.rank}`),P.hu(B.shape[0]===z.shape[0],()=>`Mismatch in the number of examples: ${B.shape[0]} vs. ${z.shape[0]}. Labels and predictions should have the same number of elements.`),P.hu(N>0&&Number.isInteger(N),()=>`numClasses is required to be a positive integer, but got ${N}`);const V=(0,v.l)((0,I.p)(B,"int32"),N),U=(0,v.l)((0,I.p)(z,"int32"),N),E=(0,_.p)(V),T=(0,f.O)(E,U);return(0,I.p)(T,"int32")}})},64747:(rt,H,o)=>{"use strict";o.d(H,{Q:()=>_});var p=o(40687),P=o(34251),I=o(1257),f=o(45359);const _=(0,o(44195).op)({addN_:function A(C){f.hu(Array.isArray(C),()=>"The argument passed to tf.addN() must be a list of tensors"),f.hu(C.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${C.length}`);const S=C.map((N,B)=>(0,I._1)(N,`tensors${B}`,"addN")),L=S[0];return S.forEach(N=>{if(N.dtype!==L.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),S.forEach(N=>{if(!f.cO(N.shape,L.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),p.BV.runKernel(P.Xze,S)}})},30740:(rt,H,o)=>{"use strict";o.d(H,{z:()=>O});var p=o(1257),P=o(87066),I=o(64111),f=o(15592),v=o(48737),A=o(44195),_=o(86139),C=o(58317),S=o(25987);const O=(0,A.op)({basicLSTMCell_:function L(N,B,z,V,U,E){const T=(0,p._1)(N,"forgetBias","basicLSTMCell"),K=(0,p._1)(B,"lstmKernel","basicLSTMCell"),it=(0,p._1)(z,"lstmBias","basicLSTMCell"),J=(0,p._1)(V,"data","basicLSTMCell"),y=(0,p._1)(U,"c","basicLSTMCell"),F=(0,p._1)(E,"h","basicLSTMCell"),tt=(0,I.z)([J,F],1),at=(0,f.O)(tt,K),j=(0,P.I)(at,it),x=j.shape[1]/4,b=[j.shape[0],x],i=(0,C.t)(j,[0,0],b),G=(0,C.t)(j,[0,x],b),ft=(0,C.t)(j,[0,2*x],b),Y=(0,C.t)(j,[0,3*x],b),lt=(0,P.I)((0,v.d)((0,_.X)(i),(0,S.A)(G)),(0,v.d)(y,(0,_.X)((0,P.I)(T,ft))));return[lt,(0,v.d)((0,S.A)(lt),(0,_.X)(Y))]}})},78778:(rt,H,o)=>{"use strict";o.d(H,{y:()=>_});var p=o(40687),P=o(34251),I=o(1257),f=o(45359);const _=(0,o(44195).op)({bitwiseAnd_:function A(C,S){const L=(0,I._1)(C,"x","bitwiseAnd"),O=(0,I._1)(S,"y","bitwiseAnd");if(!(0,f.cO)(L.shape,O.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${L.shape}, y: ${O.shape}`);if("int32"!==L.dtype||"int32"!==O.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${L.dtype} and type of y: ${O.dtype}`);return p.BV.runKernel(P.hCO,{a:L,b:O})}})},23508:(rt,H,o)=>{"use strict";o.d(H,{a:()=>L});var p=o(15861),P=o(1257),I=o(45359),f=o(16117),v=o(25715),A=o(2494),_=o(83360);function S(){return(S=(0,p.Z)(function*(O,N,B){const z=(0,P._1)(O,"tensor","boolMask"),V=(0,P._1)(N,"mask","boolMask","bool"),U=B??0,E=V.rank,T=z.shape;I.hu(E>0,()=>"mask cannot be scalar"),I.k5(T.slice(U,U+E),V.shape,"mask's shape must match the first K dimensions of tensor's shape,");let K=1;for(let j=U;j<U+E;j++)K*=T[j];const it=T.slice(0,U).concat([K],T.slice(U+E)),J=(0,v.X)(z,it),y=(0,v.X)(V,[-1]),F=yield(0,_.i)(y),tt=(0,A.L)(F,[1]),at=(0,f.I)(J,tt,U);return O!==z&&z.dispose(),N!==V&&V.dispose(),tt.dispose(),J.dispose(),y.dispose(),F.dispose(),at})).apply(this,arguments)}const L=function C(O,N,B){return S.apply(this,arguments)}},74670:(rt,H,o)=>{"use strict";o.d(H,{X:()=>A});var p=o(40687),P=o(34251),I=o(1257);const A=(0,o(44195).op)({broadcastArgs_:function v(_,C){const S=(0,I._1)(_,"s0","broadcastArgs","int32"),L=(0,I._1)(C,"s1","broadcastArgs","int32");if(1!==S.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${S.rank}`);if(1!==L.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${L.rank}`);return p.BV.runKernel(P.eEB,{s0:S,s1:L})}})},19179:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{draw:()=>tt,fromPixels:()=>at,fromPixelsAsync:()=>T,toPixels:()=>y});var p=o(15861),P=o(40687),I=o(5527),f=o(34251),v=o(8987),A=o(4296),_=o(1257),C=o(3062),S=o(44195),L=o(72786);let O,N=!1;function B(j,w=3){if(w>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==j)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let x=!1,b=!1,i=!1,G=!1,ft=!1,Y=!1;if(j.data instanceof Uint8Array)x=!0;else if(typeof ImageData<"u"&&j instanceof ImageData)b=!0;else if(typeof HTMLVideoElement<"u"&&j instanceof HTMLVideoElement)i=!0;else if(typeof HTMLImageElement<"u"&&j instanceof HTMLImageElement)G=!0;else if(null!=j.getContext)ft=!0;else{if(!(typeof ImageBitmap<"u"&&j instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${j.constructor.name}`);Y=!0}if(null!=(0,v.pI)(f.eBW,P.BV.backendName))return P.BV.runKernel(f.eBW,{pixels:j},{numChannels:w});const[st,Pt]=i?[j.videoWidth,j.videoHeight]:[j.width,j.height];let Wt,Q;if(ft)Wt=j.getContext("2d").getImageData(0,0,st,Pt).data;else if(b||x)Wt=j.data;else if(G||i||Y){if(null==O)if(typeof document>"u"){if(!(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u"))throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");O=new OffscreenCanvas(1,1).getContext("2d")}else O=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});O.canvas.width=st,O.canvas.height=Pt,O.drawImage(j,0,0,st,Pt),Wt=O.getImageData(0,0,st,Pt).data}if(4===w)Q=new Int32Array(Wt);else{const _t=st*Pt;Q=new Int32Array(_t*w);for(let ut=0;ut<_t;ut++)for(let At=0;At<w;++At)Q[ut*w+At]=Wt[4*ut+At]}return(0,L.w)(Q,[Pt,st,w],"int32")}function T(j){return K.apply(this,arguments)}function K(){return(K=(0,p.Z)(function*(j,w=3){let x=null;if((0,I.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function E(j){return function V(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}()&&!(j instanceof ImageBitmap)&&function U(j){return null!=j&&0!==j.width&&0!==j.height}(j)&&!function z(j){return null!=j&&j.data instanceof Uint8Array}(j)}(j)){let b;try{b=yield createImageBitmap(j,{premultiplyAlpha:"none"})}catch{b=null}x=null!=b&&b.width===j.width&&b.height===j.height?b:j}else x=j;return B(x,w)})).apply(this,arguments)}function it(j){if(2!==j.rank&&3!==j.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${j.rank}.`);const w=2===j.rank?1:j.shape[2];if(w>4||2===w)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${w}`);if("float32"!==j.dtype&&"int32"!==j.dtype)throw new Error(`Unsupported type for toPixels: ${j.dtype}. Please use float32 or int32 tensors.`)}function y(j,w){return F.apply(this,arguments)}function F(){return(F=(0,p.Z)(function*(j,w){let x=(0,_._1)(j,"img","toPixels");if(!(j instanceof A.es)){const st=x;x=(0,C.p)(st,"int32"),st.dispose()}it(x);const[b,i]=x.shape.slice(0,2),G=2===x.rank?1:x.shape[2],ft=yield x.data(),Y="float32"===x.dtype?255:1,lt=new Uint8ClampedArray(i*b*4);for(let st=0;st<b*i;++st){const Pt=[0,0,0,255];for(let Q=0;Q<G;Q++){const ct=ft[st*G+Q];if("float32"===x.dtype){if(ct<0||ct>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${ct}.`)}else if("int32"===x.dtype&&(ct<0||ct>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${ct}.`);1===G?(Pt[0]=ct*Y,Pt[1]=ct*Y,Pt[2]=ct*Y):Pt[Q]=ct*Y}const Wt=4*st;lt[Wt+0]=Math.round(Pt[0]),lt[Wt+1]=Math.round(Pt[1]),lt[Wt+2]=Math.round(Pt[2]),lt[Wt+3]=Math.round(Pt[3])}if(null!=w){N||null!=(0,v.pI)(f.hGc,P.BV.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),N=!0),w.width=i,w.height=b;const st=w.getContext("2d"),Pt=new ImageData(lt,i,b);st.putImageData(Pt,0,0)}return x!==j&&x.dispose(),lt})).apply(this,arguments)}function tt(j,w,x){let b=(0,_._1)(j,"img","draw");if(!(j instanceof A.es)){const ft=b;b=(0,C.p)(ft,"int32"),ft.dispose()}it(b),function J(j){const w=j?.alpha||1;if(w>1||w<0)throw new Error(`Alpha value ${w} is suppoed to be in range [0 - 1].`)}(x?.imageOptions),P.BV.runKernel(f.hGc,{image:b},{canvas:w,options:x})}const at=(0,S.op)({fromPixels_:B})},52411:(rt,H,o)=>{"use strict";o.d(H,{K:()=>A});var p=o(40687),P=o(34251),I=o(1257);const A=(0,o(44195).op)({diag_:function v(_){const S={x:(0,I._1)(_,"x","diag")};return p.BV.runKernel(P.$w,S)}})},16858:(rt,H,o)=>{"use strict";o.d(H,{E:()=>v});var p=o(1257),P=o(45359);const v=(0,o(44195).op)({ensureShape_:function f(A,_){const C=(0,p._1)(A,"x","ensureShape","string_or_numeric");if(!(0,P.DK)(C.shape,_))throw new Error(`EnsureShape: Shape of tensor ${C.shape} is not compatible with expected shape ${_}`);return A}})},15739:(rt,H,o)=>{"use strict";o.d(H,{d:()=>A});var p=o(40687),P=o(34251),I=o(1257);const A=(0,o(44195).op)({gatherND_:function v(_,C){const S=(0,I._1)(C,"indices","gatherND","int32"),O={params:(0,I._1)(_,"x","gatherND","string_or_numeric"),indices:S};return p.BV.runKernel(P.q1x,O)}})},39859:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{prepareAndValidate:()=>P});var p=o(45359);function P(I,f){const v=I.shape.length,A=f.shape.length;if(v<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${v}.`);if(A<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${A}.`);if("int32"!==f.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${f.dtype}.`);if(f.shape[A-1]>v)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${f.shape[A-1]} vs. ${v}`);if(0===(0,p.NA)(I.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${I.shape}.`);const _=f.shape,C=_[_.length-1];let S=1;for(let z=0;z<_.length-1;++z)S*=_[z];const L=I.shape,O=_.slice();O.pop();let N=1;for(let z=C;z<v;++z)N*=L[z],O.push(L[z]);const B=[...(0,p.e3)(I.shape).map(z=>z/N),1].slice(0,C);return[O,S,N,B]}},81092:(rt,H,o)=>{"use strict";o.d(H,{V:()=>_});var p=o(15861),P=o(1257),I=o(45359),f=o(23905);function A(){return(A=(0,p.Z)(function*(C,S,L=1){const O=(0,P._1)(C,"predictions","inTopK"),N=(0,P._1)(S,"targets","inTopK");(0,I.hu)(O.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${O.rank}`),(0,I.hu)(O.rank-1===N.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${O.rank} and targets rank ${N.rank}`),(0,I.k5)(O.shape.slice(0,O.shape.length-1),N.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const B=O.shape[O.shape.length-1];(0,I.hu)(L>0&&L<=B,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${B}), but got ${L}`);const z=yield O.data(),V=yield N.data(),[U,E]=[z.length/B,B],T=(0,I.WP)("bool",U);for(let K=0;K<U;K++){const it=K*E,J=z.subarray(it,it+E),y=[];for(let F=0;F<J.length;F++)y.push({value:J[F],index:F});y.sort((F,tt)=>tt.value-F.value),T[K]=0;for(let F=0;F<L;F++)if(y[F].index===V[K]){T[K]=1;break}}return C!==O&&O.dispose(),S!==N&&N.dispose(),(0,f.X)(T,N.shape,"bool")})).apply(this,arguments)}const _=function v(C,S){return A.apply(this,arguments)}},57787:(rt,H,o)=>{"use strict";o.d(H,{S:()=>I});var p=o(40687),P=o(34251);function I(f,v,A){if(A<=0)throw new Error("The number of values should be positive.");return p.BV.runKernel(P.e7N,{},{start:f,stop:v,num:A})}},9483:(rt,H,o)=>{"use strict";o.d(H,{e:()=>P});var p=o(6230);function P(I,f){return(0,p.z)(I,f,"left")}},49448:(rt,H,o)=>{"use strict";o.d(H,{I:()=>A});var p=o(40687),P=o(34251),I=o(1257);const A=(0,o(44195).op)({maxPoolWithArgmax_:function v(_,C,S,L,O=!1){const B={x:(0,I._1)(_,"x","maxPoolWithArgmax")},V=p.BV.runKernel(P.vFR,B,{filterSize:C,strides:S,pad:L,includeBatchInIndex:O});return{result:V[0],indexes:V[1]}}})},51273:(rt,H,o)=>{"use strict";o.d(H,{r:()=>_});var p=o(15592),P=o(84968),I=o(25715),f=o(4296),v=o(1257),A=o(45359);function _(C,S,{indexing:L="xy"}={}){if("xy"!==L&&"ij"!==L)throw new TypeError(`${L} is not a valid third argument to meshgrid`);if(void 0===C)return[];let O=(0,v._1)(C,"x","meshgrid",C instanceof f.es?C.dtype:"float32");if(void 0===S)return[O];let N=(0,v._1)(S,"y","meshgrid",S instanceof f.es?S.dtype:"float32");const B=(0,A.NA)(O.shape),z=(0,A.NA)(N.shape);return"xy"===L?(O=(0,I.X)(O,[1,-1]),N=(0,I.X)(N,[-1,1]),[(0,p.O)((0,P.i)([z,1],O.dtype),O),(0,p.O)(N,(0,P.i)([1,B],N.dtype))]):(O=(0,I.X)(O,[-1,1]),N=(0,I.X)(N,[1,-1]),[(0,p.O)(O,(0,P.i)([1,z],O.dtype)),(0,p.O)((0,P.i)([B,1],N.dtype),N)])}},27789:(rt,H,o)=>{"use strict";o.d(H,{p:()=>N});var p=o(27664),P=o(1257),I=o(45359),f=o(87066),v=o(93530),A=o(48737),_=o(44195),C=o(82962),S=o(48661),L=o(61191);const N=(0,_.op)({movingAverage_:function O(B,z,V,U,E=!0){const T=(0,P._1)(B,"v","movingAverage"),K=(0,P._1)(z,"x","movingAverage"),it=(0,P._1)(V,"decay","movingAverage");(0,p.assertTypesMatch)(T,K),I.hu(I.cO(T.shape,K.shape),()=>"Shape mismatch in v and x");const J=(0,S.i)(1),y=(0,L.l)(J,it);let F=(0,A.d)((0,L.l)(K,T),y);if(E){I.hu(null!=U,()=>"When using zeroDebias: true, step is required.");const tt=(0,P._1)(U,"step","movingAverage");F=(0,v.h)(F,(0,L.l)(J,(0,C.s)(it,tt)))}return(0,f.I)(T,F)}})},4616:(rt,H,o)=>{"use strict";o.d(H,{r:()=>f});var p=o(1257);const f=(0,o(44195).op)({multiRNNCell_:function I(v,A,_,C){const S=(0,p._1)(A,"data","multiRNNCell"),L=(0,p.sI)(_,"c","multiRNNCell"),O=(0,p.sI)(C,"h","multiRNNCell");let N=S;const B=[];for(let U=0;U<v.length;U++){const E=v[U](N,L[U],O[U]);B.push(E[0]),B.push(E[1]),N=E[1]}const z=[],V=[];for(let U=0;U<B.length;U+=2)z.push(B[U]),V.push(B[U+1]);return[z,V]}})},54960:(rt,H,o)=>{"use strict";o.d(H,{S:()=>_});var p=o(40687),P=o(34251),I=o(1257),f=o(44195),v=o(25715);const _=(0,f.op)({multinomial_:function A(C,S,L,O=!1){const N=(0,I._1)(C,"logits","multinomial"),B=N.size,z=N.rank;if(B<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${B}.`);if(z>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${z}`);L=L||Math.random();const U={logits:1===z?(0,v.X)(N,[1,-1]):N},T=p.BV.runKernel(P.NZg,U,{numSamples:S,seed:L,normalized:O});return 1===z?(0,v.X)(T,[T.size]):T}})},44195:(rt,H,o)=>{"use strict";o.d(H,{op:()=>f,z:()=>I});var p=o(40687),P=o(45359);const I="__op";function f(v){const A=Object.keys(v);if(1!==A.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${A.length} keys.`);let _=A[0];const C=v[_];_.endsWith("_")&&(_=_.substring(0,_.length-1)),_+=I;const S=(...L)=>{p.BV.startScope(_);try{const O=C(...L);return(0,P.tI)(O)&&console.error("Cannot return a Promise inside of tidy."),p.BV.endScope(O),O}catch(O){throw p.BV.endScope(null),O}};return Object.defineProperty(S,"name",{value:_,configurable:!0}),S}},8449:(rt,H,o)=>{"use strict";o.d(H,{$6P:()=>A.$,$Gn:()=>xt.$,$QV:()=>At.$,$gW:()=>Rs.$,$i:()=>Gs.$,$r2:()=>ci,AEp:()=>as.A,AKD:()=>Ie.A,AL3:()=>Cs.A,B10:()=>Yt.B,BHj:()=>ui,Bfx:()=>gr.B,C80:()=>z.C,CmS:()=>vt.C,CnO:()=>Vs.C,DgJ:()=>g.D,Dxk:()=>it.D,E4h:()=>T.E,EDe:()=>Qe.E,Fp7:()=>pe.F,G9k:()=>Tn.G,GRh:()=>_n.G,GWj:()=>Ee.G,GYS:()=>In.G,GaM:()=>Qs.G,Gg6:()=>ea.G,Gi7:()=>We.G,HHK:()=>yn.H,HvI:()=>Tt.H,IHx:()=>f.I,Ip$:()=>bn.I,Iqj:()=>fe.I,Izb:()=>st.I,J69:()=>Te.J,JY5:()=>J.J,JpU:()=>jn.J,K5V:()=>jt.K,KOy:()=>Or.K,Ka3:()=>mt.K,Khb:()=>P.K,Krr:()=>Z.K,L9e:()=>Zs.L,LGj:()=>Ls.L,LTh:()=>Ue.L,M25:()=>xs.M,MB5:()=>Vr,MNy:()=>Pt.M,N2O:()=>Hn.N,N89:()=>mn.N,NMM:()=>zs.N,NTj:()=>Be.N,NXj:()=>ss.N,Nbs:()=>Jt.N,NqF:()=>C.N,O$l:()=>yt.O,ODp:()=>je.O,OI3:()=>oe.O,ORZ:()=>is.O,P84:()=>Tr.P,PAt:()=>Q.P,PYB:()=>ft.P,Pg0:()=>ta.P,QBD:()=>v.Q,QEs:()=>he.Q,Qqt:()=>Kt.Q,Quu:()=>bs.Q,RRF:()=>ls.R,R_K:()=>Ks.R,S0v:()=>Ss.S,SDf:()=>Bs.S,SJ_:()=>Kn.S,SX3:()=>sn.S,SmN:()=>Cn.S,Smz:()=>rs.S,Sxn:()=>Pn.S,TN_:()=>Ps.T,Tek:()=>ct.T,Two:()=>_r.T,U8D:()=>Fs.U,UFq:()=>j.U,UWc:()=>Ce.U,UYe:()=>Ve.U,U_I:()=>Ws.U,V3u:()=>qs.V,VD$:()=>Ys.V,VT$:()=>Gn.V,VV$:()=>Re.V,VdP:()=>Ye.V,VfV:()=>O.V,Vl2:()=>Mn.V,W76:()=>Ts.W,WVs:()=>Dn.W,WYO:()=>we.W,WmZ:()=>Ae.W,WnP:()=>p.W,Wvh:()=>Rn.W,XAC:()=>js.X,XD2:()=>ks.X,XLQ:()=>se.X,XeE:()=>os.X,XsQ:()=>at.X,Xu6:()=>na.X,Xxe:()=>$s.X,YQQ:()=>Pe.Y,YjB:()=>_.Y,ZRM:()=>L.Z,Z_8:()=>ca,ZaL:()=>Wt.Z,__u:()=>I._,_b3:()=>es._,_sB:()=>ve._,anm:()=>br.a,arb:()=>Er.a,asL:()=>X.a,bc:()=>_t.b,bp0:()=>Us.b,brS:()=>Bt.b,btT:()=>Xn.b,cM7:()=>hn.c,d2q:()=>pt.d,d9m:()=>Je.d,d9v:()=>G.d,dC7:()=>Ke.d,d_R:()=>ws.d,dbB:()=>wr.d,diP:()=>wn.d,dt4:()=>ae.d,e_t:()=>wt.e,eab:()=>Ht.e,egP:()=>kt.e,ers:()=>Ir.e,f3b:()=>w.f,f9Y:()=>Mt.f,fBT:()=>Hs.f,fvJ:()=>B.f,gME:()=>lt.g,gWQ:()=>dn.g,h62:()=>gn.h,hJK:()=>Rt.h,hg7:()=>Xs.h,hi7:()=>ze.h,hiC:()=>_e.h,hlL:()=>de.h,i2d:()=>Se.i,iD$:()=>Jn.i,iUl:()=>i.i,iUs:()=>Ds.i,imm:()=>er,itS:()=>vr.i,iyy:()=>ce.i,jZU:()=>pn.j,knu:()=>ns.k,koy:()=>Os.k,kp_:()=>qn.k,kwC:()=>An.k,lGY:()=>Is.l,l_t:()=>dt.l,lfX:()=>Vn.l,lls:()=>si.l,luU:()=>re.l,mCk:()=>Ot.m,mDi:()=>b.m,mG2:()=>Yn.m,mew:()=>_n.m,nGf:()=>Ms.n,nTT:()=>ee.n,odF:()=>us.o,op:()=>tr.op,p0P:()=>Sn.p,p3b:()=>y.p,p4s:()=>Dr.p,pNR:()=>pr.p,pUJ:()=>cs.p,p_:()=>ri.p,pdZ:()=>ut.p,pe5:()=>qt.p,pjt:()=>D.p,pju:()=>x.p,ppE:()=>ie.p,pyx:()=>Ne.p,qNN:()=>ot.q,qPi:()=>Dt.q,rVs:()=>jr,rq4:()=>rn.r,ruB:()=>Zn.r,rvX:()=>qe.r,ry_:()=>Oe.r,sQ3:()=>Ns.s,snQ:()=>Ar.s,sx7:()=>Qn.s,t$B:()=>ne.t,t1L:()=>As.t,tPi:()=>Nn.t,tdS:()=>li,tgs:()=>K.t,uN7:()=>Bn,uR5:()=>U.u,vHJ:()=>S.v,vku:()=>fr.v,w6H:()=>On.w,wOQ:()=>te.w,wQq:()=>Fe.w,wS1:()=>V.w,wx0:()=>ts.w,wzB:()=>fn.w,xVT:()=>Zt.x,xZs:()=>yr.x,yE8:()=>F.y,yXz:()=>Ln.y,ycw:()=>tt.y,z4N:()=>N.z,zEQ:()=>E.z,zN1:()=>$e.z,zbp:()=>Ct.z,zcT:()=>Js.z,zoF:()=>Y.z,zvA:()=>tr.z});var p=o(26989),P=o(91184),I=o(15622),f=o(87066),v=o(64747),A=o(51862),_=o(40876),C=o(45784),S=o(78340),L=o(80586),O=o(38355),N=o(37881),B=o(25825),z=o(17932),V=o(6903),U=o(3075),E=o(30740),T=o(92782),K=o(35307),it=o(43174),J=o(24584),y=o(35346),F=o(27196),tt=o(78778),at=o(74670),j=o(90983),w=o(80582),x=o(3062),b=o(39723),i=o(46672),G=o(87315),ft=o(93037),Y=o(64111),lt=o(85702),st=o(83193),Pt=o(80763),Wt=o(44486),Q=o(28577),ct=o(84451),_t=o(98554),ut=o(15380),At=o(80325),Ot=o(19018),Mt=o(63237),xt=o(69267),Ct=o(67157),ie=o(62959),ee=o(43961),Yt=o(51172),mt=o(52411),Ae=o(22395),_e=o(93530),Be=o(94373),Ie=o(55106),we=o(55263),Ne=o(89529),Qe=o(16858),g=o(34456),ot=o(14634),pt=o(74279),Kt=o(5109),ae=o(77228),ne=o(85748),ce=o(7999),de=o(62787),Ee=o(8208),Dt=o(31030),fe=o(16117),D=o(54803),Bt=o(49886),X=o(51844),Zt=o(75622),Ce=o(48381),Se=o(6483),ze=o(59424),Je=o(82761),$e=o(22223),sn=o(57787),Tn=o(1523),hn=o(5919),Z=o(44088),wt=o(14034),vt=o(56455),dt=o(56735),Tt=o(93080),Rt=o(36399),jt=o(72693),kt=o(44574),Ht=o(9483),oe=o(15592),pe=o(33043),ve=o(12444),Pe=o(30481),bn=o(49448),dn=o(60765),Te=o(69357),Oe=o(51273),Re=o(69602),Ue=o(72684),Ye=o(84639),Fe=o(71612),We=o(11821),Ke=o(48737),rn=o(4616),Kn=o(54960),Ts=o(15048),bs=o(23062),Vn=o(5618),Ds=o(84968),jn=o(75034),Hn=o(1417),fr=o(20404),pr=o(20635),Os=o(3701),As=o(7435),Is=o(30395),ws=o(91640),Ns=o(82962),Cs=o(71584),Ss=o(43006),Dn=o(90794),Rs=o(44811),Gn=o(14764),mn=o(42312),Ps=o(44706),fn=o(98726),Ms=o(21246),Zn=o(76276),Ls=o(41442),qt=o(73961),On=o(56944),An=o(66027),xs=o(34831),Ve=o(98586),Xn=o(64917),se=o(25715),In=o(66825),Bs=o(12466),wn=o(41065),Qn=o(28095),Yn=o(72e3),zs=o(21974),Us=o(68893),Jn=o(48661),Fs=o(29614),Ws=o(36762),je=o(4893),ks=o(86139),$s=o(94058),yt=o(52438),Ks=o(319),Nn=o(58317),pn=o(96606),Cn=o(89131),Vs=o(26525),Sn=o(15332),js=o(38683),Rn=o(94487),Hs=o(89619),qn=o(79738),Pn=o(40527),ts=o(76065),he=o(1638),Mn=o(8874),es=o(70930),gn=o(7527),Gs=o(99539),Zs=o(2494),ns=o(57958),Jt=o(26034),ss=o(5367),re=o(61191),rs=o(69929),is=o(82500),as=o(25987),os=o(23905),ls=o(28472),us=o(54174),te=o(72786),Ln=o(84468),gr=o(12780),yr=o(42471),ta=o(40955),ea=o(42005),Xs=o(54927),na=o(87206),_r=o(18130),cs=o(47715),yn=o(92219),Qs=o(18556),Ys=o(15178),Er=o(12190),vr=o(83360),si=o(36467),Tr=o(23143),br=o(23508),Dr=o(19194),Or=o(93717),ri=o(27789),Ar=o(68647),Js=o(6230),Ir=o(86432),wr=o(15739),qe=o(4166),_n=o(71150),qs=o(81092),tr=o(44195),er=o(55877),Nr=o(66461),hs=o(39171),Cr=o(70068),nr=o(69595),tn=o(46346),ii=o(58941),sa=o(29475),ai=o(56407),sr=o(65043),Sr=o(67600),rr=o(72717),Rr=o(20591),Pr=o(6106),Mr=o(89358),Lr=o(11233),xr=o(51353),Br=o(87373),zr=o(62201),Ur=o(33316),Fr=o(24491),an=o(47388),ds=o(51695),ra=o(31663),ms=o(51433),ia=o(55006),fs=o(55158),aa=o(63566),ps=o(21745),oa=o(63609),gs=o(98181),la=o(59780),ys=o(13373),ua=o(8733),xn=o(15274),oi=o(17450),Wr=o(12310),kr=o(29703),$r=o(89399),Kr=o(95149);const Bn={fft:qn.k,ifft:Pn.S,rfft:he.Q,irfft:ts.w},li={hammingWindow:Nr.f,hannWindow:hs.l,frame:Cr.W,stft:nr.Z},ui={flipLeftRight:ii.V,grayscaleToRGB:sa.F,resizeNearestNeighbor:Br.j,resizeBilinear:xr.I,rgbToGrayscale:ai.A,rotateWithOffset:sr.f,cropAndResize:tn.B,nonMaxSuppression:Sr.o,nonMaxSuppressionAsync:rr.V,nonMaxSuppressionWithScore:Rr.t,nonMaxSuppressionWithScoreAsync:Pr.B,nonMaxSuppressionPadded:Mr.q,nonMaxSuppressionPaddedAsync:Lr.N,threshold:zr.L,transform:Ur.v},ci={bandPart:Fr.P,gramSchmidt:an.G,qr:ds.qr},Vr={absoluteDifference:ra.O,computeWeightedLoss:ms.m,cosineDistance:ia.Z,hingeLoss:fs.O,huberLoss:aa.H,logLoss:ps.g,meanSquaredError:oa.F,sigmoidCrossEntropy:gs.f,softmaxCrossEntropy:la.E},jr={sparseFillEmptyRows:ys.M,sparseReshape:ua.x,sparseSegmentMean:xn.S,sparseSegmentSum:oi.l},ca={stringNGrams:Wr.l,stringSplit:kr.S,stringToHashBucketFast:$r.I,staticRegexReplace:Kr.i}},1417:(rt,H,o)=>{"use strict";o.d(H,{N:()=>_});var p=o(1257),P=o(45359),I=o(15592),f=o(44195),v=o(25715);const _=(0,f.op)({outerProduct_:function A(C,S){const L=(0,p._1)(C,"v1","outerProduct"),O=(0,p._1)(S,"v2","outerProduct");P.hu(1===L.rank&&1===O.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${L.rank} and ${O.rank}.`);const N=(0,v.X)(L,[-1,1]),B=(0,v.X)(O,[1,-1]);return(0,I.O)(N,B)}})},20635:(rt,H,o)=>{"use strict";o.d(H,{p:()=>v});var p=o(45359),P=o(44195),I=o(20404);const v=(0,P.op)({pad1d_:function f(A,_,C=0){return(0,p.hu)(2===_.length,()=>"Invalid number of paddings. Must be length of 2."),(0,I.v)(A,[_],C)}})},3701:(rt,H,o)=>{"use strict";o.d(H,{k:()=>v});var p=o(45359),P=o(44195),I=o(20404);const v=(0,P.op)({pad2d_:function f(A,_,C=0){return(0,p.hu)(2===_.length&&2===_[0].length&&2===_[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,I.v)(A,_,C)}})},7435:(rt,H,o)=>{"use strict";o.d(H,{t:()=>v});var p=o(45359),P=o(44195),I=o(20404);const v=(0,P.op)({pad3d_:function f(A,_,C=0){return(0,p.hu)(3===_.length&&2===_[0].length&&2===_[1].length&&2===_[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,I.v)(A,_,C)}})},30395:(rt,H,o)=>{"use strict";o.d(H,{l:()=>v});var p=o(45359),P=o(44195),I=o(20404);const v=(0,P.op)({pad4d_:function f(A,_,C=0){return(0,p.hu)(4===_.length&&2===_[0].length&&2===_[1].length&&2===_[2].length&&2===_[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,I.v)(A,_,C)}})},44811:(rt,H,o)=>{"use strict";o.d(H,{$:()=>A});var p=o(40687),P=o(34251),I=o(1257);const A=(0,o(44195).op)({raggedGather_:function v(_,C,S,L){const O=_.map((E,T)=>(0,I._1)(E,`tensors${T}`,"raggedGather","int32")),N=(0,I._1)(C,"paramsDenseValues","raggedGather"),B=(0,I._1)(S,"indices","raggedGather","int32"),U=p.BV.runKernel(P.dDz,{paramsNestedSplits:O,paramsDenseValues:N,indices:B},{outputRaggedRank:L});return{outputNestedSplits:U.slice(0,U.length-1),outputDenseValues:U[U.length-1]}}})},14764:(rt,H,o)=>{"use strict";o.d(H,{V:()=>A});var p=o(40687),P=o(34251),I=o(1257);const A=(0,o(44195).op)({raggedRange_:function v(_,C,S){const L=(0,I._1)(_,"starts","raggedRange"),O=(0,I._1)(C,"limits","raggedRange",L.dtype),N=(0,I._1)(S,"deltas","raggedRange",L.dtype),z=p.BV.runKernel(P.CQl,{starts:L,limits:O,deltas:N});return{rtNestedSplits:z[0],rtDenseValues:z[1]}}})},42312:(rt,H,o)=>{"use strict";o.d(H,{N:()=>A});var p=o(40687),P=o(34251),I=o(1257);const A=(0,o(44195).op)({raggedTensorToTensor_:function v(_,C,S,L,O){const N=(0,I._1)(_,"shape","raggedTensorToTensor","int32"),B=(0,I._1)(C,"values","raggedTensorToTensor"),z=(0,I._1)(S,"defaultValue","raggedTensorToTensor",B.dtype),V=L.map((T,K)=>(0,I._1)(T,`tensors${K}`,"raggedTensorToTensor","int32"));return p.BV.runKernel(P.BiW,{shape:N,values:B,defaultValue:z,rowPartitionTensors:V},{rowPartitionTypes:O})}})},44706:(rt,H,o)=>{"use strict";o.d(H,{T:()=>v});var p=o(40687),P=o(45359);const v=(0,o(44195).op)({rand_:function f(A,_,C){(0,P.Mu)(A);const S=(0,P.NA)(A);let L=null;if(null==C||"float32"===C)L=new Float32Array(S);else if("int32"===C)L=new Int32Array(S);else{if("bool"!==C)throw new Error(`Unknown data type ${C}`);L=new Uint8Array(S)}for(let O=0;O<S;O++)L[O]=_();return p.BV.makeTensor(L,A,C)}})},42474:(rt,H,o)=>{"use strict";o.d(H,{T9:()=>f,Yi:()=>I,wv:()=>v});var p=o(89128);class I{constructor(B,z,V,U,E){this.mean=B,this.stdDev=z,this.dtype=V,this.nextVal=NaN,this.truncated=U,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const T=E||Math.random();this.random=p.alea(T.toString())}nextValue(){if(!isNaN(this.nextVal)){const U=this.nextVal;return this.nextVal=NaN,U}let B,z,V=!1;for(;!V;){let U,E,T;do{U=2*this.random()-1,E=2*this.random()-1,T=U*U+E*E}while(T>=1||0===T);const K=Math.sqrt(-2*Math.log(T)/T);B=this.mean+this.stdDev*U*K,z=this.mean+this.stdDev*E*K,(!this.truncated||this.isValidTruncated(B))&&(V=!0)}return(!this.truncated||this.isValidTruncated(z))&&(this.nextVal=this.convertValue(z)),this.convertValue(B)}convertValue(B){return null==this.dtype||"float32"===this.dtype?B:Math.round(B)}isValidTruncated(B){return B<=this.upper&&B>=this.lower}}class f{constructor(B,z,V,U){this.alpha=B,this.beta=1/z,this.dtype=V;const E=U||Math.random();this.randu=p.alea(E.toString()),this.randn=new I(0,1,V,!1,this.randu()),this.d=B<1?B+.6666666666666666:B-.3333333333333333,this.c=1/Math.sqrt(9*this.d)}nextValue(){let B,z,V,U,E,T;for(;;){do{U=this.randn.nextValue(),T=1+this.c*U}while(T<=0);if(T*=T*T,B=U*U,z=1-.331*B*B,V=.5*B+this.d*(1-T+Math.log(T)),E=this.randu(),E<z||Math.log(E)<V)break}return T*=1/this.beta*this.d,this.alpha<1&&(T*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(T)}convertValue(B){return"float32"===this.dtype?B:Math.round(B)}}class v{constructor(B=0,z=1,V,U){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=B,this.range=z-B,this.dtype=V,null==U&&(U=Math.random()),"number"==typeof U&&(U=U.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${B} - ${z} <= 1 and dtype is not float`);this.random=p.alea(U)}convertValue(B){return this.canReturnFloat()?B:Math.round(B)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},98726:(rt,H,o)=>{"use strict";o.d(H,{w:()=>A});var p=o(45359),P=o(80582),I=o(44195),f=o(42474);const A=(0,I.op)({randomGamma_:function v(_,C,S=1,L="float32",O){if((0,p.Mu)(_),null==S&&(S=1),null==L&&(L="float32"),"float32"!==L&&"int32"!==L)throw new Error(`Unsupported data type ${L}`);const N=new f.T9(C,S,L,O),B=(0,P.f)(_,L);for(let z=0;z<B.values.length;z++)B.values[z]=N.nextValue();return B.toTensor()}})},76276:(rt,H,o)=>{"use strict";o.d(H,{r:()=>f});var p=o(44195),P=o(21246);const f=(0,p.op)({randomStandardNormal_:function I(v,A,_){if(null!=A&&"bool"===A)throw new Error(`Unsupported data type ${A}`);return(0,P.n)(v,0,1,A,_)}})},73961:(rt,H,o)=>{"use strict";o.d(H,{p:()=>f});var p=o(44195),P=o(41442);const f=(0,p.op)({randomUniformInt_:function I(v,A,_,C){return(0,P.L)(v,A,_,"int32",C)}})},12466:(rt,H,o)=>{"use strict";o.d(H,{S:()=>A});var p=o(1257),P=o(45359),I=o(44195),f=o(66825);const A=(0,I.op)({reverse1d_:function v(_){const C=(0,p._1)(_,"x","reverse");return P.hu(1===C.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${C.rank}.`),(0,f.G)(C,0)}})},41065:(rt,H,o)=>{"use strict";o.d(H,{d:()=>A});var p=o(1257),P=o(45359),I=o(44195),f=o(66825);const A=(0,I.op)({reverse2d_:function v(_,C){const S=(0,p._1)(_,"x","reverse");return P.hu(2===S.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${S.rank}.`),(0,f.G)(S,C)}})},28095:(rt,H,o)=>{"use strict";o.d(H,{s:()=>A});var p=o(1257),P=o(45359),I=o(44195),f=o(66825);const A=(0,I.op)({reverse3d_:function v(_,C){const S=(0,p._1)(_,"x","reverse");return P.hu(3===S.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${S.rank}.`),(0,f.G)(S,C)}})},72e3:(rt,H,o)=>{"use strict";o.d(H,{m:()=>A});var p=o(1257),P=o(45359),I=o(44195),f=o(66825);const A=(0,I.op)({reverse4d_:function v(_,C){const S=(0,p._1)(_,"x","reverse");return P.hu(4===S.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${S.rank}.`),(0,f.G)(S,C)}})},68647:(rt,H,o)=>{"use strict";o.d(H,{s:()=>C});var p=o(40687),P=o(34251),I=o(1257),f=o(45359),v=o(44195),A=o(1876);const C=(0,v.op)({scatterND_:function _(S,L,O){(0,f.Mu)(O);const N=(0,I._1)(S,"indices","scatterND","int32"),B=(0,I._1)(L,"updates","scatterND");return A.validateInput(B,N,O),p.BV.runKernel(P.xQA,{indices:N,updates:B},{shape:O})}})},1876:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{calculateShapes:()=>f,validateInput:()=>I,validateUpdateShape:()=>P});var p=o(45359);function P(v,A,_){const C=A.rank>1?A.shape[A.rank-1]:1,S=A.rank>1?A.rank-1:1,L=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${_.shape}, indices.shape: ${A.shape}, shape: ${v}, sliceDim: ${C}, and batchDim: ${S}.`;if(_.rank<S)throw new Error(L+` update.rank < ${S}. `);if(v.length<C+(_.rank-S))throw new Error(L+` Output shape length < ${C+(_.rank-S)}`);if(_.rank!==S+v.length-C)throw new Error(L+" update.rank != "+(S+v.length-C));for(let O=0;O<S;++O)if(_.shape[O]!==A.shape[O])throw new Error(L+` updates.shape[${O}] (${_.shape[O]}) != indices.shape[${O}] (${A.shape[O]}).`);for(let O=0;O<_.rank-S;++O)if(_.shape[O+S]!==v[O+C])throw new Error(L+` updates.shape[${O+S}] (${_.shape[O+S]}) != shape[${O+S}] (${v[O+S]})`)}function I(v,A,_){if(A.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${A.rank}.`);if(v.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${v.rank}.`);if("int32"!==A.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${A.dtype}`);if(_.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${_}`);if(0===_.length){if(0===A.size)throw new Error(`Indices specified for empty output. indices shape: ${A.shape}`);if(0===v.size)throw new Error(`Updates specified for empty output. updates shape: ${v.shape}`)}P(_,A,v)}function f(v,A,_){const C=A.shape.length,S=C>1?A.shape[C-1]:1,L=_.length;let O=1;for(let U=S;U<L;++U)O*=_[U];const N=S<1?1:S;return{sliceRank:S,numUpdates:(0,p.NA)(A.shape)/N,sliceSize:O,strides:[...(0,p.e3)(_.slice(0,S)),1],outputSize:(0,p.NA)(_)}}},6230:(rt,H,o)=>{"use strict";o.d(H,{z:()=>S});var p=o(40687),P=o(34251),I=o(1257),f=o(45359),v=o(44195),A=o(25715);const _=2147483648,S=(0,v.op)({searchSorted_:function C(L,O,N="left"){const B=(0,I._1)(L,"sortedSequence","searchSorted"),z=(0,I._1)(O,"values","searchSorted"),U=z.shape[z.shape.length-1],E=(0,A.X)(B,[-1,B.shape[B.shape.length-1]]),T=(0,A.X)(z,[-1,U]);if(E.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(E.shape[0]!==T.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,f.NA)(T.shape)>=_)throw new Error(`values tensor size must less than ${_}`);if(E.shape[1]>=_)throw new Error(`trailing dim_size must less than ${_} for int32 output type, was ${E.shape[1]}`);return p.BV.runKernel(P.nr8,{sortedSequence:E,values:T},{side:N})}})},4893:(rt,H,o)=>{"use strict";o.d(H,{O:()=>_});var p=o(15861),P=o(4296),I=o(1257),f=o(45359);function A(){return(A=(0,p.Z)(function*(C,S){const L=(0,I._1)(C,"x","setdiff1d"),O=(0,I._1)(S,"y","setdiff1d");f.hu(L.dtype===O.dtype,()=>`x and y should have the same dtype, but got x (${L.dtype}) and y (${O.dtype}).`),f.hu(1===L.rank,()=>`x should be 1D tensor, but got x (${L.shape}).`),f.hu(1===O.rank,()=>`y should be 1D tensor, but got y (${O.shape}).`);const N=yield L.data(),B=yield O.data(),z=new Set(B);let V=0;for(let T=0;T<N.length;T++)z.has(N[T])||V++;const U=new P.YD([V],L.dtype),E=new P.YD([V],"int32");for(let T=0,K=0;T<N.length;T++)z.has(N[T])||(U.values[K]=N[T],E.values[K]=T,K++);return[U.toTensor(),E.toTensor()]})).apply(this,arguments)}const _=function v(C,S){return A.apply(this,arguments)}},86432:(rt,H,o)=>{"use strict";o.d(H,{e:()=>C});var p=o(40687),P=o(34251),f=o(1257),v=o(45359);const C=(0,o(44195).op)({sparseToDense_:function _(S,L,O,N=0){(0,v.Mu)(O);const B=(0,f._1)(S,"sparseIndices","sparseToDense","int32"),z=(0,f._1)(L,"sparseValues","sparseToDense","string_or_numeric"),V=(0,f._1)(N,"defaultValue","sparseToDense",z.dtype);return function I(S,L,O,N){if("int32"!==S.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${S.dtype}.`);if(S.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${S.shape}.`);const B=S.rank>0?S.shape[0]:1,z=S.rank>1?S.shape[1]:1;if(O.length!==z)throw new Error(`outputShape has incorrect number of elements:, ${O.length}, should be: ${z}.`);if(0!==L.rank&&(1!==L.rank||L.size!==B))throw new Error(`sparseValues has incorrect shape ${L.shape}, should be [] or [${B}]`);if(L.dtype!==N.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(B,z,O,V),p.BV.runKernel(P.D2d,{sparseIndices:B,sparseValues:z,defaultValue:V},{outputShape:O})}})},72786:(rt,H,o)=>{"use strict";o.d(H,{w:()=>f});var p=o(1257),P=o(45359),I=o(87431);function f(v,A,_){if((0,P.Cq)(v),null!=A&&3!==A.length)throw new Error("tensor3d() requires shape to have three numbers");const C=(0,p.C)(v,_);if(3!==C.length&&1!==C.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===C.length&&null==A)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,I.H)(v,A,C,_)}},84468:(rt,H,o)=>{"use strict";o.d(H,{y:()=>f});var p=o(1257),P=o(45359),I=o(87431);function f(v,A,_){if((0,P.Cq)(v),null!=A&&4!==A.length)throw new Error("tensor4d() requires shape to have four numbers");const C=(0,p.C)(v,_);if(4!==C.length&&1!==C.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===C.length&&null==A)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,I.H)(v,A,C,_)}},12780:(rt,H,o)=>{"use strict";o.d(H,{B:()=>f});var p=o(1257),P=o(45359),I=o(87431);function f(v,A,_){if((0,P.Cq)(v),null!=A&&5!==A.length)throw new Error("tensor5d() requires shape to have five numbers");const C=(0,p.C)(v,_);if(5!==C.length&&1!==C.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===C.length&&null==A)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,I.H)(v,A,C,_)}},42471:(rt,H,o)=>{"use strict";o.d(H,{x:()=>f});var p=o(1257),P=o(45359),I=o(87431);function f(v,A,_){if((0,P.Cq)(v),null!=A&&6!==A.length)throw new Error("tensor6d() requires shape to have six numbers");const C=(0,p.C)(v,_);if(6!==C.length&&1!==C.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===C.length&&null==A)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return(0,I.H)(v,A=A||C,C,_)}},40955:(rt,H,o)=>{"use strict";o.d(H,{P:()=>_});var p=o(40687),P=o(34251),I=o(1257),f=o(44195),v=o(1876);const _=(0,f.op)({tensorScatterUpdate_:function A(C,S,L){const O=(0,I._1)(C,"tensor","tensorScatterupdate"),N=(0,I._1)(S,"indices","tensorScatterupdate","int32"),B=(0,I._1)(L,"updates","tensorScatterupdate");if(v.validateInput(B,N,O.shape),O.dtype!==B.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${O.dtype} and ${B.dtype}.`);return p.BV.runKernel(P.SIB,{tensor:O,indices:N,updates:B},{})}})},18556:(rt,H,o)=>{"use strict";o.d(H,{G:()=>P});var p=o(6230);function P(I,f){return(0,p.z)(I,f,"right")}},83360:(rt,H,o)=>{"use strict";o.d(H,{i:()=>A});var p=o(15861),P=o(57349),I=o(1257);function v(){return(v=(0,p.Z)(function*(_){const C=(0,I._1)(_,"condition","whereAsync","bool"),S=yield C.data(),L=(0,P.Z)(C.shape,S);return _!==C&&C.dispose(),L})).apply(this,arguments)}const A=function f(_){return v.apply(this,arguments)}},4296:(rt,H,o)=>{"use strict";o.d(H,{FZ:()=>N,Vi:()=>L,Vp:()=>O,YD:()=>A,_w:()=>V,es:()=>B,t3:()=>z});var p=o(15861),P=o(32918),I=o(58047),f=o(45359),v=o(49823);class A{constructor(E,T,K){if(this.dtype=T,this.shape=E.slice(),this.size=f.NA(E),null!=K){const it=K.length;f.hu(it===this.size,()=>`Length of values '${it}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===T)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=K||f.rQ(T,this.size),this.strides=(0,f.e3)(E)}set(E,...T){0===T.length&&(T=[0]),f.hu(T.length===this.rank,()=>`The number of provided coordinates (${T.length}) must match the rank (${this.rank})`);const K=this.locToIndex(T);this.values[K]=E}get(...E){0===E.length&&(E=[0]);let T=0;for(const it of E){if(it<0||it>=this.shape[T])throw new Error(`Requested out of range element at ${E}.   Buffer shape=${this.shape}`);T++}let K=E[E.length-1];for(let it=0;it<E.length-1;++it)K+=this.strides[it]*E[it];return this.values[K]}locToIndex(E){if(0===this.rank)return 0;if(1===this.rank)return E[0];let T=E[E.length-1];for(let K=0;K<E.length-1;++K)T+=this.strides[K]*E[K];return T}indexToLoc(E){if(0===this.rank)return[];if(1===this.rank)return[E];const T=new Array(this.shape.length);for(let K=0;K<T.length-1;++K)T[K]=Math.floor(E/this.strides[K]),E-=T[K]*this.strides[K];return T[T.length-1]=E,T}get rank(){return this.shape.length}toTensor(){return _().makeTensor(this.values,this.shape,this.dtype)}}let _=null,C=null,S=null;function L(U){_=U}function O(U){C=U}function N(U){S=U}class B{constructor(E,T,K,it){this.kept=!1,this.isDisposedInternal=!1,this.shape=E.slice(),this.dtype=T||"float32",this.size=f.NA(E),this.strides=(0,f.e3)(E),this.dataId=K,this.id=it,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var E=this;return(0,p.Z)(function*(){const T=yield E.data();return C.buffer(E.shape,E.dtype,T)})()}bufferSync(){return C.buffer(this.shape,this.dtype,this.dataSync())}array(){var E=this;return(0,p.Z)(function*(){const T=yield E.data();return(0,f.GX)(E.shape,T,"complex64"===E.dtype)})()}arraySync(){return(0,f.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){var E=this;return(0,p.Z)(function*(){E.throwIfDisposed();const T=_().read(E.dataId);if("string"===E.dtype){const K=yield T;try{return K.map(it=>v.decodeString(it))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return T})()}dataToGPU(E){return this.throwIfDisposed(),_().readToGPU(this.dataId,E)}dataSync(){this.throwIfDisposed();const E=_().readSync(this.dataId);if("string"===this.dtype)try{return E.map(T=>v.decodeString(T))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return E}bytes(){var E=this;return(0,p.Z)(function*(){E.throwIfDisposed();const T=yield _().read(E.dataId);return"string"===E.dtype?T:new Uint8Array(T.buffer)})()}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),_().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(E=!1){return C.print(this,E)}clone(){return this.throwIfDisposed(),C.clone(this)}toString(E=!1){const T=this.dataSync();return(0,I.H)(T,this.shape,this.dtype,E)}cast(E){return this.throwIfDisposed(),C.cast(this,E)}variable(E=!0,T,K){return this.throwIfDisposed(),_().makeVariable(this,E,T,K)}}function z(){return(0,P.R)("Tensor",()=>B)}Object.defineProperty(B,Symbol.hasInstance,{value:U=>!!U&&null!=U.data&&null!=U.dataSync&&null!=U.throwIfDisposed}),z();class V extends B{constructor(E,T,K,it){super(E.shape,E.dtype,E.dataId,it),this.trainable=T,this.name=K}assign(E){if(E.dtype!==this.dtype)throw new Error(`dtype of the new value (${E.dtype}) and previous value (${this.dtype}) must match`);if(!f.cO(E.shape,this.shape))throw new Error(`shape of the new value (${E.shape}) and previous value (${this.shape}) must match`);_().disposeTensor(this),this.dataId=E.dataId,_().incRef(this,null)}dispose(){_().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(V,Symbol.hasInstance,{value:U=>U instanceof B&&null!=U.assign&&U.assign instanceof Function})},27664:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{assertTypesMatch:()=>v,getTensorsInContainer:()=>_,isTensorInList:()=>A,makeTypesMatch:()=>f});var p=o(4296),P=o(1216),I=o(45359);function f(L,O){if(L.dtype===O.dtype)return[L,O];const N=(0,P.x8)(L.dtype,O.dtype);return[L.cast(N),O.cast(N)]}function v(L,O){(0,I.hu)(L.dtype===O.dtype,()=>`The dtypes of the first(${L.dtype}) and second(${O.dtype}) input must match`)}function A(L,O){return O.some(N=>N.id===L.id)}function _(L){const O=[];return C(L,O,new Set),O}function C(L,O,N){if(null==L)return;if(L instanceof p.es)return void O.push(L);if(!function S(L){return Array.isArray(L)||"object"==typeof L}(L))return;const B=L;for(const z in B){const V=B[z];N.has(V)||(N.add(V),C(V,O,N))}}},18155:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{TEST_EPSILON_FLOAT16:()=>_,createVideoElement:()=>T,encodeStrings:()=>E,expectArrayBuffersEqual:()=>U,expectArraysClose:()=>C,expectArraysEqual:()=>N,expectNumbersClose:()=>B,expectPromiseToFail:()=>O,expectValuesInRange:()=>V,play:()=>K,testEpsilon:()=>S});var p=o(15861),P=o(40687),I=o(1257),f=o(49823),v=o(45359);const A=.001,_=.1;function C(J,y,F){return null==F&&(F=S()),L(J,y,(tt,at)=>z(tt,at,F))}function S(){return 32===P.BV.backend.floatPrecision()?A:_}function L(J,y,F){let tt=!0;if(((0,f.isTypedArray)(J)||(0,f.isTypedArray)(y))&&(tt=!1),(0,f.isTypedArray)(J)&&(0,f.isTypedArray)(y)&&(tt=!0),tt){const w=J.constructor.name,x=y.constructor.name;if(w!==x)throw new Error(`Arrays are of different type. Actual: ${w}. Expected: ${x}`)}if(Array.isArray(J)&&Array.isArray(y)){const w=(0,I.C)(J),x=(0,I.C)(y);if(!(0,v.cO)(w,x))throw new Error(`Arrays have different shapes. Actual: [${w}]. Expected: [${x}]`)}const at=(0,f.isTypedArray)(J)?J:(0,f.flatten)(J),j=(0,f.isTypedArray)(y)?y:(0,f.flatten)(y);if(at.length!==j.length)throw new Error(`Arrays have different lengths actual: ${at.length} vs expected: ${j.length}.\nActual:   ${at}.\nExpected: ${j}.`);for(let w=0;w<j.length;++w){const x=at[w],b=j[w];if(!F(x,b))throw new Error(`Arrays differ: actual[${w}] = ${x}, expected[${w}] = ${b}.\nActual:   ${at}.\nExpected: ${j}.`)}typeof expect<"u"&&expect().nothing()}function O(J,y){J().then(()=>y.fail(),()=>y()),typeof expect<"u"&&expect().nothing()}function N(J,y){const F="string"==typeof y||"number"==typeof y||"boolean"==typeof y?[y]:y;return(0,v.HD)(J)||(0,v.HD)(J[0])||(0,v.HD)(y)||(0,v.HD)(y[0])?L(J,F,(tt,at)=>tt==at):L(J,y,(tt,at)=>z(tt,at,0))}function B(J,y,F){if(null==F&&(F=S()),!z(J,y,F))throw new Error(`Numbers differ: actual === ${J}, expected === ${y}`);typeof expect<"u"&&expect().nothing()}function z(J,y,F){return!isFinite(J)&&!isFinite(y)||!(isNaN(J)||isNaN(y)||Math.abs(J-y)>F)}function V(J,y,F){for(let tt=0;tt<J.length;tt++)if(J[tt]<y||J[tt]>F)throw new Error(`Value out of range:${J[tt]} low: ${y}, high: ${F}`)}function U(J,y){const F=new Float32Array(J),tt=new Float32Array(y);if(F.length!==tt.length)throw new Error(`Expected ArrayBuffer to be of length ${tt.length}, but it was ${F.length}`);for(let at=0;at<tt.length;at++)if(F[at]!==tt[at])throw new Error(`Expected ArrayBuffer value at ${at} to be ${tt[at]} but got ${F[at]} instead`)}function E(J){for(let y=0;y<J.length;y++){const F=J[y];Array.isArray(F)?E(F):J[y]=(0,f.encodeString)(F)}return J}function T(J){const y=document.createElement("video");return"playsInline"in y&&(y.playsInline=!0),y.muted=!0,y.loop=!0,y.style.position="fixed",y.style.left="0px",y.style.top="0px",y.preload="auto",y.appendChild(J),new Promise(F=>{y.addEventListener("loadeddata",tt=>F(y)),y.load()})}function K(J){return it.apply(this,arguments)}function it(){return(it=(0,p.Z)(function*(J){yield J.play(),"requestVideoFrameCallback"in J&&(yield new Promise(y=>{J.requestVideoFrameCallback(y)}))})).apply(this,arguments)}},1216:(rt,H,o)=>{"use strict";o.d(H,{$F:()=>L,Oq:()=>S,x8:()=>_,yw:()=>p,z4:()=>C});var p=function(O){return O.R0="R0",O.R1="R1",O.R2="R2",O.R3="R3",O.R4="R4",O.R5="R5",O.R6="R6",O}(p||{}),P=function(O){return O.float32="float32",O.int32="int32",O.bool="int32",O.complex64="complex64",O}(P||{}),I=function(O){return O.float32="float32",O.int32="int32",O.bool="bool",O.complex64="complex64",O}(I||{}),f=function(O){return O.float32="float32",O.int32="float32",O.bool="float32",O.complex64="complex64",O}(f||{}),v=function(O){return O.float32="complex64",O.int32="complex64",O.bool="complex64",O.complex64="complex64",O}(v||{});const A={float32:f,int32:P,bool:I,complex64:v};function _(O,N){if("string"===O||"string"===N){if("string"===O&&"string"===N)return"string";throw new Error(`Can not upcast ${O} with ${N}`)}return A[O][N]}function C(O){return _(O,"int32")}function S(O){return null!=O&&"object"==typeof O&&"texture"in O&&O.texture instanceof WebGLTexture}function L(O){return typeof GPUBuffer<"u"&&null!=O&&"object"==typeof O&&"buffer"in O&&O.buffer instanceof GPUBuffer}},49823:(rt,H,o)=>{"use strict";o.r(H),o.d(H,{arraysEqual:()=>I.cO,arraysEqualWithNull:()=>I.DK,assert:()=>I.hu,assertNonNegativeIntegerDimensions:()=>I.Mu,assertNonNull:()=>I.Cq,assertShapesMatch:()=>I.k5,bytesFromStringArray:()=>I.Ub,bytesPerElement:()=>I.bT,checkConversionForErrors:()=>I.D5,clamp:()=>I.uZ,computeStrides:()=>I.e3,convertBackendValuesAndArrayBuffer:()=>I.KS,createScalarValue:()=>v,createShuffledIndices:()=>I.U$,decodeString:()=>O,distSquared:()=>I.E7,encodeString:()=>L,fetch:()=>S,fingerPrint64:()=>f.O,flatten:()=>B,getArrayFromDType:()=>I.rQ,getTypedArrayFromDType:()=>I.WP,hasEncodingLoss:()=>I.QB,hexToLong:()=>f.E,indexToLoc:()=>I.NE,inferDtype:()=>I.D2,inferFromImplicitShape:()=>I.JZ,isBoolean:()=>I.jn,isFunction:()=>I.mf,isInt:()=>I.GN,isNumber:()=>I.hj,isPromise:()=>I.tI,isScalarShape:()=>I.xH,isString:()=>I.HD,isTypedArray:()=>N,isValidDtype:()=>I.LP,locToIndex:()=>I.qy,makeOnesTypedArray:()=>I.p8,makeZerosNestedTypedArray:()=>I.l6,makeZerosTypedArray:()=>I.wT,nearestDivisor:()=>I.jP,nearestLargerEven:()=>I.nY,now:()=>C,parseAxisParam:()=>I.EC,randUniform:()=>I.bj,repeatedTry:()=>I.WD,rightPad:()=>I.oj,shuffle:()=>I.TV,shuffleCombo:()=>I.d7,sizeFromShape:()=>I.NA,sizeToSquarishShape:()=>I.YP,squeezeShape:()=>I.bp,sum:()=>I.Sm,swap:()=>I.LF,tanh:()=>I.AE,toNestedArray:()=>I.GX,toTypedArray:()=>_});var p=o(5527),P=o(94705),I=o(45359),f=o(63842);function v(z,V){return"string"===V?L(z):_([z],V)}function _(z,V){if("string"===V)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(z)&&(z=B(z)),(0,p.OB)().getBool("DEBUG")&&I.D5(z,V),function A(z,V){return z instanceof Float32Array&&"float32"===V||z instanceof Int32Array&&"int32"===V||z instanceof Uint8Array&&"bool"===V}(z,V))return z;if(null==V||"float32"===V||"complex64"===V)return new Float32Array(z);if("int32"===V)return new Int32Array(z);if("bool"===V){const U=new Uint8Array(z.length);for(let E=0;E<U.length;++E)0!==Math.round(z[E])&&(U[E]=1);return U}throw new Error(`Unknown data type ${V}`)}function C(){return(0,p.OB)().platform.now()}function S(z,V){return(0,p.OB)().platform.fetch(z,V)}function L(z,V="utf-8"){return V=V||"utf-8",(0,p.OB)().platform.encode(z,V)}function O(z,V="utf-8"){return V=V||"utf-8",(0,p.OB)().platform.decode(z,V)}function N(z){return null!=(0,p.OB)().platform.isTypedArray?(0,p.OB)().platform.isTypedArray(z):(0,P.j)(z)}function B(z,V=[],U=!1){if(null==V&&(V=[]),"boolean"==typeof z||"number"==typeof z||"string"==typeof z||I.tI(z)||null==z||N(z)&&U)V.push(z);else if(Array.isArray(z)||N(z))for(let E=0;E<z.length;++E)B(z[E],V,U);else{let E=-1;for(const T of Object.keys(z))/^([1-9]+[0-9]*|0)$/.test(T)&&(E=Math.max(E,Number(T)));for(let T=0;T<=E;T++)B(z[T],V,U)}return V}},86025:(rt,H,o)=>{"use strict";o.d(H,{Ay:()=>O,BO:()=>S,CZ:()=>B,Sk:()=>z,ex:()=>C,iT:()=>N,m$:()=>V});var p=o(15861),P=o(30003),I=o(18357),f=o(8518),v=o(42688);class C{constructor(){this.validationData=null}setParams(E){this.params=E}onEpochBegin(E,T){return(0,p.Z)(function*(){})()}onEpochEnd(E,T){return(0,p.Z)(function*(){})()}onBatchBegin(E,T){return(0,p.Z)(function*(){})()}onBatchEnd(E,T){return(0,p.Z)(function*(){})()}onTrainBegin(E){return(0,p.Z)(function*(){})()}onTrainEnd(E){return(0,p.Z)(function*(){})()}setModel(E){}}class S{constructor(E,T=10){null==E&&(E=[]),this.callbacks=E,this.queueLength=T}append(E){this.callbacks.push(E)}setParams(E){for(const T of this.callbacks)T.setParams(E)}setModel(E){for(const T of this.callbacks)T.setModel(E)}onEpochBegin(E,T){var K=this;return(0,p.Z)(function*(){null==T&&(T={});for(const it of K.callbacks)yield it.onEpochBegin(E,T)})()}onEpochEnd(E,T){var K=this;return(0,p.Z)(function*(){null==T&&(T={});for(const it of K.callbacks)yield it.onEpochEnd(E,T)})()}onBatchBegin(E,T){var K=this;return(0,p.Z)(function*(){null==T&&(T={});for(const it of K.callbacks)yield it.onBatchBegin(E,T)})()}onBatchEnd(E,T){var K=this;return(0,p.Z)(function*(){null==T&&(T={});for(const it of K.callbacks)yield it.onBatchEnd(E,T)})()}onTrainBegin(E){var T=this;return(0,p.Z)(function*(){null==E&&(E={});for(const K of T.callbacks)yield K.onTrainBegin(E)})()}onTrainEnd(E){var T=this;return(0,p.Z)(function*(){null==E&&(E={});for(const K of T.callbacks)yield K.onTrainEnd(E)})()}}class L extends C{constructor(){super()}onEpochBegin(E){var T=this;return(0,p.Z)(function*(){T.seen=0,T.totals={}})()}onBatchEnd(E,T){var K=this;return(0,p.Z)(function*(){null==T&&(T={});const it=null==T.size?0:T.size;K.seen+=it;for(const J in T){const y=T[J];if("number"==typeof y)K.totals.hasOwnProperty(J)||(K.totals[J]=0),K.totals[J]=K.totals[J]+y*it;else{let F;J in K.totals?F=K.totals[J]:K.totals[J]=0;const tt=(0,P.lub)(()=>(0,P.IHx)(K.totals[J],(0,P.dC7)(y,it)));K.totals[J]=tt,F?.dispose()}}})()}onEpochEnd(E,T){var K=this;return(0,p.Z)(function*(){if(null!=T)for(const it of K.params.metrics)null!=K.totals[it]&&("number"==typeof K.totals[it]?T[it]=K.totals[it]/K.seen:(0,P.lub)(()=>{const J=(0,P.dC7)((0,P.hiC)(1,K.seen),K.totals[it]);T[it]=J,K.totals[it].dispose(),(0,P.CnY)(T[it])}))})()}}class O extends C{onTrainBegin(E){var T=this;return(0,p.Z)(function*(){T.epoch=[],T.history={}})()}onEpochEnd(E,T){var K=this;return(0,p.Z)(function*(){null==T&&(T={}),K.epoch.push(E);for(const it in T)null==K.history[it]&&(K.history[it]=[]),K.history[it].push(T[it])})()}syncData(){var E=this;return(0,p.Z)(function*(){const T=[],K=[],it=[];for(const y in E.history){const F=E.history[y];for(let tt=0;tt<F.length;++tt)"number"!=typeof F[tt]&&(T.push(F[tt].data()),K.push(y),it.push(tt))}const J=yield Promise.all(T);for(let y=0;y<J.length;++y)E.history[K[y]][it[y]].dispose(),E.history[K[y]][it[y]]=J[y][0]})()}}class N extends C{constructor(E,T){if(super(),this.currentEpoch=0,this.nowFunc=E.nowFunc,this.nextFrameFunc=E.nextFrameFunc||P.glt,this.yieldEvery=T||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=E.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");P.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=v.Ds(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=E.onTrainBegin,this.trainEnd=E.onTrainEnd,this.epochBegin=E.onEpochBegin,this.epochEnd=E.onEpochEnd,this.batchBegin=E.onBatchBegin,this.batchEnd=E.onBatchEnd,this.yield=E.onYield}maybeWait(E,T,K){var it=this;return(0,p.Z)(function*(){const J=[];null!=it.yield&&(yield(0,f.Z)(K),J.push(it.yield(E,T,K))),J.push(it.nextFrameFunc()),yield Promise.all(J)})()}onEpochBegin(E,T){var K=this;return(0,p.Z)(function*(){K.currentEpoch=E,null!=K.epochBegin&&(yield(0,f.Z)(T),yield K.epochBegin(E,T))})()}onEpochEnd(E,T){var K=this;return(0,p.Z)(function*(){const it=[];null!=K.epochEnd&&(yield(0,f.Z)(T),it.push(K.epochEnd(E,T))),"epoch"===K.yieldEvery&&it.push(K.nextFrameFunc()),yield Promise.all(it)})()}onBatchBegin(E,T){var K=this;return(0,p.Z)(function*(){null!=K.batchBegin&&(yield(0,f.Z)(T),yield K.batchBegin(E,T))})()}onBatchEnd(E,T){var K=this;return(0,p.Z)(function*(){const it=[];null!=K.batchEnd&&(yield(0,f.Z)(T),it.push(K.batchEnd(E,T))),"batch"===K.yieldEvery?it.push(K.nextFrameFunc()):P.D5U.isNumber(K.yieldEvery)&&it.push(K.maybeWait(K.currentEpoch,E,T)),yield Promise.all(it)})()}onTrainBegin(E){var T=this;return(0,p.Z)(function*(){null!=T.trainBegin&&(yield(0,f.Z)(E),yield T.trainBegin(E))})()}onTrainEnd(E){var T=this;return(0,p.Z)(function*(){null!=T.trainEnd&&(yield(0,f.Z)(E),yield T.trainEnd(E))})()}}function B(U,E){return null==U&&(U={}),U instanceof C?[U]:Array.isArray(U)&&U[0]instanceof C?U:v.zZ(U).map(K=>new N(K,E))}let z=(()=>{class U{constructor(){}static registerCallbackConstructor(T,K){P.D5U.assert(T>=0&&Number.isInteger(T),()=>`Verbosity level is expected to be an integer >= 0, but got ${T}`),U.checkForDuplicate(K),null==U.constructors[T]&&(U.constructors[T]=[]),U.constructors[T].push(K)}static checkForDuplicate(T){for(const K in U.constructors)U.constructors[+K].forEach(J=>{if(J===T)throw new I.nu("Duplicate callback constructor.")})}static clear(){U.constructors={}}static createCallbacks(T){const K=[];for(const it in U.constructors){const J=+it;T>=J&&K.push(...U.constructors[J])}return K.map(it=>new it)}}return U.constructors={},U})();function V(U,E,T,K,it,J,y,F,tt){const at=new O,j=[new L,...z.createCallbacks(E)];null!=U&&j.push(...U),j.push(at);const w=new S(j);return w.setParams({epochs:T,initialEpoch:K,samples:it,steps:J,batchSize:y,verbose:E,doValidation:F,metrics:tt}),{callbackList:w,history:at}}},51090:(rt,H,o)=>{"use strict";o.d(H,{I:()=>A,l:()=>v});var p=o(30003),P=o(32547),I=o(18357),f=o(92641);let v=(()=>{class _ extends f.mh{constructor(S){if(super({dtype:S.dtype,name:null!=S.name?S.name:(0,P.s)("input").toString()}),null==S.batchSize&&(S.batchSize=null),null==S.sparse&&(S.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=S.sparse,null!=S.inputShape&&null!=S.batchInputShape)throw new I.nu("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let L=S.batchInputShape;if(null==L){if(null==S.inputShape)throw new I.nu("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");L=[S.batchSize].concat(S.inputShape)}else if(null!=S.batchSize)throw new I.nu("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const O=S.dtype||"float32";this.batchInputShape=L,this.dtype=O,this.inputSpec=[{shape:L}];const N=new f.Iy(this.dtype,this.batchInputShape,this,[],{},this.name);N.nodeIndex=0,N.tensorIndex=0,new f.NB({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[N],outputTensors:[N],inputMasks:[null],outputMasks:[null],inputShapes:[L],outputShapes:[L]})}apply(S,L){throw new I.nu(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return _.className="InputLayer",_})();function A(_){if(null==_.batchShape&&null==_.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=_.batchShape&&null!=_.shape)throw new I.nu("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let C=_.batchShape;null!=_.shape&&null==C&&(C=[null].concat(_.shape));let S=_.dtype;return null==S&&(S="float32"),new v({batchInputShape:C,name:_.name,dtype:S,sparse:_.sparse}).inboundNodes[0].outputTensors[0]}p.m7h.registerClass(v)},92641:(rt,H,o)=>{"use strict";o.d(H,{Iy:()=>O,NB:()=>B,Zg:()=>L,hA:()=>T,mh:()=>V});var p=o(30003),P=o(32547),I=o(65999),f=o(18357),v=o(25568),A=o(42688),_=o(8022),C=o(37055),S=o(3097);class L{constructor(y){this.dtype=y.dtype,this.shape=y.shape,this.ndim=null!=y.shape?y.shape.length:y.ndim,this.maxNDim=y.maxNDim,this.minNDim=y.minNDim,this.axes=y.axes||{}}}class O{constructor(y,F,tt,at,j,w,x){this.dtype=y,this.shape=F,this.sourceLayer=tt,this.inputs=at,this.callArgs=j,this.outputTensorIndex=x,this.id=(0,P.L)(),null!=w&&(this.originalName=(0,I.MU)(w),this.name=(0,I.w8)(this.originalName)),this.rank=F.length}}let N=0;class B{constructor(y,F){this.callArgs=F,this.id=N++,this.outboundLayer=y.outboundLayer,this.inboundLayers=y.inboundLayers,this.nodeIndices=y.nodeIndices,this.tensorIndices=y.tensorIndices,this.inputTensors=y.inputTensors,this.outputTensors=y.outputTensors,this.inputMasks=y.inputMasks,this.outputMasks=y.outputMasks,this.inputShapes=y.inputShapes,this.outputShapes=y.outputShapes;for(const tt of y.inboundLayers)tt?.outboundNodes.push(this);y.outboundLayer.inboundNodes.push(this)}getConfig(){const y=[];for(const F of this.inboundLayers)y.push(null!=F?F.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:y,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let z=0;class V extends p.m7h.Serializable{constructor(y={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=z++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let F=y.name;if(!F){const tt=this.getClassName();F=A.D1(tt)+"_"+(0,P.s)(tt)}if(this.name=F,this.trainable_=null==y.trainable||y.trainable,null!=y.inputShape||null!=y.batchInputShape){let tt;if(null!=y.batchInputShape)tt=y.batchInputShape;else if(null!=y.inputShape){let j=null;null!=y.batchSize&&(j=y.batchSize),tt=[j].concat(y.inputShape)}this.batchInputShape=tt;let at=y.dtype;null==at&&(at=y.inputDType),null==at&&(at="float32"),this.dtype=at}this.initialWeights=null!=y.weights?y.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(y,F){return y.name+"_ib-"+F.toString()}getNodeAtIndex(y,F){if(0===this.inboundNodes.length)throw new f.LH(`The layer has never been called and thus has no defined ${F}.`);if(this.inboundNodes.length<=y)throw new f.nu(`Asked to get ${F} at node ${y}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[y]}getInputAt(y){return A.Bq(this.getNodeAtIndex(y,"input").inputTensors)}getOutputAt(y){return A.Bq(this.getNodeAtIndex(y,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new f.j1(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new f.j1(`Layer ${this.name} is not connected, no input to return.`);return A.Bq(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new f.j1(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new f.j1(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return A.Bq(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(y=>y())}get updates(){return this._updates}get built(){return this._built}set built(y){this._built=y}get trainable(){return this.trainable_}set trainable(y){this._trainableWeights.forEach(F=>F.trainable=y),this.trainable_=y}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(y=>y.trainable):[]}set trainableWeights(y){this._trainableWeights=y}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(y=>!y.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(y){this._nonTrainableWeights=y}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(y){const F=A.zZ(y);if(null==this.inputSpec||0===this.inputSpec.length)return;const tt=A.zZ(this.inputSpec);if(F.length!==tt.length)throw new f.nu(`Layer ${this.name} expects ${tt.length} inputs, but it received ${F.length} input tensors. Input received: ${y}`);for(let at=0;at<F.length;at++){const j=F[at],w=tt[at];if(null==w)continue;const x=j.rank;if(null!=w.ndim&&x!==w.ndim)throw new f.nu(`Input ${at} is incompatible with layer ${this.name}: expected ndim=${w.ndim}, found ndim=${x}`);if(null!=w.maxNDim&&x>w.maxNDim)throw new f.nu(`Input ${at} is incompatible with layer ${this.name}: expected max_ndim=${w.maxNDim}, found ndim=${x}`);if(null!=w.minNDim&&x<w.minNDim)throw new f.nu(`Input ${at} is incompatible with layer ${this.name}: expected min_ndim=${w.minNDim}, found ndim=${x}.`);if(null!=w.dtype&&j.dtype!==w.dtype)throw new f.nu(`Input ${at} is incompatible with layer ${this.name} : expected dtype=${w.dtype}, found dtype=${j.dtype}.`);if(w.axes){const b=j.shape;for(const i in w.axes){const G=Number(i),ft=w.axes[i];if(null!=ft&&-1===[ft,null].indexOf(G>=0?b[G]:b[b.length+G]))throw new f.nu(`Input ${at} is incompatible with layer ${this.name}: expected axis ${G} of input shape to have value ${ft} but got shape ${b}.`)}}if(null!=w.shape)for(let b=0;b<w.shape.length;++b){const i=w.shape[b],G=j.shape[b];if(null!=i&&null!=G&&i!==G)throw new f.nu(`Input ${at} is incompatible with layer ${this.name}: expected shape=${w.shape}, found shape=${j.shape}.`)}}}call(y,F){return y}invokeCallHook(y,F){null!=this._callHook&&this._callHook(y,F)}setCallHook(y){this._callHook=y}clearCallHook(){this._callHook=null}apply(y,F){F=F||{},this.assertNotDisposed();const tt=A.zZ(y),at=function K(J){let y=!0;for(const F of A.zZ(J))if(!(F instanceof O)){y=!1;break}return y}(y),j=function it(J){let y=!0;for(const F of A.zZ(J))if(F instanceof O){y=!1;break}return y}(y);if(at===j)throw new f.nu("Arguments to apply() must be all SymbolicTensors or all Tensors");return(0,I.f4)(this.name,()=>{if(!this.built){this.assertInputCompatibility(y);const w=[];for(const x of A.zZ(y))w.push(x.shape);this.build(A.Bq(w)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&j&&(this._refCount=1)}if(this.assertInputCompatibility(y),j){let w=this.call(y,F);this.supportsMasking&&this.setMaskMetadata(y,w);const x=A.zZ(w),b=[];for(let i of x)-1!==tt.indexOf(i)&&(i=i.clone()),b.push(i);if(w=A.Bq(b),null!=this.activityRegularizer)throw new f.nj("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return w}{const w=function U(J){J=A.zZ(J);const y=[];for(const F of J)y.push(F.shape);return A.Bq(y)}(y),x=this.computeOutputShape(w);let b;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(y)?w[0]:w),b=null!=x&&x.length>0&&Array.isArray(x[0])?x.map((G,ft)=>new O(i,G,this,A.zZ(y),F,this.name,ft)):new O(i,x,this,A.zZ(y),F,this.name),this.addInboundNode(y,b,null,null,w,x,F),this._refCount++,null!=this.activityRegularizer)throw new f.nj("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return b}})}warnOnIncompatibleInputShape(y){if(null!=this.batchInputShape)if(y.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(y)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let F=!1;this.batchInputShape.forEach((tt,at)=>{null!=tt&&null!=y[at]&&y[at]!==tt&&(F=!0)}),F&&console.warn(`The shape of the input tensor (${JSON.stringify(y)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new f.j1(`The layer ${this.name} has never been called and thus has no defined output shape.`);const y=[];for(const F of this.inboundNodes){const tt=JSON.stringify(F.outputShapes);-1===y.indexOf(tt)&&y.push(tt)}if(1===y.length){const F=this.inboundNodes[0].outputShapes;return Array.isArray(F)&&Array.isArray(F[0])&&1===F.length?F[0]:F}throw new f.j1(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new f.LH(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return C.t(this.weights)}build(y){this.built=!0}getWeights(y=!1){return(0,S.FQ)(y?this.trainableWeights:this.weights)}setWeights(y){(0,p.lub)(()=>{const F=this.weights;if(F.length!==y.length)throw new f.nu(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${y.length}, but the layer was expecting ${F.length} weights. Provided weights: ${y}...`);if(0===F.length)return;const tt=[],at=(0,S.FQ)(F);for(let j=0;j<at.length;++j){const w=at[j],x=F[j],b=y[j];if(!p.D5U.arraysEqual(w.shape,b.shape))throw new f.nu(`Layer weight shape ${w.shape} not compatible with provided weight shape ${b.shape}`);tt.push([x,b])}(0,S.zb)(tt)})}addWeight(y,F,tt,at,j,w,x,b){if(-1!==this._addedWeightNames.indexOf(y))throw new f.nu(`Duplicate weight name ${y} for layer ${this.name}`);this._addedWeightNames.push(y),null==tt&&(tt="float32"),this.fastWeightInitDuringBuild&&(at=null!=b?b():(0,v.L5)("zeros"));const i=at.apply(F,tt),G=new S.fU(i,tt,y,w,x);return i.dispose(),null!=j&&this.addLoss(()=>j.apply(G.read())),null==w&&(w=!0),w?this._trainableWeights.push(G):this._nonTrainableWeights.push(G),G}setFastWeightInitDuringBuild(y){this.fastWeightInitDuringBuild=y}addLoss(y){null==y||Array.isArray(y)&&0===y.length||(y=A.zZ(y),null!=this._losses&&this.losses.push(...y))}computeOutputShape(y){return y}computeMask(y,F){if(!this.supportsMasking){if(null!=F){if(!Array.isArray(F))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);F.forEach(tt=>{if(null!=tt)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return F}setMaskMetadata(y,F,tt){if(!this.supportsMasking)return;const at=this.computeMask(y,tt),j=A.zZ(F),w=A.zZ(at);if(j.length!==w.length)throw new Error(`${this.name} outputs ${j.length} tensors but ${j.length} masks for those tensors`);for(let x=0;x<j.length;x++)j[x].kerasMask=w[x]}addInboundNode(y,F,tt,at,j,w,x=null){const b=A.zZ(y);F=A.zZ(F),tt=A.zZ(tt),at=A.zZ(at),j=_.x6(j),w=_.x6(w);const i=[],G=[],ft=[];for(const Y of b)i.push(Y.sourceLayer),G.push(Y.nodeIndex),ft.push(Y.tensorIndex);new B({outboundLayer:this,inboundLayers:i,nodeIndices:G,tensorIndices:ft,inputTensors:b,outputTensors:F,inputMasks:tt,outputMasks:at,inputShapes:j,outputShapes:w},x);for(let Y=0;Y<F.length;Y++)F[Y].sourceLayer=this,F[Y].nodeIndex=this.inboundNodes.length-1,F[Y].tensorIndex=Y}getConfig(){const y={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(y.batchInputShape=this.batchInputShape),null!=this.dtype&&(y.dtype=this.dtype),y}disposeWeights(){return this.weights.forEach(y=>y.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let y=0;return 0===--this._refCount&&(y=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:y}}}function T(J,y,F){if((null==y||null!=F&&F>0)&&(y=J.sourceLayer,F=J.nodeIndex),0===y.inboundNodes.length)return[J];{const tt=y.inboundNodes[F];if(0===tt.inboundLayers.length)return tt.inputTensors;{const at=[];for(let j=0;j<tt.inboundLayers.length;j++){const i=T(tt.inputTensors[j],tt.inboundLayers[j],tt.nodeIndices[j]);for(const G of i)-1===at.indexOf(G)&&at.push(G)}return at}}}},25568:(rt,H,o)=>{"use strict";o.d(H,{Cx:()=>b,H_:()=>O,Is:()=>z,Jf:()=>J,L5:()=>i,M6:()=>N,MD:()=>V,RP:()=>y,V9:()=>tt,iJ:()=>E,m7:()=>L,rB:()=>F,sq:()=>it,sr:()=>B,vG:()=>j,w8:()=>U,xc:()=>K,yD:()=>at});var p=o(30003),P=o(12992),I=o(65999),f=o(18357),v=o(1065),A=o(42688),_=o(57774);class L extends p.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}let O=(()=>{class G extends L{apply(Y,lt){return(0,p.lls)(Y,lt)}}return G.className="Zeros",G})();p.m7h.registerClass(O);let N=(()=>{class G extends L{apply(Y,lt){return(0,p.iUs)(Y,lt)}}return G.className="Ones",G})();p.m7h.registerClass(N);let B=(()=>{class G extends L{constructor(Y){if(super(),"object"!=typeof Y)throw new f.nu(`Expected argument of type ConstantConfig but got ${Y}`);if(void 0===Y.value)throw new f.nu(`config must have value set but got ${Y}`);this.value=Y.value}apply(Y,lt){return(0,p.lub)(()=>(0,p.dC7)((0,p.iD$)(this.value),(0,p.iUs)(Y,lt)))}getConfig(){return{value:this.value}}}return G.className="Constant",G})();p.m7h.registerClass(B);let z=(()=>{class G extends L{constructor(Y){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=Y.minval||this.DEFAULT_MINVAL,this.maxval=Y.maxval||this.DEFAULT_MAXVAL,this.seed=Y.seed}apply(Y,lt){return(0,p.LGj)(Y,this.minval,this.maxval,lt,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return G.className="RandomUniform",G})();p.m7h.registerClass(z);let V=(()=>{class G extends L{constructor(Y){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=Y.mean||this.DEFAULT_MEAN,this.stddev=Y.stddev||this.DEFAULT_STDDEV,this.seed=Y.seed}apply(Y,lt){if("float32"!==(lt=lt||"float32")&&"int32"!==lt)throw new f.nj(`randomNormal does not support dType ${lt}.`);return P.nG(Y,this.mean,this.stddev,lt,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return G.className="RandomNormal",G})();p.m7h.registerClass(V);let U=(()=>{class G extends L{constructor(Y){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=Y.mean||this.DEFAULT_MEAN,this.stddev=Y.stddev||this.DEFAULT_STDDEV,this.seed=Y.seed}apply(Y,lt){if("float32"!==(lt=lt||"float32")&&"int32"!==lt)throw new f.nj(`truncatedNormal does not support dType ${lt}.`);return(0,p.Xu6)(Y,this.mean,this.stddev,lt,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return G.className="TruncatedNormal",G})();p.m7h.registerClass(U);let E=(()=>{class G extends L{constructor(Y){super(),this.gain=null!=Y.gain?Y.gain:1}apply(Y,lt){return(0,p.lub)(()=>{if(2!==Y.length||Y[0]!==Y[1])throw new f.nu("Identity matrix initializer can only be used for 2D square matrices.");return(0,p.dC7)(this.gain,(0,p.iyy)(Y[0]))})}getConfig(){return{gain:this.gain}}}return G.className="Identity",G})();p.m7h.registerClass(E);let K=(()=>{class G extends L{constructor(Y){if(super(),Y.scale<0)throw new f.nu(`scale must be a positive float. Got: ${Y.scale}`);this.scale=null==Y.scale?1:Y.scale,this.mode=null==Y.mode?"fanIn":Y.mode,function C(G){(0,A.xn)(v.RR,"FanMode",G)}(this.mode),this.distribution=null==Y.distribution?"normal":Y.distribution,function S(G){(0,A.xn)(v.J7,"Distribution",G)}(this.distribution),this.seed=Y.seed}apply(Y,lt){const st=function T(G,ft="channelsLast"){let Y,lt;if((0,I.cj)(ft),2===G.length)Y=G[0],lt=G[1];else if(-1!==[3,4,5].indexOf(G.length)){if("channelsFirst"===ft){const st=(0,_.NS)(G,2);Y=G[1]*st,lt=G[0]*st}else if("channelsLast"===ft){const st=(0,_.NS)(G,0,G.length-2);Y=G[G.length-2]*st,lt=G[G.length-1]*st}}else{const st=(0,_.NS)(G);Y=Math.sqrt(st),lt=Math.sqrt(st)}return[Y,lt]}(Y),Pt=st[0],Wt=st[1];let Q=this.scale;if(Q/="fanIn"===this.mode?Math.max(1,Pt):"fanOut"===this.mode?Math.max(1,Wt):Math.max(1,(Pt+Wt)/2),"normal"===this.distribution){const ct=Math.sqrt(Q);if("float32"!==(lt=lt||"float32")&&"int32"!==lt)throw new f.nj(`${this.getClassName()} does not support dType ${lt}.`);return(0,p.Xu6)(Y,0,ct,lt,this.seed)}{const ct=Math.sqrt(3*Q);return(0,p.LGj)(Y,-ct,ct,lt,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return G.className="VarianceScaling",G})();p.m7h.registerClass(K);let it=(()=>{class G extends K{constructor(Y){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==Y?null:Y.seed})}getClassName(){return K.className}}return G.className="GlorotUniform",G})();p.m7h.registerClass(it);let J=(()=>{class G extends K{constructor(Y){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==Y?null:Y.seed})}getClassName(){return K.className}}return G.className="GlorotNormal",G})();p.m7h.registerClass(J);let y=(()=>{class G extends K{constructor(Y){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==Y?null:Y.seed})}getClassName(){return K.className}}return G.className="HeNormal",G})();p.m7h.registerClass(y);let F=(()=>{class G extends K{constructor(Y){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==Y?null:Y.seed})}getClassName(){return K.className}}return G.className="HeUniform",G})();p.m7h.registerClass(F);let tt=(()=>{class G extends K{constructor(Y){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==Y?null:Y.seed})}getClassName(){return K.className}}return G.className="LeCunNormal",G})();p.m7h.registerClass(tt);let at=(()=>{class G extends K{constructor(Y){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==Y?null:Y.seed})}getClassName(){return K.className}}return G.className="LeCunUniform",G})();p.m7h.registerClass(at);let j=(()=>{class G extends L{constructor(Y){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==Y.gain?this.DEFAULT_GAIN:Y.gain,this.seed=Y.seed}apply(Y,lt){return(0,p.lub)(()=>{if(Y.length<2)throw new f.nj("Shape must be at least 2D.");if("int32"!==lt&&"float32"!==lt&&void 0!==lt)throw new TypeError(`Unsupported data type ${lt}.`);const st=p.D5U.sizeFromShape(Y.slice(0,-1)),Pt=Y[Y.length-1],Wt=st*Pt;Wt>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${Wt}) elements: Slowness may result.`);const Q=[Math.max(Pt,st),Math.min(Pt,st)],ct=P.nG(Q,0,1,lt,this.seed),_t=p.$r2.qr(ct,!1);let ut=_t[0];const Ot=_t[1].flatten().stridedSlice([0],[Math.min(Pt,st)*Math.min(Pt,st)],[Math.min(Pt,st)+1]);return ut=(0,p.dC7)(ut,Ot.sign()),st<Pt&&(ut=ut.transpose()),(0,p.dC7)((0,p.iD$)(this.gain),ut.reshape(Y))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return G.className="Orthogonal",G})();p.m7h.registerClass(j);const w={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function x(G,ft={}){return(0,A.tU)(G,p.m7h.SerializationMap.getMap().classNameMap,ft,"initializer")}function b(G){return(0,A.Kj)(G)}function i(G){if("string"==typeof G){const ft=G in w?w[G]:G;if("GlorotNormal"===ft)return new J;if("GlorotUniform"===ft)return new it;if("HeNormal"===ft)return new y;if("HeUniform"===ft)return new F;if("LeCunNormal"===ft)return new tt;if("LeCunUniform"===ft)return new at;{const Y={};return Y.className=ft,Y.config={},x(Y)}}return G instanceof L?G:x(G)}},8518:(rt,H,o)=>{"use strict";o.d(H,{Z:()=>I,i:()=>v});var p=o(15861),P=o(30003);function I(A){return f.apply(this,arguments)}function f(){return(f=(0,p.Z)(function*(A){if(null==A)return;const _=[],C=[],S=[];for(const L in A){const O=A[L];if("number"!=typeof O){const N=O;_.push(N.data()),C.push(L),S.push(N)}}if(_.length>0){const L=yield Promise.all(_);for(let O=0;O<L.length;++O)A[C[O]]=L[O][0];(0,P.B90)(S)}})).apply(this,arguments)}function v(A){if(null!=A)for(const _ in A){const C=A[_];"number"!=typeof C&&C.dispose()}}},42688:(rt,H,o)=>{"use strict";o.d(H,{Bq:()=>A,D1:()=>S,Ds:()=>at,JE:()=>I,Kj:()=>N,L7:()=>U,Mx:()=>y,QX:()=>v,Tw:()=>K,WT:()=>j,hu:()=>f,iQ:()=>F,nK:()=>it,tU:()=>z,xn:()=>J,zW:()=>L,zZ:()=>_});var p=o(30003),P=o(18357);function I(x,b){if(Array.isArray(x)){let i=[];for(let G=0;G<b;G++)i=i.concat(x);return i}{const i=new Array(b);return i.fill(x),i}}function f(x,b){if(!x)throw new P.ps(b)}function v(x,b){let i=0;for(const G of x)G===b&&i++;return i}function A(x){return 1===x.length?x[0]:x}function _(x){return Array.isArray(x)?x:[x]}function S(x){const i=x.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==i[0]?i:"private"+i}function L(x){return x.length<=1||-1===x.indexOf("_")?x:x.replace(/[_]+(\w|$)/g,(b,i)=>i.toUpperCase())}let O={};function N(x){if(null==x)return null;const b={};return b.className=x.getClassName(),b.config=x.getConfig(),b}function B(x){if(null!=x&&"object"==typeof x)if(Array.isArray(x))x.forEach(b=>B(b));else{const b=Object.keys(x);for(const i of b){const G=x[i];null!=G&&"object"==typeof G&&(Array.isArray(G)||"ndarray"!==G.type||"number"!=typeof G.value?B(G):x[i]=G.value)}}}function z(x,b={},i={},G="object",ft=!1){if("string"==typeof x){let lt;if(x in i)lt=i[x];else if(x in O)lt=O[x];else if(lt=b[x],null==lt)throw new P.nu(`Unknown ${G}: ${x}. This may be due to one of the following reasons:\n1. The ${G} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${G} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return lt}{const Y=x;if(null==Y.className||null==Y.config)throw new P.nu(`${G}: Improper config format: ${JSON.stringify(Y)}.\n'className' and 'config' must set.`);const lt=Y.className;let st,Pt;if(lt in i?[st,Pt]=i[lt]:lt in O?[st,Pt]=O.className:lt in b&&([st,Pt]=b[lt]),null==st)throw new P.nu(`Unknown ${G}: ${lt}. This may be due to one of the following reasons:\n1. The ${G} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${G} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=Pt){const Wt={};for(const ut of Object.keys(O))Wt[ut]=O[ut];for(const ut of Object.keys(i))Wt[ut]=i[ut];Y.config.customObjects=Wt;const ct=Object.assign({},O);for(const ut of Object.keys(i))O[ut]=i[ut];B(Y.config);const _t=Pt(st,Y.config,i,ft);return O=Object.assign({},ct),_t}{const Wt=Object.assign({},O);for(const ct of Object.keys(i))O[ct]=i[ct];const Q=new st(Y.config);return O=Object.assign({},Wt),Q}}}function U(x,b){return-1*function V(x,b){return x<b?-1:x>b?1:0}(x,b)}function K(x){if(null==x)return x;const b=[];for(const i of x)-1===b.indexOf(i)&&b.push(i);return b}function it(x){if(null==x)throw new P.nu(`Invalid value in obj: ${JSON.stringify(x)}`);for(const b in x)if(x.hasOwnProperty(b))return!1;return!0}function J(x,b,i){if(null!=i&&x.indexOf(i)<0)throw new P.nu(`${i} is not a valid ${b}.  Valid values are ${x} or null/undefined.`)}function y(x,b,i=0,G=1/0){return f(i>=0),f(G>=i),Array.isArray(x)&&x.length>=i&&x.length<=G&&x.every(ft=>typeof ft===b)}function F(x,b){Array.isArray(x)?(p.D5U.assert(x.length>0,()=>`${b} is unexpectedly an empty array.`),x.forEach((i,G)=>F(i,`element ${G+1} of ${b}`))):p.D5U.assert(Number.isInteger(x)&&x>0,()=>`Expected ${b} to be a positive integer, but got ${tt(x)}.`)}function tt(x){return null===x?"null":Array.isArray(x)?"["+x.map(b=>tt(b)).join(",")+"]":"string"==typeof x?`"${x}"`:`${x}`}function at(x,b,i){let ft,G=null!=i?i():p.D5U.now();return(...lt)=>{const st=null!=i?i():p.D5U.now();return st-G<b||(G=st,ft=x(...lt)),ft}}function j(x){return"relu"===x?"relu":"linear"===x?"linear":"elu"===x?"elu":null}},41609:(rt,H,o)=>{"use strict";o.d(H,{a:()=>I,q:()=>f});var p=o(42688);function P(v,A,_){return("inboundNodes"===v||"outputLayers"===v||"inputLayers"===v)&&0===A&&"string"==typeof _}function I(v,A){if(null===v)return null;if("string"==typeof v)return p.zW(v);if("number"==typeof v||"boolean"==typeof v)return v;if(v instanceof Array){const _=[],C=v.length;for(let S=0;S<C;++S){const L=v[S];P(A,S,L)?_.push(L):_.push(I(L,A))}return _}{const _={};for(const C of Object.keys(v)){const S=v[C];if("name"===C&&"string"==typeof S)_[C]=S;else{const L=p.zW(C);_[L]=I(S,L)}}return _}}function f(v,A){if(null==v)return null;if("string"==typeof v)return p.D1(v);if("number"==typeof v||"boolean"==typeof v)return v;if(v instanceof Array){const _=[],C=v.length;for(let S=0;S<C;++S){const L=v[S];P(A,S,L)?_.push(L):_.push(f(L,A))}return _}{const _={};for(const C of Object.keys(v)){const S=v[C];_[p.D1(C)]="name"!==C&&"className"!==C||"string"!=typeof S?f(S,C):S}return _}}},3097:(rt,H,o)=>{"use strict";o.d(H,{FQ:()=>K,fU:()=>v,zb:()=>it});var p=o(30003),P=o(32547),I=o(65999);const f="Variable";class v{constructor(F,tt="float32",at=f,j=!0,w=null){this.dtype=tt??"float32",this.shape=F.shape,this.id=(0,P.L)(),this.originalName=(0,I.MU)(at=at??f),this.name=(0,I.w8)(this.originalName),this.trainable_=j,this.constraint=w,this.val=p.VD$(F,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(F){return this.assertNotDisposed(),function A(y,F){if(y.shape.toString()!==F.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(y.shape)+" vs. "+JSON.stringify(F.shape))}(this.val,F),this.val.id!==F.id&&(this.val.assign(F),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(F){this.trainable_=F,this.val.trainable=F}}function K(y){return y.map(F=>F.read())}function it(y){y.forEach(F=>{F[0].write(F[1])})}},89128:(rt,H,o)=>{var p=o(69864),P=o(93919),I=o(13263),f=o(95353),v=o(23358),A=o(53789),_=o(52508);_.alea=p,_.xor128=P,_.xorwow=I,_.xorshift7=f,_.xor4096=v,_.tychei=A,rt.exports=_}},qi={};function Vt(rt){var H=qi[rt];if(void 0!==H)return H.exports;var o=qi[rt]={id:rt,loaded:!1,exports:{}};return Ji[rt].call(o.exports,o,o.exports,Vt),o.loaded=!0,o.exports}Vt.m=Ji,Vt.x=()=>{var rt=Vt.O(void 0,[173,955,592],()=>Vt(3446));return Vt.O(rt)},Vt.amdD=function(){throw new Error("define cannot be used indirect")},Vt.amdO={},rt=[],Vt.O=(H,o,p,P)=>{if(!o){var f=1/0;for(I=0;I<rt.length;I++){for(var[o,p,P]=rt[I],v=!0,A=0;A<o.length;A++)(!1&P||f>=P)&&Object.keys(Vt.O).every(N=>Vt.O[N](o[A]))?o.splice(A--,1):(v=!1,P<f&&(f=P));if(v){rt.splice(I--,1);var _=p();void 0!==_&&(H=_)}}return H}P=P||0;for(var I=rt.length;I>0&&rt[I-1][2]>P;I--)rt[I]=rt[I-1];rt[I]=[o,p,P]},Vt.n=rt=>{var H=rt&&rt.__esModule?()=>rt.default:()=>rt;return Vt.d(H,{a:H}),H},Vt.d=(rt,H)=>{for(var o in H)Vt.o(H,o)&&!Vt.o(rt,o)&&Object.defineProperty(rt,o,{enumerable:!0,get:H[o]})},Vt.f={},Vt.e=rt=>Promise.all(Object.keys(Vt.f).reduce((H,o)=>(Vt.f[o](rt,H),H),[])),Vt.u=rt=>(592===rt?"common":rt)+"."+{173:"6a019ad7034bf591",592:"ebd45ad1caaf7f0e",955:"334700f3df848e44"}[rt]+".js",Vt.miniCssF=rt=>{},Vt.o=(rt,H)=>Object.prototype.hasOwnProperty.call(rt,H),Vt.r=rt=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(rt,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(rt,"__esModule",{value:!0})},Vt.nmd=rt=>(rt.paths=[],rt.children||(rt.children=[]),rt),Vt.j=446,(()=>{var rt;Vt.tt=()=>(void 0===rt&&(rt={createScriptURL:H=>H},typeof trustedTypes<"u"&&trustedTypes.createPolicy&&(rt=trustedTypes.createPolicy("angular#bundler",rt))),rt)})(),Vt.tu=rt=>Vt.tt().createScriptURL(rt),Vt.p="",(()=>{var rt={446:1};Vt.f.i=(P,I)=>{rt[P]||importScripts(Vt.tu(Vt.p+Vt.u(P)))};var o=self.webpackChunkgrade_scope_istic=self.webpackChunkgrade_scope_istic||[],p=o.push.bind(o);o.push=P=>{var[I,f,v]=P;for(var A in f)Vt.o(f,A)&&(Vt.m[A]=f[A]);for(v&&v(Vt);I.length;)rt[I.pop()]=1;p(P)}})(),(()=>{var rt=Vt.x;Vt.x=()=>Promise.all([173,955,592].map(Vt.e,Vt)).then(rt)})(),Vt.x()})();